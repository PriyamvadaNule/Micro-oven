

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Mar 04 19:25:19 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,space=0,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F877A Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0004                     fsr             equ	4
    72     0004                     fsr0            equ	4
    73     0000                     indf            equ	0
    74     0000                     indf0           equ	0
    75     0002                     pc              equ	2
    76     0002                     pcl             equ	2
    77     000A                     pclath          equ	10
    78     0003                     status          equ	3
    79     0000                     INDF            equ	0	;# 
    80     0001                     TMR0            equ	1	;# 
    81     0002                     PCL             equ	2	;# 
    82     0003                     STATUS          equ	3	;# 
    83     0004                     FSR             equ	4	;# 
    84     0005                     PORTA           equ	5	;# 
    85     0006                     PORTB           equ	6	;# 
    86     0007                     PORTC           equ	7	;# 
    87     0008                     PORTD           equ	8	;# 
    88     0009                     PORTE           equ	9	;# 
    89     000A                     PCLATH          equ	10	;# 
    90     000B                     INTCON          equ	11	;# 
    91     000C                     PIR1            equ	12	;# 
    92     000D                     PIR2            equ	13	;# 
    93     000E                     TMR1            equ	14	;# 
    94     000E                     TMR1L           equ	14	;# 
    95     000F                     TMR1H           equ	15	;# 
    96     0010                     T1CON           equ	16	;# 
    97     0011                     TMR2            equ	17	;# 
    98     0012                     T2CON           equ	18	;# 
    99     0013                     SSPBUF          equ	19	;# 
   100     0014                     SSPCON          equ	20	;# 
   101     0015                     CCPR1           equ	21	;# 
   102     0015                     CCPR1L          equ	21	;# 
   103     0016                     CCPR1H          equ	22	;# 
   104     0017                     CCP1CON         equ	23	;# 
   105     0018                     RCSTA           equ	24	;# 
   106     0019                     TXREG           equ	25	;# 
   107     001A                     RCREG           equ	26	;# 
   108     001B                     CCPR2           equ	27	;# 
   109     001B                     CCPR2L          equ	27	;# 
   110     001C                     CCPR2H          equ	28	;# 
   111     001D                     CCP2CON         equ	29	;# 
   112     001E                     ADRESH          equ	30	;# 
   113     001F                     ADCON0          equ	31	;# 
   114     0081                     OPTION_REG      equ	129	;# 
   115     0085                     TRISA           equ	133	;# 
   116     0086                     TRISB           equ	134	;# 
   117     0087                     TRISC           equ	135	;# 
   118     0088                     TRISD           equ	136	;# 
   119     0089                     TRISE           equ	137	;# 
   120     008C                     PIE1            equ	140	;# 
   121     008D                     PIE2            equ	141	;# 
   122     008E                     PCON            equ	142	;# 
   123     0091                     SSPCON2         equ	145	;# 
   124     0092                     PR2             equ	146	;# 
   125     0093                     SSPADD          equ	147	;# 
   126     0094                     SSPSTAT         equ	148	;# 
   127     0098                     TXSTA           equ	152	;# 
   128     0099                     SPBRG           equ	153	;# 
   129     009C                     CMCON           equ	156	;# 
   130     009D                     CVRCON          equ	157	;# 
   131     009E                     ADRESL          equ	158	;# 
   132     009F                     ADCON1          equ	159	;# 
   133     010C                     EEDATA          equ	268	;# 
   134     010D                     EEADR           equ	269	;# 
   135     010E                     EEDATH          equ	270	;# 
   136     010F                     EEADRH          equ	271	;# 
   137     018C                     EECON1          equ	396	;# 
   138     018D                     EECON2          equ	397	;# 
   139     0000                     INDF            equ	0	;# 
   140     0001                     TMR0            equ	1	;# 
   141     0002                     PCL             equ	2	;# 
   142     0003                     STATUS          equ	3	;# 
   143     0004                     FSR             equ	4	;# 
   144     0005                     PORTA           equ	5	;# 
   145     0006                     PORTB           equ	6	;# 
   146     0007                     PORTC           equ	7	;# 
   147     0008                     PORTD           equ	8	;# 
   148     0009                     PORTE           equ	9	;# 
   149     000A                     PCLATH          equ	10	;# 
   150     000B                     INTCON          equ	11	;# 
   151     000C                     PIR1            equ	12	;# 
   152     000D                     PIR2            equ	13	;# 
   153     000E                     TMR1            equ	14	;# 
   154     000E                     TMR1L           equ	14	;# 
   155     000F                     TMR1H           equ	15	;# 
   156     0010                     T1CON           equ	16	;# 
   157     0011                     TMR2            equ	17	;# 
   158     0012                     T2CON           equ	18	;# 
   159     0013                     SSPBUF          equ	19	;# 
   160     0014                     SSPCON          equ	20	;# 
   161     0015                     CCPR1           equ	21	;# 
   162     0015                     CCPR1L          equ	21	;# 
   163     0016                     CCPR1H          equ	22	;# 
   164     0017                     CCP1CON         equ	23	;# 
   165     0018                     RCSTA           equ	24	;# 
   166     0019                     TXREG           equ	25	;# 
   167     001A                     RCREG           equ	26	;# 
   168     001B                     CCPR2           equ	27	;# 
   169     001B                     CCPR2L          equ	27	;# 
   170     001C                     CCPR2H          equ	28	;# 
   171     001D                     CCP2CON         equ	29	;# 
   172     001E                     ADRESH          equ	30	;# 
   173     001F                     ADCON0          equ	31	;# 
   174     0081                     OPTION_REG      equ	129	;# 
   175     0085                     TRISA           equ	133	;# 
   176     0086                     TRISB           equ	134	;# 
   177     0087                     TRISC           equ	135	;# 
   178     0088                     TRISD           equ	136	;# 
   179     0089                     TRISE           equ	137	;# 
   180     008C                     PIE1            equ	140	;# 
   181     008D                     PIE2            equ	141	;# 
   182     008E                     PCON            equ	142	;# 
   183     0091                     SSPCON2         equ	145	;# 
   184     0092                     PR2             equ	146	;# 
   185     0093                     SSPADD          equ	147	;# 
   186     0094                     SSPSTAT         equ	148	;# 
   187     0098                     TXSTA           equ	152	;# 
   188     0099                     SPBRG           equ	153	;# 
   189     009C                     CMCON           equ	156	;# 
   190     009D                     CVRCON          equ	157	;# 
   191     009E                     ADRESL          equ	158	;# 
   192     009F                     ADCON1          equ	159	;# 
   193     010C                     EEDATA          equ	268	;# 
   194     010D                     EEADR           equ	269	;# 
   195     010E                     EEDATH          equ	270	;# 
   196     010F                     EEADRH          equ	271	;# 
   197     018C                     EECON1          equ	396	;# 
   198     018D                     EECON2          equ	397	;# 
   199     0000                     INDF            equ	0	;# 
   200     0001                     TMR0            equ	1	;# 
   201     0002                     PCL             equ	2	;# 
   202     0003                     STATUS          equ	3	;# 
   203     0004                     FSR             equ	4	;# 
   204     0005                     PORTA           equ	5	;# 
   205     0006                     PORTB           equ	6	;# 
   206     0007                     PORTC           equ	7	;# 
   207     0008                     PORTD           equ	8	;# 
   208     0009                     PORTE           equ	9	;# 
   209     000A                     PCLATH          equ	10	;# 
   210     000B                     INTCON          equ	11	;# 
   211     000C                     PIR1            equ	12	;# 
   212     000D                     PIR2            equ	13	;# 
   213     000E                     TMR1            equ	14	;# 
   214     000E                     TMR1L           equ	14	;# 
   215     000F                     TMR1H           equ	15	;# 
   216     0010                     T1CON           equ	16	;# 
   217     0011                     TMR2            equ	17	;# 
   218     0012                     T2CON           equ	18	;# 
   219     0013                     SSPBUF          equ	19	;# 
   220     0014                     SSPCON          equ	20	;# 
   221     0015                     CCPR1           equ	21	;# 
   222     0015                     CCPR1L          equ	21	;# 
   223     0016                     CCPR1H          equ	22	;# 
   224     0017                     CCP1CON         equ	23	;# 
   225     0018                     RCSTA           equ	24	;# 
   226     0019                     TXREG           equ	25	;# 
   227     001A                     RCREG           equ	26	;# 
   228     001B                     CCPR2           equ	27	;# 
   229     001B                     CCPR2L          equ	27	;# 
   230     001C                     CCPR2H          equ	28	;# 
   231     001D                     CCP2CON         equ	29	;# 
   232     001E                     ADRESH          equ	30	;# 
   233     001F                     ADCON0          equ	31	;# 
   234     0081                     OPTION_REG      equ	129	;# 
   235     0085                     TRISA           equ	133	;# 
   236     0086                     TRISB           equ	134	;# 
   237     0087                     TRISC           equ	135	;# 
   238     0088                     TRISD           equ	136	;# 
   239     0089                     TRISE           equ	137	;# 
   240     008C                     PIE1            equ	140	;# 
   241     008D                     PIE2            equ	141	;# 
   242     008E                     PCON            equ	142	;# 
   243     0091                     SSPCON2         equ	145	;# 
   244     0092                     PR2             equ	146	;# 
   245     0093                     SSPADD          equ	147	;# 
   246     0094                     SSPSTAT         equ	148	;# 
   247     0098                     TXSTA           equ	152	;# 
   248     0099                     SPBRG           equ	153	;# 
   249     009C                     CMCON           equ	156	;# 
   250     009D                     CVRCON          equ	157	;# 
   251     009E                     ADRESL          equ	158	;# 
   252     009F                     ADCON1          equ	159	;# 
   253     010C                     EEDATA          equ	268	;# 
   254     010D                     EEADR           equ	269	;# 
   255     010E                     EEDATH          equ	270	;# 
   256     010F                     EEADRH          equ	271	;# 
   257     018C                     EECON1          equ	396	;# 
   258     018D                     EECON2          equ	397	;# 
   259     0000                     INDF            equ	0	;# 
   260     0001                     TMR0            equ	1	;# 
   261     0002                     PCL             equ	2	;# 
   262     0003                     STATUS          equ	3	;# 
   263     0004                     FSR             equ	4	;# 
   264     0005                     PORTA           equ	5	;# 
   265     0006                     PORTB           equ	6	;# 
   266     0007                     PORTC           equ	7	;# 
   267     0008                     PORTD           equ	8	;# 
   268     0009                     PORTE           equ	9	;# 
   269     000A                     PCLATH          equ	10	;# 
   270     000B                     INTCON          equ	11	;# 
   271     000C                     PIR1            equ	12	;# 
   272     000D                     PIR2            equ	13	;# 
   273     000E                     TMR1            equ	14	;# 
   274     000E                     TMR1L           equ	14	;# 
   275     000F                     TMR1H           equ	15	;# 
   276     0010                     T1CON           equ	16	;# 
   277     0011                     TMR2            equ	17	;# 
   278     0012                     T2CON           equ	18	;# 
   279     0013                     SSPBUF          equ	19	;# 
   280     0014                     SSPCON          equ	20	;# 
   281     0015                     CCPR1           equ	21	;# 
   282     0015                     CCPR1L          equ	21	;# 
   283     0016                     CCPR1H          equ	22	;# 
   284     0017                     CCP1CON         equ	23	;# 
   285     0018                     RCSTA           equ	24	;# 
   286     0019                     TXREG           equ	25	;# 
   287     001A                     RCREG           equ	26	;# 
   288     001B                     CCPR2           equ	27	;# 
   289     001B                     CCPR2L          equ	27	;# 
   290     001C                     CCPR2H          equ	28	;# 
   291     001D                     CCP2CON         equ	29	;# 
   292     001E                     ADRESH          equ	30	;# 
   293     001F                     ADCON0          equ	31	;# 
   294     0081                     OPTION_REG      equ	129	;# 
   295     0085                     TRISA           equ	133	;# 
   296     0086                     TRISB           equ	134	;# 
   297     0087                     TRISC           equ	135	;# 
   298     0088                     TRISD           equ	136	;# 
   299     0089                     TRISE           equ	137	;# 
   300     008C                     PIE1            equ	140	;# 
   301     008D                     PIE2            equ	141	;# 
   302     008E                     PCON            equ	142	;# 
   303     0091                     SSPCON2         equ	145	;# 
   304     0092                     PR2             equ	146	;# 
   305     0093                     SSPADD          equ	147	;# 
   306     0094                     SSPSTAT         equ	148	;# 
   307     0098                     TXSTA           equ	152	;# 
   308     0099                     SPBRG           equ	153	;# 
   309     009C                     CMCON           equ	156	;# 
   310     009D                     CVRCON          equ	157	;# 
   311     009E                     ADRESL          equ	158	;# 
   312     009F                     ADCON1          equ	159	;# 
   313     010C                     EEDATA          equ	268	;# 
   314     010D                     EEADR           equ	269	;# 
   315     010E                     EEDATH          equ	270	;# 
   316     010F                     EEADRH          equ	271	;# 
   317     018C                     EECON1          equ	396	;# 
   318     018D                     EECON2          equ	397	;# 
   319     0000                     INDF            equ	0	;# 
   320     0001                     TMR0            equ	1	;# 
   321     0002                     PCL             equ	2	;# 
   322     0003                     STATUS          equ	3	;# 
   323     0004                     FSR             equ	4	;# 
   324     0005                     PORTA           equ	5	;# 
   325     0006                     PORTB           equ	6	;# 
   326     0007                     PORTC           equ	7	;# 
   327     0008                     PORTD           equ	8	;# 
   328     0009                     PORTE           equ	9	;# 
   329     000A                     PCLATH          equ	10	;# 
   330     000B                     INTCON          equ	11	;# 
   331     000C                     PIR1            equ	12	;# 
   332     000D                     PIR2            equ	13	;# 
   333     000E                     TMR1            equ	14	;# 
   334     000E                     TMR1L           equ	14	;# 
   335     000F                     TMR1H           equ	15	;# 
   336     0010                     T1CON           equ	16	;# 
   337     0011                     TMR2            equ	17	;# 
   338     0012                     T2CON           equ	18	;# 
   339     0013                     SSPBUF          equ	19	;# 
   340     0014                     SSPCON          equ	20	;# 
   341     0015                     CCPR1           equ	21	;# 
   342     0015                     CCPR1L          equ	21	;# 
   343     0016                     CCPR1H          equ	22	;# 
   344     0017                     CCP1CON         equ	23	;# 
   345     0018                     RCSTA           equ	24	;# 
   346     0019                     TXREG           equ	25	;# 
   347     001A                     RCREG           equ	26	;# 
   348     001B                     CCPR2           equ	27	;# 
   349     001B                     CCPR2L          equ	27	;# 
   350     001C                     CCPR2H          equ	28	;# 
   351     001D                     CCP2CON         equ	29	;# 
   352     001E                     ADRESH          equ	30	;# 
   353     001F                     ADCON0          equ	31	;# 
   354     0081                     OPTION_REG      equ	129	;# 
   355     0085                     TRISA           equ	133	;# 
   356     0086                     TRISB           equ	134	;# 
   357     0087                     TRISC           equ	135	;# 
   358     0088                     TRISD           equ	136	;# 
   359     0089                     TRISE           equ	137	;# 
   360     008C                     PIE1            equ	140	;# 
   361     008D                     PIE2            equ	141	;# 
   362     008E                     PCON            equ	142	;# 
   363     0091                     SSPCON2         equ	145	;# 
   364     0092                     PR2             equ	146	;# 
   365     0093                     SSPADD          equ	147	;# 
   366     0094                     SSPSTAT         equ	148	;# 
   367     0098                     TXSTA           equ	152	;# 
   368     0099                     SPBRG           equ	153	;# 
   369     009C                     CMCON           equ	156	;# 
   370     009D                     CVRCON          equ	157	;# 
   371     009E                     ADRESL          equ	158	;# 
   372     009F                     ADCON1          equ	159	;# 
   373     010C                     EEDATA          equ	268	;# 
   374     010D                     EEADR           equ	269	;# 
   375     010E                     EEDATH          equ	270	;# 
   376     010F                     EEADRH          equ	271	;# 
   377     018C                     EECON1          equ	396	;# 
   378     018D                     EECON2          equ	397	;# 
   379     0000                     INDF            equ	0	;# 
   380     0001                     TMR0            equ	1	;# 
   381     0002                     PCL             equ	2	;# 
   382     0003                     STATUS          equ	3	;# 
   383     0004                     FSR             equ	4	;# 
   384     0005                     PORTA           equ	5	;# 
   385     0006                     PORTB           equ	6	;# 
   386     0007                     PORTC           equ	7	;# 
   387     0008                     PORTD           equ	8	;# 
   388     0009                     PORTE           equ	9	;# 
   389     000A                     PCLATH          equ	10	;# 
   390     000B                     INTCON          equ	11	;# 
   391     000C                     PIR1            equ	12	;# 
   392     000D                     PIR2            equ	13	;# 
   393     000E                     TMR1            equ	14	;# 
   394     000E                     TMR1L           equ	14	;# 
   395     000F                     TMR1H           equ	15	;# 
   396     0010                     T1CON           equ	16	;# 
   397     0011                     TMR2            equ	17	;# 
   398     0012                     T2CON           equ	18	;# 
   399     0013                     SSPBUF          equ	19	;# 
   400     0014                     SSPCON          equ	20	;# 
   401     0015                     CCPR1           equ	21	;# 
   402     0015                     CCPR1L          equ	21	;# 
   403     0016                     CCPR1H          equ	22	;# 
   404     0017                     CCP1CON         equ	23	;# 
   405     0018                     RCSTA           equ	24	;# 
   406     0019                     TXREG           equ	25	;# 
   407     001A                     RCREG           equ	26	;# 
   408     001B                     CCPR2           equ	27	;# 
   409     001B                     CCPR2L          equ	27	;# 
   410     001C                     CCPR2H          equ	28	;# 
   411     001D                     CCP2CON         equ	29	;# 
   412     001E                     ADRESH          equ	30	;# 
   413     001F                     ADCON0          equ	31	;# 
   414     0081                     OPTION_REG      equ	129	;# 
   415     0085                     TRISA           equ	133	;# 
   416     0086                     TRISB           equ	134	;# 
   417     0087                     TRISC           equ	135	;# 
   418     0088                     TRISD           equ	136	;# 
   419     0089                     TRISE           equ	137	;# 
   420     008C                     PIE1            equ	140	;# 
   421     008D                     PIE2            equ	141	;# 
   422     008E                     PCON            equ	142	;# 
   423     0091                     SSPCON2         equ	145	;# 
   424     0092                     PR2             equ	146	;# 
   425     0093                     SSPADD          equ	147	;# 
   426     0094                     SSPSTAT         equ	148	;# 
   427     0098                     TXSTA           equ	152	;# 
   428     0099                     SPBRG           equ	153	;# 
   429     009C                     CMCON           equ	156	;# 
   430     009D                     CVRCON          equ	157	;# 
   431     009E                     ADRESL          equ	158	;# 
   432     009F                     ADCON1          equ	159	;# 
   433     010C                     EEDATA          equ	268	;# 
   434     010D                     EEADR           equ	269	;# 
   435     010E                     EEDATH          equ	270	;# 
   436     010F                     EEADRH          equ	271	;# 
   437     018C                     EECON1          equ	396	;# 
   438     018D                     EECON2          equ	397	;# 
   439                           
   440                           	psect	idataBANK0
   441     0E16                     __pidataBANK0:
   442                           
   443                           ;initializer for read_key@once
   444     0E16  3401               	retlw	1
   445     0E17  3400               	retlw	0
   446                           
   447                           ;initializer for _operation_flag
   448     0E18  3401               	retlw	1
   449     0E19  3400               	retlw	0
   450     0008                     _PORTD          set	8
   451     0091                     _T2CKPS1        set	145
   452     0090                     _T2CKPS0        set	144
   453     0032                     _RB2            set	50
   454     0031                     _RB1            set	49
   455     0030                     _RB0            set	48
   456     0040                     _RD0            set	64
   457     0041                     _RD1            set	65
   458     0042                     _RD2            set	66
   459     0043                     _RD3            set	67
   460     0092                     _TMR2ON         set	146
   461     005E                     _PEIE           set	94
   462     005F                     _GIE            set	95
   463     0039                     _RC1            set	57
   464     003A                     _RC2            set	58
   465     0061                     _TMR2IF         set	97
   466     0049                     _RE1            set	73
   467     004A                     _RE2            set	74
   468     0092                     _PR2            set	146
   469     0086                     _TRISB          set	134
   470     0088                     _TRISD          set	136
   471     0461                     _TMR2IE         set	1121
   472     040F                     _nRBPU          set	1039
   473     0439                     _TRISC1         set	1081
   474     043A                     _TRISC2         set	1082
   475     0449                     _TRISE1         set	1097
   476     044A                     _TRISE2         set	1098
   477                           
   478                           	psect	strings
   479     0500                     __pstrings:
   480     0500                     stringtab:
   481     0500                     __stringtab:
   482     0500                     stringcode:	
   483                           ;	String table - string pointers are 1 byte each
   484                           
   485     0500                     stringdir:
   486     0500  3005               	movlw	high stringdir
   487     0501  008A               	movwf	10
   488     0502  0804               	movf	4,w
   489     0503  0A84               	incf	4,f
   490     0504  0782               	addwf	2,f
   491     0505                     __stringbase:
   492     0505  3400               	retlw	0
   493     0506                     __end_of__stringtab:
   494     0506                     STR_2:
   495     0506  3420               	retlw	32	;' '
   496     0507  3420               	retlw	32	;' '
   497     0508  3450               	retlw	80	;'P'
   498     0509  344F               	retlw	79	;'O'
   499     050A  3457               	retlw	87	;'W'
   500     050B  3445               	retlw	69	;'E'
   501     050C  3452               	retlw	82	;'R'
   502     050D  3449               	retlw	73	;'I'
   503     050E  344E               	retlw	78	;'N'
   504     050F  3447               	retlw	71	;'G'
   505     0510  3420               	retlw	32	;' '
   506     0511  344F               	retlw	79	;'O'
   507     0512  344E               	retlw	78	;'N'
   508     0513  3420               	retlw	32	;' '
   509     0514  3420               	retlw	32	;' '
   510     0515  3420               	retlw	32	;' '
   511     0516  3400               	retlw	0
   512     0517                     STR_1:
   513     0517  3420               	retlw	32	;' '
   514     0518  3420               	retlw	32	;' '
   515     0519  3450               	retlw	80	;'P'
   516     051A  344F               	retlw	79	;'O'
   517     051B  3457               	retlw	87	;'W'
   518     051C  3445               	retlw	69	;'E'
   519     051D  3452               	retlw	82	;'R'
   520     051E  3420               	retlw	32	;' '
   521     051F  343D               	retlw	61	;'='
   522     0520  3420               	retlw	32	;' '
   523     0521  3439               	retlw	57	;'9'
   524     0522  3430               	retlw	48	;'0'
   525     0523  3430               	retlw	48	;'0'
   526     0524  3457               	retlw	87	;'W'
   527     0525  3420               	retlw	32	;' '
   528     0526  3420               	retlw	32	;' '
   529     0527  3400               	retlw	0
   530     0528                     STR_3:
   531     0528  3420               	retlw	32	;' '
   532     0529  344D               	retlw	77	;'M'
   533     052A  3449               	retlw	73	;'I'
   534     052B  3443               	retlw	67	;'C'
   535     052C  3452               	retlw	82	;'R'
   536     052D  344F               	retlw	79	;'O'
   537     052E  3457               	retlw	87	;'W'
   538     052F  3441               	retlw	65	;'A'
   539     0530  3456               	retlw	86	;'V'
   540     0531  3445               	retlw	69	;'E'
   541     0532  3420               	retlw	32	;' '
   542     0533  344F               	retlw	79	;'O'
   543     0534  3456               	retlw	86	;'V'
   544     0535  3445               	retlw	69	;'E'
   545     0536  344E               	retlw	78	;'N'
   546     0537  3420               	retlw	32	;' '
   547     0538  3400               	retlw	0
   548     0539                     STR_8:
   549     0539  3453               	retlw	83	;'S'
   550     053A  3445               	retlw	69	;'E'
   551     053B  3454               	retlw	84	;'T'
   552     053C  3420               	retlw	32	;' '
   553     053D  3454               	retlw	84	;'T'
   554     053E  3449               	retlw	73	;'I'
   555     053F  344D               	retlw	77	;'M'
   556     0540  3445               	retlw	69	;'E'
   557     0541  3420               	retlw	32	;' '
   558     0542  3428               	retlw	40	;'('
   559     0543  344D               	retlw	77	;'M'
   560     0544  344D               	retlw	77	;'M'
   561     0545  343A               	retlw	58	;':'
   562     0546  3453               	retlw	83	;'S'
   563     0547  3453               	retlw	83	;'S'
   564     0548  3429               	retlw	41	;')'
   565     0549  3400               	retlw	0
   566     054A                     STR_10:
   567     054A  342A               	retlw	42	;'*'
   568     054B  343A               	retlw	58	;':'
   569     054C  3443               	retlw	67	;'C'
   570     054D  344C               	retlw	76	;'L'
   571     054E  3445               	retlw	69	;'E'
   572     054F  3441               	retlw	65	;'A'
   573     0550  3452               	retlw	82	;'R'
   574     0551  3420               	retlw	32	;' '
   575     0552  3420               	retlw	32	;' '
   576     0553  3423               	retlw	35	;'#'
   577     0554  343A               	retlw	58	;':'
   578     0555  3445               	retlw	69	;'E'
   579     0556  344E               	retlw	78	;'N'
   580     0557  3454               	retlw	84	;'T'
   581     0558  3445               	retlw	69	;'E'
   582     0559  3452               	retlw	82	;'R'
   583     055A  3400               	retlw	0
   584     055B                     STR_17:
   585     055B  3420               	retlw	32	;' '
   586     055C  3420               	retlw	32	;' '
   587     055D  3420               	retlw	32	;' '
   588     055E  3454               	retlw	84	;'T'
   589     055F  3449               	retlw	73	;'I'
   590     0560  344D               	retlw	77	;'M'
   591     0561  3445               	retlw	69	;'E'
   592     0562  3420               	retlw	32	;' '
   593     0563  3455               	retlw	85	;'U'
   594     0564  3450               	retlw	80	;'P'
   595     0565  3421               	retlw	33	;'!'
   596     0566  3421               	retlw	33	;'!'
   597     0567  3420               	retlw	32	;' '
   598     0568  3420               	retlw	32	;' '
   599     0569  3420               	retlw	32	;' '
   600     056A  3400               	retlw	0
   601     056B                     STR_18:
   602     056B  3420               	retlw	32	;' '
   603     056C  3453               	retlw	83	;'S'
   604     056D  3445               	retlw	69	;'E'
   605     056E  3454               	retlw	84	;'T'
   606     056F  3420               	retlw	32	;' '
   607     0570  3454               	retlw	84	;'T'
   608     0571  3445               	retlw	69	;'E'
   609     0572  344D               	retlw	77	;'M'
   610     0573  3450               	retlw	80	;'P'
   611     0574  3428               	retlw	40	;'('
   612     0575  3420               	retlw	32	;' '
   613     0576  3443               	retlw	67	;'C'
   614     0577  3429               	retlw	41	;')'
   615     0578  3420               	retlw	32	;' '
   616     0579  3400               	retlw	0
   617     057A                     STR_22:
   618     057A  3420               	retlw	32	;' '
   619     057B  3420               	retlw	32	;' '
   620     057C  3450               	retlw	80	;'P'
   621     057D  3452               	retlw	82	;'R'
   622     057E  3445               	retlw	69	;'E'
   623     057F  342D               	retlw	45	;'-'
   624     0580  3448               	retlw	72	;'H'
   625     0581  3445               	retlw	69	;'E'
   626     0582  3441               	retlw	65	;'A'
   627     0583  3454               	retlw	84	;'T'
   628     0584  3449               	retlw	73	;'I'
   629     0585  344E               	retlw	78	;'N'
   630     0586  3447               	retlw	71	;'G'
   631     0587  3420               	retlw	32	;' '
   632     0588  3400               	retlw	0
   633     0589                     STR_14:
   634     0589  3434               	retlw	52	;'4'
   635     058A  342E               	retlw	46	;'.'
   636     058B  3453               	retlw	83	;'S'
   637     058C  3454               	retlw	84	;'T'
   638     058D  3441               	retlw	65	;'A'
   639     058E  3452               	retlw	82	;'R'
   640     058F  3454               	retlw	84	;'T'
   641     0590  342F               	retlw	47	;'/'
   642     0591  3452               	retlw	82	;'R'
   643     0592  3445               	retlw	69	;'E'
   644     0593  3453               	retlw	83	;'S'
   645     0594  3455               	retlw	85	;'U'
   646     0595  344D               	retlw	77	;'M'
   647     0596  3445               	retlw	69	;'E'
   648     0597  3400               	retlw	0
   649     0598                     STR_23:
   650     0598  3454               	retlw	84	;'T'
   651     0599  3449               	retlw	73	;'I'
   652     059A  344D               	retlw	77	;'M'
   653     059B  3445               	retlw	69	;'E'
   654     059C  3420               	retlw	32	;' '
   655     059D  3452               	retlw	82	;'R'
   656     059E  3445               	retlw	69	;'E'
   657     059F  344D               	retlw	77	;'M'
   658     05A0  342E               	retlw	46	;'.'
   659     05A1  3420               	retlw	32	;' '
   660     05A2  343D               	retlw	61	;'='
   661     05A3  3420               	retlw	32	;' '
   662     05A4  3400               	retlw	0
   663     05A5                     STR_6:
   664     05A5  3433               	retlw	51	;'3'
   665     05A6  342E               	retlw	46	;'.'
   666     05A7  3443               	retlw	67	;'C'
   667     05A8  344F               	retlw	79	;'O'
   668     05A9  344E               	retlw	78	;'N'
   669     05AA  3456               	retlw	86	;'V'
   670     05AB  3445               	retlw	69	;'E'
   671     05AC  3443               	retlw	67	;'C'
   672     05AD  3454               	retlw	84	;'T'
   673     05AE  3449               	retlw	73	;'I'
   674     05AF  344F               	retlw	79	;'O'
   675     05B0  344E               	retlw	78	;'N'
   676     05B1  3400               	retlw	0
   677     05B2                     STR_19:
   678     05B2  3420               	retlw	32	;' '
   679     05B3  3454               	retlw	84	;'T'
   680     05B4  3445               	retlw	69	;'E'
   681     05B5  344D               	retlw	77	;'M'
   682     05B6  3450               	retlw	80	;'P'
   683     05B7  3420               	retlw	32	;' '
   684     05B8  343D               	retlw	61	;'='
   685     05B9  3420               	retlw	32	;' '
   686     05BA  3400               	retlw	0
   687     05BB                     STR_9:
   688     05BB  3454               	retlw	84	;'T'
   689     05BC  3449               	retlw	73	;'I'
   690     05BD  344D               	retlw	77	;'M'
   691     05BE  3445               	retlw	69	;'E'
   692     05BF  3420               	retlw	32	;' '
   693     05C0  342D               	retlw	45	;'-'
   694     05C1  3420               	retlw	32	;' '
   695     05C2  3400               	retlw	0
   696     05C3                     STR_13:
   697     05C3  3454               	retlw	84	;'T'
   698     05C4  3449               	retlw	73	;'I'
   699     05C5  344D               	retlw	77	;'M'
   700     05C6  3445               	retlw	69	;'E'
   701     05C7  3420               	retlw	32	;' '
   702     05C8  343D               	retlw	61	;'='
   703     05C9  3420               	retlw	32	;' '
   704     05CA  3400               	retlw	0
   705     05CB                     STR_15:
   706     05CB  3435               	retlw	53	;'5'
   707     05CC  342E               	retlw	46	;'.'
   708     05CD  3450               	retlw	80	;'P'
   709     05CE  3441               	retlw	65	;'A'
   710     05CF  3455               	retlw	85	;'U'
   711     05D0  3453               	retlw	83	;'S'
   712     05D1  3445               	retlw	69	;'E'
   713     05D2  3400               	retlw	0
   714     05D3                     STR_5:
   715     05D3  3432               	retlw	50	;'2'
   716     05D4  342E               	retlw	46	;'.'
   717     05D5  3447               	retlw	71	;'G'
   718     05D6  3452               	retlw	82	;'R'
   719     05D7  3449               	retlw	73	;'I'
   720     05D8  344C               	retlw	76	;'L'
   721     05D9  344C               	retlw	76	;'L'
   722     05DA  3400               	retlw	0
   723     05DB                     STR_4:
   724     05DB  3431               	retlw	49	;'1'
   725     05DC  342E               	retlw	46	;'.'
   726     05DD  344D               	retlw	77	;'M'
   727     05DE  3449               	retlw	73	;'I'
   728     05DF  3443               	retlw	67	;'C'
   729     05E0  3452               	retlw	82	;'R'
   730     05E1  344F               	retlw	79	;'O'
   731     05E2  3400               	retlw	0
   732     05E3                     STR_7:
   733     05E3  3434               	retlw	52	;'4'
   734     05E4  342E               	retlw	46	;'.'
   735     05E5  3453               	retlw	83	;'S'
   736     05E6  3454               	retlw	84	;'T'
   737     05E7  3441               	retlw	65	;'A'
   738     05E8  3452               	retlw	82	;'R'
   739     05E9  3454               	retlw	84	;'T'
   740     05EA  3400               	retlw	0
   741     05EB                     STR_16:
   742     05EB  3436               	retlw	54	;'6'
   743     05EC  342E               	retlw	46	;'.'
   744     05ED  3453               	retlw	83	;'S'
   745     05EE  3454               	retlw	84	;'T'
   746     05EF  344F               	retlw	79	;'O'
   747     05F0  3450               	retlw	80	;'P'
   748     05F1  3400               	retlw	0
   749     054A                     STR_20          equ	STR_10
   750     0567                     STR_21          equ	STR_17+12
   751     0568                     STR_11          equ	STR_17+13
   752     0568                     STR_12          equ	STR_17+13
   753                           
   754                           	psect	cinit
   755     000F                     start_initialization:	
   756                           ; #config settings
   757                           
   758     000F                     __initialization:
   759                           
   760                           ; Initialize objects allocated to BANK0
   761     000F  120A  158A  2616  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   762     0014  00C0               	movwf	__pdataBANK0& (0+127)
   763     0015  120A  158A  2617  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   764     001A  00C1               	movwf	(__pdataBANK0+1)& (0+127)
   765     001B  120A  158A  2618  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   766     0020  00C2               	movwf	(__pdataBANK0+2)& (0+127)
   767     0021  120A  158A  2619  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   768     0026  00C3               	movwf	(__pdataBANK0+3)& (0+127)
   769                           
   770                           ; Clear objects allocated to BANK0
   771     0027  01B3               	clrf	__pbssBANK0& (0+127)
   772     0028  01B4               	clrf	(__pbssBANK0+1)& (0+127)
   773     0029  01B5               	clrf	(__pbssBANK0+2)& (0+127)
   774     002A  01B6               	clrf	(__pbssBANK0+3)& (0+127)
   775     002B  01B7               	clrf	(__pbssBANK0+4)& (0+127)
   776     002C  01B8               	clrf	(__pbssBANK0+5)& (0+127)
   777     002D  01B9               	clrf	(__pbssBANK0+6)& (0+127)
   778     002E  01BA               	clrf	(__pbssBANK0+7)& (0+127)
   779     002F  01BB               	clrf	(__pbssBANK0+8)& (0+127)
   780     0030  01BC               	clrf	(__pbssBANK0+9)& (0+127)
   781     0031  01BD               	clrf	(__pbssBANK0+10)& (0+127)
   782     0032  01BE               	clrf	(__pbssBANK0+11)& (0+127)
   783     0033  01BF               	clrf	(__pbssBANK0+12)& (0+127)
   784                           
   785                           ; Clear objects allocated to COMMON
   786     0034  01FA               	clrf	__pbssCOMMON& (0+127)
   787     0035  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   788     0036                     end_of_initialization:	
   789                           ;End of C runtime variable initialization code
   790                           
   791     0036                     __end_of__initialization:
   792     0036  0183               	clrf	3
   793     0037  120A  118A  29D4   	ljmp	_main	;jump to C main() function
   794                           
   795                           	psect	bssCOMMON
   796     007A                     __pbssCOMMON:
   797     007A                     isr@count:
   798     007A                     	ds	2
   799                           
   800                           	psect	bssBANK0
   801     0033                     __pbssBANK0:
   802     0033                     set_temp@wait:
   803     0033                     	ds	2
   804     0035                     set_time@wait:
   805     0035                     	ds	2
   806     0037                     set_temp@temp:
   807     0037                     	ds	1
   808     0038                     set_temp@blink:
   809     0038                     	ds	1
   810     0039                     set_temp@key_count:
   811     0039                     	ds	1
   812     003A                     set_time@blink:
   813     003A                     	ds	1
   814     003B                     set_time@blink_pos:
   815     003B                     	ds	1
   816     003C                     set_time@key_count:
   817     003C                     	ds	1
   818     003D                     _flag:
   819     003D                     	ds	1
   820     003E                     _min:
   821     003E                     	ds	1
   822     003F                     _sec:
   823     003F                     	ds	1
   824                           
   825                           	psect	dataBANK0
   826     0040                     __pdataBANK0:
   827     0040                     read_key@once:
   828     0040                     	ds	2
   829     0042                     _operation_flag:
   830     0042                     	ds	2
   831                           
   832                           	psect	cstackCOMMON
   833     0070                     __pcstackCOMMON:
   834     0070                     ?_init_matrix:
   835     0070                     ?_init_timer2:	
   836                           ; 1 bytes @ 0x0
   837                           
   838     0070                     ?_read_key:	
   839                           ; 1 bytes @ 0x0
   840                           
   841     0070                     ?_clear_screen:	
   842                           ; 1 bytes @ 0x0
   843                           
   844     0070                     ?_power_screen:	
   845                           ; 1 bytes @ 0x0
   846                           
   847     0070                     ?_menu:	
   848                           ; 1 bytes @ 0x0
   849                           
   850     0070                     ?_time_screen:	
   851                           ; 1 bytes @ 0x0
   852                           
   853     0070                     ?_init_disp_control:	
   854                           ; 1 bytes @ 0x0
   855                           
   856     0070                     ?_init_clcd:	
   857                           ; 1 bytes @ 0x0
   858                           
   859     0070                     ?_isr:	
   860                           ; 1 bytes @ 0x0
   861                           
   862     0070                     ?_init_config:	
   863                           ; 1 bytes @ 0x0
   864                           
   865     0070                     ?_main:	
   866                           ; 1 bytes @ 0x0
   867                           
   868     0070                     ?_scan_key:	
   869                           ; 1 bytes @ 0x0
   870                           
   871     0070                     ??_isr:	
   872                           ; 1 bytes @ 0x0
   873                           
   874                           
   875                           ; 1 bytes @ 0x0
   876     0070                     	ds	2
   877     0072                     ?_clcd_write:
   878     0072                     ?___bmul:	
   879                           ; 1 bytes @ 0x2
   880                           
   881     0072                     ?___awdiv:	
   882                           ; 1 bytes @ 0x2
   883                           
   884     0072                     clcd_write@mode:	
   885                           ; 2 bytes @ 0x2
   886                           
   887     0072                     ___bmul@multiplicand:	
   888                           ; 1 bytes @ 0x2
   889                           
   890     0072                     scan_key@i:	
   891                           ; 1 bytes @ 0x2
   892                           
   893     0072                     ___awdiv@divisor:	
   894                           ; 2 bytes @ 0x2
   895                           
   896     0072                     ??_init_matrix:	
   897                           ; 2 bytes @ 0x2
   898                           
   899     0072                     ??_init_timer2:	
   900                           ; 1 bytes @ 0x2
   901                           
   902     0072                     ??_scan_key:	
   903                           ; 1 bytes @ 0x2
   904                           
   905                           
   906                           ; 1 bytes @ 0x2
   907     0072                     	ds	1
   908     0073                     ___bmul@product:
   909     0073                     ??_clcd_write:	
   910                           ; 1 bytes @ 0x3
   911                           
   912     0073                     ??___bmul:	
   913                           ; 1 bytes @ 0x3
   914                           
   915                           
   916                           ; 1 bytes @ 0x3
   917     0073                     	ds	1
   918     0074                     read_key@MODE:
   919     0074                     ___bmul@multiplier:	
   920                           ; 1 bytes @ 0x4
   921                           
   922     0074                     ___awdiv@dividend:	
   923                           ; 1 bytes @ 0x4
   924                           
   925     0074                     ??_read_key:	
   926                           ; 2 bytes @ 0x4
   927                           
   928                           
   929                           ; 1 bytes @ 0x4
   930     0074                     	ds	1
   931     0075                     clcd_write@byte:
   932     0075                     read_key@key:	
   933                           ; 1 bytes @ 0x5
   934                           
   935                           
   936                           ; 1 bytes @ 0x5
   937     0075                     	ds	1
   938     0076                     ?_clcd_print:
   939     0076                     clcd_print@str:	
   940                           ; 1 bytes @ 0x6
   941                           
   942     0076                     ___awdiv@counter:	
   943                           ; 1 bytes @ 0x6
   944                           
   945     0076                     ??_clear_screen:	
   946                           ; 1 bytes @ 0x6
   947                           
   948     0076                     ??_init_disp_control:	
   949                           ; 1 bytes @ 0x6
   950                           
   951     0076                     ??___awdiv:	
   952                           ; 1 bytes @ 0x6
   953                           
   954                           
   955                           ; 1 bytes @ 0x6
   956     0076                     	ds	1
   957     0077                     clcd_print@addr:
   958     0077                     ___awdiv@sign:	
   959                           ; 1 bytes @ 0x7
   960                           
   961                           
   962                           ; 1 bytes @ 0x7
   963     0077                     	ds	1
   964     0078                     ___awdiv@quotient:
   965     0078                     ??_menu:	
   966                           ; 2 bytes @ 0x8
   967                           
   968     0078                     ??_init_clcd:	
   969                           ; 1 bytes @ 0x8
   970                           
   971     0078                     ??_clcd_print:	
   972                           ; 1 bytes @ 0x8
   973                           
   974     0078                     ??_init_config:	
   975                           ; 1 bytes @ 0x8
   976                           
   977                           
   978                           ; 1 bytes @ 0x8
   979     0078                     	ds	2
   980     007A                     ??_clcd_ch:
   981     007A                     ??___awmod:	
   982                           ; 1 bytes @ 0xA
   983                           
   984                           
   985                           	psect	cstackBANK0
   986     0020                     __pcstackBANK0:	
   987                           ; 1 bytes @ 0xA
   988                           
   989     0020                     ?___awmod:
   990     0020                     ___awmod@divisor:	
   991                           ; 2 bytes @ 0x0
   992                           
   993                           
   994                           ; 2 bytes @ 0x0
   995     0020                     	ds	2
   996     0022                     ___awmod@dividend:
   997                           
   998                           ; 2 bytes @ 0x2
   999     0022                     	ds	2
  1000     0024                     ___awmod@counter:
  1001                           
  1002                           ; 1 bytes @ 0x4
  1003     0024                     	ds	1
  1004     0025                     ___awmod@sign:
  1005                           
  1006                           ; 1 bytes @ 0x5
  1007     0025                     	ds	1
  1008     0026                     ?_clcd_ch:
  1009     0026                     clcd_ch@addr:	
  1010                           ; 1 bytes @ 0x6
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x6
  1014     0026                     	ds	1
  1015     0027                     clcd_ch@data:
  1016                           
  1017                           ; 1 bytes @ 0x7
  1018     0027                     	ds	1
  1019     0028                     ?_set_time:
  1020     0028                     ?_set_temp:	
  1021                           ; 1 bytes @ 0x8
  1022                           
  1023     0028                     set_time@reset_flag:	
  1024                           ; 1 bytes @ 0x8
  1025                           
  1026     0028                     set_temp@reset_flag:	
  1027                           ; 2 bytes @ 0x8
  1028                           
  1029     0028                     ??_power_screen:	
  1030                           ; 2 bytes @ 0x8
  1031                           
  1032     0028                     ??_time_screen:	
  1033                           ; 1 bytes @ 0x8
  1034                           
  1035                           
  1036                           ; 1 bytes @ 0x8
  1037     0028                     	ds	2
  1038     002A                     ??_set_time:
  1039     002A                     ??_set_temp:	
  1040                           ; 1 bytes @ 0xA
  1041                           
  1042                           
  1043                           ; 1 bytes @ 0xA
  1044     002A                     	ds	1
  1045     002B                     power_screen@i:
  1046                           
  1047                           ; 1 bytes @ 0xB
  1048     002B                     	ds	1
  1049     002C                     set_time@key:
  1050     002C                     set_temp@key:	
  1051                           ; 1 bytes @ 0xC
  1052                           
  1053                           
  1054                           ; 1 bytes @ 0xC
  1055     002C                     	ds	1
  1056     002D                     ??_main:
  1057                           
  1058                           ; 1 bytes @ 0xD
  1059     002D                     	ds	3
  1060     0030                     main@reset_flag:
  1061                           
  1062                           ; 2 bytes @ 0x10
  1063     0030                     	ds	2
  1064     0032                     main@key:
  1065                           
  1066                           ; 1 bytes @ 0x12
  1067     0032                     	ds	1
  1068                           
  1069                           	psect	maintext
  1070     01D4                     __pmaintext:	
  1071 ;;
  1072 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1073 ;;
  1074 ;; *************** function _main *****************
  1075 ;; Defined at:
  1076 ;;		line 29 in file "main.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  reset_flag      2   16[BANK0 ] int 
  1081 ;;  key             1   18[BANK0 ] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : B00/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         0       0       0       0       0
  1092 ;;      Locals:         0       3       0       0       0
  1093 ;;      Temps:          0       3       0       0       0
  1094 ;;      Totals:         0       6       0       0       0
  1095 ;;Total ram usage:        6 bytes
  1096 ;; Hardware stack levels required when called: 5
  1097 ;; This function calls:
  1098 ;;		_clcd_print
  1099 ;;		_clear_screen
  1100 ;;		_init_config
  1101 ;;		_menu
  1102 ;;		_power_screen
  1103 ;;		_read_key
  1104 ;;		_set_temp
  1105 ;;		_set_time
  1106 ;;		_time_screen
  1107 ;; This function is called by:
  1108 ;;		Startup code after reset
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112     01D4                     _main:	
  1113                           ;psect for function _main
  1114                           
  1115     01D4                     l2349:	
  1116                           ;incstack = 0
  1117                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1118                           
  1119                           
  1120                           ;main.c: 31:             clear_screen();
  1121     01D4  120A  158A  2655  120A  118A  	fcall	_init_config
  1122     01D9                     l2351:
  1123                           
  1124                           ;main.c: 35:             clear_screen();;main.c: 36:         }
  1125     01D9  3001               	movlw	1
  1126     01DA  120A  158A  26BD  120A  118A  	fcall	_read_key
  1127     01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1128     01E0  1303               	bcf	3,6	;RP1=0, select bank0
  1129     01E1  00B2               	movwf	main@key
  1130     01E2                     l2353:
  1131                           
  1132                           ;main.c: 37: 
  1133     01E2  3002               	movlw	2
  1134     01E3  0642               	xorwf	_operation_flag,w
  1135     01E4  0443               	iorwf	_operation_flag+1,w
  1136     01E5  1D03               	btfss	3,2
  1137     01E6  29E8               	goto	u2011
  1138     01E7  29E9               	goto	u2010
  1139     01E8                     u2011:
  1140     01E8  2A66               	goto	l2399
  1141     01E9                     u2010:
  1142     01E9                     l2355:
  1143                           
  1144                           ;main.c: 38: ;main.c: 40:         {
  1145     01E9  0332               	decf	main@key,w
  1146     01EA  1D03               	btfss	3,2
  1147     01EB  29ED               	goto	u2021
  1148     01EC  29EE               	goto	u2020
  1149     01ED                     u2021:
  1150     01ED  2A26               	goto	l2369
  1151     01EE                     u2020:
  1152     01EE                     l2357:
  1153                           
  1154                           ;main.c: 41:             clear_screen();;main.c: 42:             operation_flag = 0x04;
  1155     01EE  3003               	movlw	3
  1156     01EF  00C2               	movwf	_operation_flag
  1157     01F0  3000               	movlw	0
  1158     01F1  00C3               	movwf	_operation_flag+1
  1159                           
  1160                           ;main.c: 43:             reset_flag = 0x10;
  1161     01F2  3010               	movlw	16
  1162     01F3  00B0               	movwf	main@reset_flag
  1163     01F4  3000               	movlw	0
  1164     01F5  00B1               	movwf	main@reset_flag+1
  1165     01F6                     l2359:
  1166                           
  1167                           ;main.c: 44: 
  1168     01F6  120A  118A  27EF  120A  118A  	fcall	_clear_screen
  1169     01FB                     l2361:
  1170                           
  1171                           ;main.c: 45:         }
  1172     01FB  3007               	movlw	7
  1173     01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1174     01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1175     01FE  00AF               	movwf	??_main+2
  1176     01FF  3058               	movlw	88
  1177     0200  00AE               	movwf	??_main+1
  1178     0201  3059               	movlw	89
  1179     0202  00AD               	movwf	??_main
  1180     0203                     u2157:
  1181     0203  0BAD               	decfsz	??_main,f
  1182     0204  2A03               	goto	u2157
  1183     0205  0BAE               	decfsz	??_main+1,f
  1184     0206  2A03               	goto	u2157
  1185     0207  0BAF               	decfsz	??_main+2,f
  1186     0208  2A03               	goto	u2157
  1187     0209                     l2363:
  1188                           
  1189                           ;main.c: 46: 
  1190     0209  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1191     020A  00F6               	movwf	clcd_print@str
  1192     020B  30C0               	movlw	192
  1193     020C  00F7               	movwf	clcd_print@addr
  1194     020D  120A  158A  2673  120A  118A  	fcall	_clcd_print
  1195     0212                     l2365:
  1196                           
  1197                           ;main.c: 47: 
  1198     0212  3033               	movlw	51
  1199     0213  1283               	bcf	3,5	;RP0=0, select bank0
  1200     0214  1303               	bcf	3,6	;RP1=0, select bank0
  1201     0215  00AF               	movwf	??_main+2
  1202     0216  30BB               	movlw	187
  1203     0217  00AE               	movwf	??_main+1
  1204     0218  30DF               	movlw	223
  1205     0219  00AD               	movwf	??_main
  1206     021A                     u2167:
  1207     021A  0BAD               	decfsz	??_main,f
  1208     021B  2A1A               	goto	u2167
  1209     021C  0BAE               	decfsz	??_main+1,f
  1210     021D  2A1A               	goto	u2167
  1211     021E  0BAF               	decfsz	??_main+2,f
  1212     021F  2A1A               	goto	u2167
  1213     0220                     l2367:
  1214                           
  1215                           ;main.c: 48:         else if(key == 3)
  1216     0220  120A  118A  27EF  120A  118A  	fcall	_clear_screen
  1217                           
  1218                           ;main.c: 49:         {
  1219     0225  2B12               	goto	l2459
  1220     0226                     l2369:
  1221     0226  3002               	movlw	2
  1222     0227  0632               	xorwf	main@key,w
  1223     0228  1D03               	btfss	3,2
  1224     0229  2A2B               	goto	u2031
  1225     022A  2A2C               	goto	u2030
  1226     022B                     u2031:
  1227     022B  2A3C               	goto	l2377
  1228     022C                     u2030:
  1229     022C                     l2371:
  1230                           
  1231                           ;main.c: 53:         };main.c: 54: 
  1232     022C  120A  118A  27EF  120A  118A  	fcall	_clear_screen
  1233     0231                     l2373:
  1234                           
  1235                           ;main.c: 55: 
  1236     0231  3004               	movlw	4
  1237     0232  1283               	bcf	3,5	;RP0=0, select bank0
  1238     0233  1303               	bcf	3,6	;RP1=0, select bank0
  1239     0234  00C2               	movwf	_operation_flag
  1240     0235  3000               	movlw	0
  1241     0236  00C3               	movwf	_operation_flag+1
  1242     0237                     l2375:
  1243                           
  1244                           ;main.c: 56:         else if(key == 4)
  1245     0237  3010               	movlw	16
  1246     0238  00B0               	movwf	main@reset_flag
  1247     0239  3000               	movlw	0
  1248     023A  00B1               	movwf	main@reset_flag+1
  1249                           
  1250                           ;main.c: 58:             clear_screen();
  1251     023B  2B12               	goto	l2459
  1252     023C                     l2377:
  1253     023C  3003               	movlw	3
  1254     023D  0632               	xorwf	main@key,w
  1255     023E  1D03               	btfss	3,2
  1256     023F  2A41               	goto	u2041
  1257     0240  2A42               	goto	u2040
  1258     0241                     u2041:
  1259     0241  2A4E               	goto	l2385
  1260     0242                     u2040:
  1261     0242                     l2379:
  1262                           
  1263                           ;main.c: 62:             TMR2ON = 1;;main.c: 63:             operation_flag = 0x07;
  1264     0242  120A  118A  27EF  120A  118A  	fcall	_clear_screen
  1265     0247                     l2381:
  1266                           
  1267                           ;main.c: 64:         }
  1268     0247  3005               	movlw	5
  1269     0248  1283               	bcf	3,5	;RP0=0, select bank0
  1270     0249  1303               	bcf	3,6	;RP1=0, select bank0
  1271     024A  00C2               	movwf	_operation_flag
  1272     024B  3000               	movlw	0
  1273     024C  00C3               	movwf	_operation_flag+1
  1274     024D  2A37               	goto	l2375
  1275     024E                     l2385:
  1276     024E  3004               	movlw	4
  1277     024F  0632               	xorwf	main@key,w
  1278     0250  1D03               	btfss	3,2
  1279     0251  2A53               	goto	u2051
  1280     0252  2A54               	goto	u2050
  1281     0253                     u2051:
  1282     0253  2A65               	goto	l111
  1283     0254                     u2050:
  1284     0254                     l2387:
  1285                           
  1286                           ;main.c: 70:             {;main.c: 71:                 sec = sec + 30;
  1287     0254  120A  118A  27EF  120A  118A  	fcall	_clear_screen
  1288     0259                     l2389:
  1289                           
  1290                           ;main.c: 72:                 if(sec > 59)
  1291     0259  301E               	movlw	30
  1292     025A  1283               	bcf	3,5	;RP0=0, select bank0
  1293     025B  1303               	bcf	3,6	;RP1=0, select bank0
  1294     025C  00BF               	movwf	_sec
  1295     025D                     l2391:
  1296                           
  1297                           ;main.c: 73:                 {
  1298     025D  01BE               	clrf	_min
  1299     025E                     l2393:
  1300                           
  1301                           ;main.c: 74:                     min++;
  1302     025E  1507               	bsf	7,2	;volatile
  1303     025F                     l2395:
  1304                           
  1305                           ;main.c: 75:                     sec = sec - 60 ;
  1306     025F  1512               	bsf	18,2	;volatile
  1307     0260                     l2397:
  1308                           
  1309                           ;main.c: 76:                 }
  1310     0260  3007               	movlw	7
  1311     0261  00C2               	movwf	_operation_flag
  1312     0262  3000               	movlw	0
  1313     0263  00C3               	movwf	_operation_flag+1
  1314     0264  2B12               	goto	l2459
  1315     0265                     l111:
  1316                           
  1317                           ;main.c: 78: 
  1318     0265  2B12               	goto	l2459
  1319     0266                     l2399:
  1320     0266  3007               	movlw	7
  1321     0267  0642               	xorwf	_operation_flag,w
  1322     0268  0443               	iorwf	_operation_flag+1,w
  1323     0269  1D03               	btfss	3,2
  1324     026A  2A6C               	goto	u2061
  1325     026B  2A6D               	goto	u2060
  1326     026C                     u2061:
  1327     026C  2A98               	goto	l2417
  1328     026D                     u2060:
  1329     026D                     l2401:
  1330                           
  1331                           ;main.c: 81:                 operation_flag = 0x09;;main.c: 82:             }
  1332     026D  3004               	movlw	4
  1333     026E  0632               	xorwf	main@key,w
  1334     026F  1D03               	btfss	3,2
  1335     0270  2A72               	goto	u2071
  1336     0271  2A73               	goto	u2070
  1337     0272                     u2071:
  1338     0272  2A82               	goto	l2409
  1339     0273                     u2070:
  1340     0273                     l2403:
  1341                           
  1342                           ;main.c: 83: ;main.c: 84:             else if(key == 6)
  1343     0273  083F               	movf	_sec,w
  1344     0274  3E1E               	addlw	30
  1345     0275  00BF               	movwf	_sec
  1346     0276                     l2405:
  1347                           
  1348                           ;main.c: 85:             {
  1349     0276  303C               	movlw	60
  1350     0277  023F               	subwf	_sec,w
  1351     0278  1C03               	skipc
  1352     0279  2A7B               	goto	u2081
  1353     027A  2A7C               	goto	u2080
  1354     027B                     u2081:
  1355     027B  2B12               	goto	l2459
  1356     027C                     u2080:
  1357     027C                     l2407:
  1358                           
  1359                           ;main.c: 86:                 operation_flag = 0x0A;;main.c: 87:             }
  1360     027C  3001               	movlw	1
  1361     027D  07BE               	addwf	_min,f
  1362                           
  1363                           ;main.c: 88:         }
  1364     027E  083F               	movf	_sec,w
  1365     027F  3EC4               	addlw	196
  1366     0280  00BF               	movwf	_sec
  1367     0281  2B12               	goto	l2459
  1368     0282                     l2409:
  1369     0282  3005               	movlw	5
  1370     0283  0632               	xorwf	main@key,w
  1371     0284  1D03               	btfss	3,2
  1372     0285  2A87               	goto	u2091
  1373     0286  2A88               	goto	u2090
  1374     0287                     u2091:
  1375     0287  2A8D               	goto	l2413
  1376     0288                     u2090:
  1377     0288                     l2411:
  1378                           
  1379                           ;main.c: 93:             if(key == 4);main.c: 94:             {
  1380     0288  3009               	movlw	9
  1381     0289  00C2               	movwf	_operation_flag
  1382     028A  3000               	movlw	0
  1383     028B  00C3               	movwf	_operation_flag+1
  1384                           
  1385                           ;main.c: 95:                 RC2 = 1;
  1386     028C  2B12               	goto	l2459
  1387     028D                     l2413:
  1388     028D  3006               	movlw	6
  1389     028E  0632               	xorwf	main@key,w
  1390     028F  1D03               	btfss	3,2
  1391     0290  2A92               	goto	u2101
  1392     0291  2A93               	goto	u2100
  1393     0292                     u2101:
  1394     0292  2A65               	goto	l111
  1395     0293                     u2100:
  1396     0293                     l2415:
  1397                           
  1398                           ;main.c: 98:             };main.c: 99:         }
  1399     0293  300A               	movlw	10
  1400     0294  00C2               	movwf	_operation_flag
  1401     0295  3000               	movlw	0
  1402     0296  00C3               	movwf	_operation_flag+1
  1403     0297  2B12               	goto	l2459
  1404     0298                     l2417:
  1405     0298  3009               	movlw	9
  1406     0299  0642               	xorwf	_operation_flag,w
  1407     029A  0443               	iorwf	_operation_flag+1,w
  1408     029B  1D03               	btfss	3,2
  1409     029C  2A9E               	goto	u2111
  1410     029D  2A9F               	goto	u2110
  1411     029E                     u2111:
  1412     029E  2A65               	goto	l111
  1413     029F                     u2110:
  1414     029F                     l2419:
  1415                           
  1416                           ;main.c: 104:         {;main.c: 106:                 power_screen();
  1417     029F  3004               	movlw	4
  1418     02A0  0632               	xorwf	main@key,w
  1419     02A1  1D03               	btfss	3,2
  1420     02A2  2AA4               	goto	u2121
  1421     02A3  2AA5               	goto	u2120
  1422     02A4                     u2121:
  1423     02A4  2B12               	goto	l2459
  1424     02A5                     u2120:
  1425     02A5                     l2421:
  1426                           
  1427                           ;main.c: 107:                 operation_flag = 0x02;;main.c: 108:                 clear_
      +                          screen();
  1428     02A5  1507               	bsf	7,2	;volatile
  1429                           
  1430                           ;main.c: 109:                 break;
  1431     02A6  1512               	bsf	18,2	;volatile
  1432     02A7  2A60               	goto	l2397
  1433     02A8                     l2425:
  1434                           
  1435                           ;main.c: 119:              case 0x04:
  1436     02A8  120A  118A  2785  120A  118A  	fcall	_power_screen
  1437     02AD                     l2427:
  1438                           
  1439                           ;main.c: 120:                 set_time(key,reset_flag);
  1440     02AD  3002               	movlw	2
  1441     02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1442     02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1443     02B0  00C2               	movwf	_operation_flag
  1444     02B1  3000               	movlw	0
  1445     02B2  00C3               	movwf	_operation_flag+1
  1446     02B3                     l2429:
  1447                           
  1448                           ;main.c: 121:                 break;
  1449     02B3  120A  118A  27EF  120A  118A  	fcall	_clear_screen
  1450                           
  1451                           ;main.c: 122: 
  1452     02B8  2B33               	goto	l2461
  1453     02B9                     l2431:
  1454                           
  1455                           ;main.c: 125:                 {
  1456     02B9  120A  158A  2698  120A  118A  	fcall	_menu
  1457                           
  1458                           ;main.c: 126:                     set_temp(key,reset_flag);
  1459     02BE  2B33               	goto	l2461
  1460     02BF                     l2433:
  1461                           
  1462                           ;main.c: 129:                         reset_flag = 0x10;
  1463     02BF  0831               	movf	main@reset_flag+1,w
  1464     02C0  00A9               	movwf	set_time@reset_flag+1
  1465     02C1  0830               	movf	main@reset_flag,w
  1466     02C2  00A8               	movwf	set_time@reset_flag
  1467     02C3  0832               	movf	main@key,w
  1468     02C4  120A  118A  233D  120A  118A  	fcall	_set_time
  1469                           
  1470                           ;main.c: 130:                         continue;
  1471     02C9  2B33               	goto	l2461
  1472     02CA                     l2435:
  1473                           
  1474                           ;main.c: 133:                 else
  1475     02CA  0831               	movf	main@reset_flag+1,w
  1476     02CB  00A9               	movwf	set_time@reset_flag+1
  1477     02CC  0830               	movf	main@reset_flag,w
  1478     02CD  00A8               	movwf	set_time@reset_flag
  1479     02CE  0832               	movf	main@key,w
  1480     02CF  120A  118A  233D  120A  118A  	fcall	_set_time
  1481                           
  1482                           ;main.c: 134:                 {
  1483     02D4  2B33               	goto	l2461
  1484     02D5                     l2437:
  1485                           
  1486                           ;main.c: 137: 
  1487     02D5  083D               	movf	_flag,w
  1488     02D6  1D03               	btfss	3,2
  1489     02D7  2AD9               	goto	u2131
  1490     02D8  2ADA               	goto	u2130
  1491     02D9                     u2131:
  1492     02D9  2AF0               	goto	l2445
  1493     02DA                     u2130:
  1494     02DA                     l2439:
  1495                           
  1496                           ;main.c: 138:                 break;;main.c: 139: 
  1497     02DA  0831               	movf	main@reset_flag+1,w
  1498     02DB  00A9               	movwf	set_temp@reset_flag+1
  1499     02DC  0830               	movf	main@reset_flag,w
  1500     02DD  00A8               	movwf	set_temp@reset_flag
  1501     02DE  0832               	movf	main@key,w
  1502     02DF  120A  118A  203A  120A  118A  	fcall	_set_temp
  1503     02E4                     l2441:
  1504                           
  1505                           ;main.c: 140:             case 0x07:
  1506     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1507     02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1508     02E6  033D               	decf	_flag,w
  1509     02E7  1D03               	btfss	3,2
  1510     02E8  2AEA               	goto	u2141
  1511     02E9  2AEB               	goto	u2140
  1512     02EA                     u2141:
  1513     02EA  2B33               	goto	l2461
  1514     02EB                     u2140:
  1515     02EB                     l2443:
  1516                           
  1517                           ;main.c: 141:                 time_screen();;main.c: 142:                 break;
  1518     02EB  3010               	movlw	16
  1519     02EC  00B0               	movwf	main@reset_flag
  1520     02ED  3000               	movlw	0
  1521     02EE  00B1               	movwf	main@reset_flag+1
  1522                           
  1523                           ;main.c: 143: 
  1524     02EF  29D9               	goto	l2351
  1525     02F0                     l2445:
  1526                           
  1527                           ;main.c: 147:                 break;;main.c: 148: 
  1528     02F0  0831               	movf	main@reset_flag+1,w
  1529     02F1  00A9               	movwf	set_time@reset_flag+1
  1530     02F2  0830               	movf	main@reset_flag,w
  1531     02F3  00A8               	movwf	set_time@reset_flag
  1532     02F4  0832               	movf	main@key,w
  1533     02F5  120A  118A  233D  120A  118A  	fcall	_set_time
  1534     02FA  2B33               	goto	l2461
  1535     02FB                     l2447:
  1536                           
  1537                           ;main.c: 154:                 break;
  1538     02FB  120A  118A  25F2  120A  118A  	fcall	_time_screen
  1539                           
  1540                           ;main.c: 155: 
  1541     0300  2B33               	goto	l2461
  1542     0301                     l140:	
  1543                           ;main.c: 157:         }
  1544                           
  1545                           
  1546                           ;main.c: 158: 
  1547     0301  1107               	bcf	7,2	;volatile
  1548                           
  1549                           ;main.c: 159:         reset_flag = 0x0F;
  1550     0302  1112               	bcf	18,2	;volatile
  1551                           
  1552                           ;main.c: 160:     }
  1553     0303  2B33               	goto	l2461
  1554     0304                     l2449:
  1555                           
  1556                           ;main.c: 163:     return ;
  1557     0304  120A  118A  27EF  120A  118A  	fcall	_clear_screen
  1558     0309                     l2451:
  1559                           
  1560                           ;main.c: 164: 
  1561     0309  1283               	bcf	3,5	;RP0=0, select bank0
  1562     030A  1303               	bcf	3,6	;RP1=0, select bank0
  1563     030B  1107               	bcf	7,2	;volatile
  1564     030C                     l2453:
  1565                           
  1566                           ;main.c: 165: }
  1567     030C  1112               	bcf	18,2	;volatile
  1568     030D                     l2455:
  1569                           
  1570                           ;main.c: 166: 
  1571     030D  3002               	movlw	2
  1572     030E  00C2               	movwf	_operation_flag
  1573     030F  3000               	movlw	0
  1574     0310  00C3               	movwf	_operation_flag+1
  1575                           
  1576                           ;main.c: 167: 
  1577     0311  2B33               	goto	l2461
  1578     0312                     l2459:
  1579                           
  1580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1581                           ; Switch size 1, requested type "simple"
  1582                           ; Number of cases is 1, Range of values is 0 to 0
  1583                           ; switch strategies available:
  1584                           ; Name         Instructions Cycles
  1585                           ; simple_byte            4     3 (average)
  1586                           ; direct_byte           11     8 (fixed)
  1587                           ; jumptable            260     6 (fixed)
  1588                           ;	Chosen strategy is simple_byte
  1589     0312  1283               	bcf	3,5	;RP0=0, select bank0
  1590     0313  1303               	bcf	3,6	;RP1=0, select bank0
  1591     0314  0843               	movf	_operation_flag+1,w
  1592     0315  3A00               	xorlw	0	; case 0
  1593     0316  1903               	skipnz
  1594     0317  2B19               	goto	l2499
  1595     0318  2B33               	goto	l2461
  1596     0319                     l2499:
  1597                           
  1598                           ; Switch size 1, requested type "simple"
  1599                           ; Number of cases is 8, Range of values is 1 to 10
  1600                           ; switch strategies available:
  1601                           ; Name         Instructions Cycles
  1602                           ; simple_byte           25    13 (average)
  1603                           ; direct_byte           41    11 (fixed)
  1604                           ; jumptable            263     9 (fixed)
  1605                           ;	Chosen strategy is simple_byte
  1606     0319  0842               	movf	_operation_flag,w
  1607     031A  3A01               	xorlw	1	; case 1
  1608     031B  1903               	skipnz
  1609     031C  2AA8               	goto	l2425
  1610     031D  3A03               	xorlw	3	; case 2
  1611     031E  1903               	skipnz
  1612     031F  2AB9               	goto	l2431
  1613     0320  3A01               	xorlw	1	; case 3
  1614     0321  1903               	skipnz
  1615     0322  2ABF               	goto	l2433
  1616     0323  3A07               	xorlw	7	; case 4
  1617     0324  1903               	skipnz
  1618     0325  2ACA               	goto	l2435
  1619     0326  3A01               	xorlw	1	; case 5
  1620     0327  1903               	skipnz
  1621     0328  2AD5               	goto	l2437
  1622     0329  3A02               	xorlw	2	; case 7
  1623     032A  1903               	skipnz
  1624     032B  2AFB               	goto	l2447
  1625     032C  3A0E               	xorlw	14	; case 9
  1626     032D  1903               	skipnz
  1627     032E  2B01               	goto	l140
  1628     032F  3A03               	xorlw	3	; case 10
  1629     0330  1903               	skipnz
  1630     0331  2B04               	goto	l2449
  1631     0332  2B33               	goto	l2461
  1632     0333                     l2461:
  1633                           
  1634                           ;main.c: 172: }
  1635     0333  300F               	movlw	15
  1636     0334  1283               	bcf	3,5	;RP0=0, select bank0
  1637     0335  1303               	bcf	3,6	;RP1=0, select bank0
  1638     0336  00B0               	movwf	main@reset_flag
  1639     0337  3000               	movlw	0
  1640     0338  00B1               	movwf	main@reset_flag+1
  1641     0339  29D9               	goto	l2351
  1642     033A  120A  118A  280C   	ljmp	start
  1643     033D                     __end_of_main:
  1644                           
  1645                           	psect	text1
  1646     05F2                     __ptext1:	
  1647 ;; *************** function _time_screen *****************
  1648 ;; Defined at:
  1649 ;;		line 316 in file "main.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;		None
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1663 ;;      Params:         0       0       0       0       0
  1664 ;;      Locals:         0       0       0       0       0
  1665 ;;      Temps:          0       3       0       0       0
  1666 ;;      Totals:         0       3       0       0       0
  1667 ;;Total ram usage:        3 bytes
  1668 ;; Hardware stack levels used: 1
  1669 ;; Hardware stack levels required when called: 3
  1670 ;; This function calls:
  1671 ;;		___awdiv
  1672 ;;		___awmod
  1673 ;;		_clcd_ch
  1674 ;;		_clcd_print
  1675 ;;		_clear_screen
  1676 ;; This function is called by:
  1677 ;;		_main
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681     05F2                     _time_screen:	
  1682                           ;psect for function _time_screen
  1683                           
  1684     05F2                     l2057:	
  1685                           ;incstack = 0
  1686                           ; Regs used in _time_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1687                           
  1688                           
  1689                           ;main.c: 318:     clcd_print("5.PAUSE",(0x90 + 0));
  1690     05F2  30BE               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1691     05F3  00F6               	movwf	clcd_print@str
  1692     05F4  3080               	movlw	128
  1693     05F5  00F7               	movwf	clcd_print@addr
  1694     05F6  120A  158A  2673  120A  118A  	fcall	_clcd_print
  1695     05FB                     l2059:
  1696                           
  1697                           ;main.c: 321:     if(sec == 0 && min == 0)
  1698     05FB  3088               	movlw	136
  1699     05FC  1283               	bcf	3,5	;RP0=0, select bank0
  1700     05FD  1303               	bcf	3,6	;RP1=0, select bank0
  1701     05FE  00A6               	movwf	clcd_ch@addr
  1702     05FF  300A               	movlw	10
  1703     0600  00F2               	movwf	___awdiv@divisor
  1704     0601  3000               	movlw	0
  1705     0602  00F3               	movwf	___awdiv@divisor+1
  1706     0603  083E               	movf	_min,w
  1707     0604  00A8               	movwf	??_time_screen
  1708     0605  01A9               	clrf	??_time_screen+1
  1709     0606  0828               	movf	??_time_screen,w
  1710     0607  00F4               	movwf	___awdiv@dividend
  1711     0608  0829               	movf	??_time_screen+1,w
  1712     0609  00F5               	movwf	___awdiv@dividend+1
  1713     060A  120A  118A  2488  120A  118A  	fcall	___awdiv
  1714     060F  0872               	movf	?___awdiv,w
  1715     0610  3E30               	addlw	48
  1716     0611  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  1717     0616                     l2061:
  1718                           
  1719                           ;main.c: 322:     {
  1720     0616  3089               	movlw	137
  1721     0617  1283               	bcf	3,5	;RP0=0, select bank0
  1722     0618  1303               	bcf	3,6	;RP1=0, select bank0
  1723     0619  00A6               	movwf	clcd_ch@addr
  1724     061A  300A               	movlw	10
  1725     061B  00A0               	movwf	___awmod@divisor
  1726     061C  3000               	movlw	0
  1727     061D  00A1               	movwf	___awmod@divisor+1
  1728     061E  083E               	movf	_min,w
  1729     061F  00A8               	movwf	??_time_screen
  1730     0620  01A9               	clrf	??_time_screen+1
  1731     0621  0828               	movf	??_time_screen,w
  1732     0622  00A2               	movwf	___awmod@dividend
  1733     0623  0829               	movf	??_time_screen+1,w
  1734     0624  00A3               	movwf	___awmod@dividend+1
  1735     0625  120A  158A  27A7  120A  118A  	fcall	___awmod
  1736     062A  1283               	bcf	3,5	;RP0=0, select bank0
  1737     062B  1303               	bcf	3,6	;RP1=0, select bank0
  1738     062C  0820               	movf	?___awmod,w
  1739     062D  3E30               	addlw	48
  1740     062E  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  1741     0633                     l2063:
  1742                           
  1743                           ;main.c: 324:         clcd_print("   TIME UP!!   ",(0xC0 + 0));
  1744     0633  308A               	movlw	138
  1745     0634  1283               	bcf	3,5	;RP0=0, select bank0
  1746     0635  1303               	bcf	3,6	;RP1=0, select bank0
  1747     0636  00A6               	movwf	clcd_ch@addr
  1748     0637  303A               	movlw	58
  1749     0638  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  1750     063D                     l2065:
  1751                           
  1752                           ;main.c: 327:         clear_screen();
  1753     063D  308B               	movlw	139
  1754     063E  1283               	bcf	3,5	;RP0=0, select bank0
  1755     063F  1303               	bcf	3,6	;RP1=0, select bank0
  1756     0640  00A6               	movwf	clcd_ch@addr
  1757     0641  300A               	movlw	10
  1758     0642  00F2               	movwf	___awdiv@divisor
  1759     0643  3000               	movlw	0
  1760     0644  00F3               	movwf	___awdiv@divisor+1
  1761     0645  083F               	movf	_sec,w
  1762     0646  00A8               	movwf	??_time_screen
  1763     0647  01A9               	clrf	??_time_screen+1
  1764     0648  0828               	movf	??_time_screen,w
  1765     0649  00F4               	movwf	___awdiv@dividend
  1766     064A  0829               	movf	??_time_screen+1,w
  1767     064B  00F5               	movwf	___awdiv@dividend+1
  1768     064C  120A  118A  2488  120A  118A  	fcall	___awdiv
  1769     0651  0872               	movf	?___awdiv,w
  1770     0652  3E30               	addlw	48
  1771     0653  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  1772     0658                     l2067:
  1773                           
  1774                           ;main.c: 328:         RC2 = 0;
  1775     0658  308C               	movlw	140
  1776     0659  1283               	bcf	3,5	;RP0=0, select bank0
  1777     065A  1303               	bcf	3,6	;RP1=0, select bank0
  1778     065B  00A6               	movwf	clcd_ch@addr
  1779     065C  300A               	movlw	10
  1780     065D  00A0               	movwf	___awmod@divisor
  1781     065E  3000               	movlw	0
  1782     065F  00A1               	movwf	___awmod@divisor+1
  1783     0660  083F               	movf	_sec,w
  1784     0661  00A8               	movwf	??_time_screen
  1785     0662  01A9               	clrf	??_time_screen+1
  1786     0663  0828               	movf	??_time_screen,w
  1787     0664  00A2               	movwf	___awmod@dividend
  1788     0665  0829               	movf	??_time_screen+1,w
  1789     0666  00A3               	movwf	___awmod@dividend+1
  1790     0667  120A  158A  27A7  120A  118A  	fcall	___awmod
  1791     066C  1283               	bcf	3,5	;RP0=0, select bank0
  1792     066D  1303               	bcf	3,6	;RP1=0, select bank0
  1793     066E  0820               	movf	?___awmod,w
  1794     066F  3E30               	addlw	48
  1795     0670  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  1796     0675                     l2069:
  1797                           
  1798                           ;main.c: 330:         TMR2ON = 0;
  1799     0675  3084               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1800     0676  00F6               	movwf	clcd_print@str
  1801     0677  30C0               	movlw	192
  1802     0678  00F7               	movwf	clcd_print@addr
  1803     0679  120A  158A  2673  120A  118A  	fcall	_clcd_print
  1804     067E                     l2071:
  1805                           
  1806                           ;main.c: 331:         operation_flag = 0x02;
  1807     067E  30C6               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1808     067F  00F6               	movwf	clcd_print@str
  1809     0680  3090               	movlw	144
  1810     0681  00F7               	movwf	clcd_print@addr
  1811     0682  120A  158A  2673  120A  118A  	fcall	_clcd_print
  1812     0687                     l2073:
  1813                           
  1814                           ;main.c: 332: 
  1815     0687  30E6               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1816     0688  00F6               	movwf	clcd_print@str
  1817     0689  30D0               	movlw	208
  1818     068A  00F7               	movwf	clcd_print@addr
  1819     068B  120A  158A  2673  120A  118A  	fcall	_clcd_print
  1820     0690                     l2075:
  1821                           
  1822                           ;main.c: 334: }
  1823     0690  1283               	bcf	3,5	;RP0=0, select bank0
  1824     0691  1303               	bcf	3,6	;RP1=0, select bank0
  1825     0692  083F               	movf	_sec,w
  1826     0693  1D03               	btfss	3,2
  1827     0694  2E96               	goto	u1661
  1828     0695  2E97               	goto	u1660
  1829     0696                     u1661:
  1830     0696  2EC9               	goto	l188
  1831     0697                     u1660:
  1832     0697                     l2077:
  1833     0697  083E               	movf	_min,w
  1834     0698  1D03               	btfss	3,2
  1835     0699  2E9B               	goto	u1671
  1836     069A  2E9C               	goto	u1670
  1837     069B                     u1671:
  1838     069B  2EC9               	goto	l188
  1839     069C                     u1670:
  1840     069C                     l2079:
  1841                           
  1842                           ;main.c: 335: ;main.c: 336: 
  1843     069C  120A  118A  27EF  120A  118A  	fcall	_clear_screen
  1844     06A1                     l2081:
  1845                           
  1846                           ;main.c: 337: void set_temp(unsigned char key, int reset_flag)
  1847     06A1  3056               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  1848     06A2  00F6               	movwf	clcd_print@str
  1849     06A3  30C0               	movlw	192
  1850     06A4  00F7               	movwf	clcd_print@addr
  1851     06A5  120A  158A  2673  120A  118A  	fcall	_clcd_print
  1852     06AA                     l2083:
  1853                           
  1854                           ;main.c: 338: {
  1855     06AA  1283               	bcf	3,5	;RP0=0, select bank0
  1856     06AB  1303               	bcf	3,6	;RP1=0, select bank0
  1857     06AC  1487               	bsf	7,1	;volatile
  1858     06AD                     l2085:
  1859                           
  1860                           ;main.c: 339:     static unsigned char key_count,blink,temp;
  1861     06AD  304D               	movlw	77
  1862     06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1863     06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1864     06B0  00AA               	movwf	??_time_screen+2
  1865     06B1  3019               	movlw	25
  1866     06B2  00A9               	movwf	??_time_screen+1
  1867     06B3  304F               	movlw	79
  1868     06B4  00A8               	movwf	??_time_screen
  1869     06B5                     u2177:
  1870     06B5  0BA8               	decfsz	??_time_screen,f
  1871     06B6  2EB5               	goto	u2177
  1872     06B7  0BA9               	decfsz	??_time_screen+1,f
  1873     06B8  2EB5               	goto	u2177
  1874     06B9  0BAA               	decfsz	??_time_screen+2,f
  1875     06BA  2EB5               	goto	u2177
  1876     06BB                     l2087:
  1877                           
  1878                           ;main.c: 340:     static int wait;
  1879     06BB  120A  118A  27EF  120A  118A  	fcall	_clear_screen
  1880     06C0                     l2089:
  1881                           
  1882                           ;main.c: 341:     if(reset_flag == 0x10)
  1883     06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1884     06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1885     06C2  1107               	bcf	7,2	;volatile
  1886     06C3                     l2091:
  1887                           
  1888                           ;main.c: 342:     {
  1889     06C3  1087               	bcf	7,1	;volatile
  1890     06C4                     l2093:
  1891                           
  1892                           ;main.c: 343:         key_count = 0;
  1893     06C4  1112               	bcf	18,2	;volatile
  1894     06C5                     l2095:
  1895                           
  1896                           ;main.c: 344:         wait = 0;
  1897     06C5  3002               	movlw	2
  1898     06C6  00C2               	movwf	_operation_flag
  1899     06C7  3000               	movlw	0
  1900     06C8  00C3               	movwf	_operation_flag+1
  1901     06C9                     l188:
  1902     06C9  0008               	return
  1903     06CA                     __end_of_time_screen:
  1904                           
  1905                           	psect	text2
  1906     033D                     __ptext2:	
  1907 ;; *************** function _set_time *****************
  1908 ;; Defined at:
  1909 ;;		line 222 in file "main.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  key             1    wreg     unsigned char 
  1912 ;;  reset_flag      2    8[BANK0 ] int 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  key             1   12[BANK0 ] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1924 ;;      Params:         0       2       0       0       0
  1925 ;;      Locals:         0       1       0       0       0
  1926 ;;      Temps:          0       2       0       0       0
  1927 ;;      Totals:         0       5       0       0       0
  1928 ;;Total ram usage:        5 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 3
  1931 ;; This function calls:
  1932 ;;		___awdiv
  1933 ;;		___awmod
  1934 ;;		___bmul
  1935 ;;		_clcd_ch
  1936 ;;		_clcd_print
  1937 ;;		_clear_screen
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943     033D                     _set_time:	
  1944                           ;psect for function _set_time
  1945                           
  1946                           
  1947                           ;incstack = 0
  1948                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1949                           ;set_time@key stored from wreg
  1950     033D  1283               	bcf	3,5	;RP0=0, select bank0
  1951     033E  1303               	bcf	3,6	;RP1=0, select bank0
  1952     033F  00AC               	movwf	set_time@key
  1953     0340                     l2267:
  1954                           
  1955                           ;main.c: 222:         key = 0xFF;;main.c: 223:         clcd_print("SET TIME (MM:SS)",(0x
      +                          80 + 0));;main.c: 224:         clcd_print("TIME - ",(0xC0 + 0));;main.c: 225:         cl
      +                          cd_print("*:CLEAR  #:ENTER",(0xD0 + 0));;main.c: 227: 
  1956     0340  3010               	movlw	16
  1957     0341  0628               	xorwf	set_time@reset_flag,w
  1958     0342  0429               	iorwf	set_time@reset_flag+1,w
  1959     0343  1D03               	btfss	3,2
  1960     0344  2B46               	goto	u1871
  1961     0345  2B47               	goto	u1870
  1962     0346                     u1871:
  1963     0346  2B6B               	goto	l2279
  1964     0347                     u1870:
  1965     0347                     l2269:
  1966                           
  1967                           ;main.c: 228:     if((key != '*') && (key != '#') && (key != 0xFF));main.c: 229:     {
  1968     0347  01BC               	clrf	set_time@key_count
  1969                           
  1970                           ;main.c: 230:         key_count++;
  1971     0348  01BF               	clrf	_sec
  1972                           
  1973                           ;main.c: 231: 
  1974     0349  01BE               	clrf	_min
  1975                           
  1976                           ;main.c: 232: 
  1977     034A  01BB               	clrf	set_time@blink_pos
  1978                           
  1979                           ;main.c: 233:         if(key_count <=2)
  1980     034B  01B5               	clrf	set_time@wait
  1981     034C  01B6               	clrf	set_time@wait+1
  1982                           
  1983                           ;main.c: 234:         {
  1984     034D  01BA               	clrf	set_time@blink
  1985     034E                     l2271:
  1986                           
  1987                           ;main.c: 235:              sec = sec * 10 + key;
  1988     034E  30FF               	movlw	255
  1989     034F  00AC               	movwf	set_time@key
  1990     0350                     l2273:
  1991                           
  1992                           ;main.c: 236:              blink_pos = 0;
  1993     0350  3034               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1994     0351  00F6               	movwf	clcd_print@str
  1995     0352  3080               	movlw	128
  1996     0353  00F7               	movwf	clcd_print@addr
  1997     0354  120A  158A  2673  120A  118A  	fcall	_clcd_print
  1998     0359                     l2275:
  1999                           
  2000                           ;main.c: 237:         }
  2001     0359  30B6               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2002     035A  00F6               	movwf	clcd_print@str
  2003     035B  30C0               	movlw	192
  2004     035C  00F7               	movwf	clcd_print@addr
  2005     035D  120A  158A  2673  120A  118A  	fcall	_clcd_print
  2006     0362                     l2277:
  2007                           
  2008                           ;main.c: 238: 
  2009     0362  3045               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2010     0363  00F6               	movwf	clcd_print@str
  2011     0364  30D0               	movlw	208
  2012     0365  00F7               	movwf	clcd_print@addr
  2013     0366  120A  158A  2673  120A  118A  	fcall	_clcd_print
  2014     036B                     l2279:
  2015                           
  2016                           ;main.c: 241:             min = min * 10 + key ;
  2017     036B  302A               	movlw	42
  2018     036C  1283               	bcf	3,5	;RP0=0, select bank0
  2019     036D  1303               	bcf	3,6	;RP1=0, select bank0
  2020     036E  062C               	xorwf	set_time@key,w
  2021     036F  1903               	btfsc	3,2
  2022     0370  2B72               	goto	u1881
  2023     0371  2B73               	goto	u1880
  2024     0372                     u1881:
  2025     0372  2BAF               	goto	l2301
  2026     0373                     u1880:
  2027     0373                     l2281:
  2028     0373  3023               	movlw	35
  2029     0374  062C               	xorwf	set_time@key,w
  2030     0375  1903               	btfsc	3,2
  2031     0376  2B78               	goto	u1891
  2032     0377  2B79               	goto	u1890
  2033     0378                     u1891:
  2034     0378  2BAF               	goto	l2301
  2035     0379                     u1890:
  2036     0379                     l2283:
  2037     0379  0A2C               	incf	set_time@key,w
  2038     037A  1903               	btfsc	3,2
  2039     037B  2B7D               	goto	u1901
  2040     037C  2B7E               	goto	u1900
  2041     037D                     u1901:
  2042     037D  2BAF               	goto	l2301
  2043     037E                     u1900:
  2044     037E                     l2285:
  2045                           
  2046                           ;main.c: 242:             blink_pos = 1;;main.c: 243:         }
  2047     037E  3001               	movlw	1
  2048     037F  07BC               	addwf	set_time@key_count,f
  2049     0380                     l2287:
  2050                           
  2051                           ;main.c: 246:     else if(key == '*')
  2052     0380  3003               	movlw	3
  2053     0381  023C               	subwf	set_time@key_count,w
  2054     0382  1803               	skipnc
  2055     0383  2B85               	goto	u1911
  2056     0384  2B86               	goto	u1910
  2057     0385                     u1911:
  2058     0385  2B94               	goto	l2293
  2059     0386                     u1910:
  2060     0386                     l2289:
  2061                           
  2062                           ;main.c: 247:     {;main.c: 248:         if(blink_pos == 0)
  2063     0386  300A               	movlw	10
  2064     0387  00F2               	movwf	___bmul@multiplicand
  2065     0388  083F               	movf	_sec,w
  2066     0389  120A  158A  2642  120A  118A  	fcall	___bmul
  2067     038E  1283               	bcf	3,5	;RP0=0, select bank0
  2068     038F  1303               	bcf	3,6	;RP1=0, select bank0
  2069     0390  072C               	addwf	set_time@key,w
  2070     0391  00BF               	movwf	_sec
  2071     0392                     l2291:
  2072                           
  2073                           ;main.c: 249:         {
  2074     0392  01BB               	clrf	set_time@blink_pos
  2075                           
  2076                           ;main.c: 250:             sec = 0;
  2077     0393  2BD4               	goto	l2321
  2078     0394                     l2293:
  2079     0394  3003               	movlw	3
  2080     0395  023C               	subwf	set_time@key_count,w
  2081     0396  1C03               	skipc
  2082     0397  2B99               	goto	u1921
  2083     0398  2B9A               	goto	u1920
  2084     0399                     u1921:
  2085     0399  2BD4               	goto	l2321
  2086     039A                     u1920:
  2087     039A                     l2295:
  2088     039A  3005               	movlw	5
  2089     039B  023C               	subwf	set_time@key_count,w
  2090     039C  1803               	skipnc
  2091     039D  2B9F               	goto	u1931
  2092     039E  2BA0               	goto	u1930
  2093     039F                     u1931:
  2094     039F  2BD4               	goto	l2321
  2095     03A0                     u1930:
  2096     03A0                     l2297:
  2097                           
  2098                           ;main.c: 253:         else;main.c: 254:         {
  2099     03A0  300A               	movlw	10
  2100     03A1  00F2               	movwf	___bmul@multiplicand
  2101     03A2  083E               	movf	_min,w
  2102     03A3  120A  158A  2642  120A  118A  	fcall	___bmul
  2103     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2104     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2105     03AA  072C               	addwf	set_time@key,w
  2106     03AB  00BE               	movwf	_min
  2107     03AC                     l2299:
  2108                           
  2109                           ;main.c: 255:             min = 0;
  2110     03AC  3001               	movlw	1
  2111     03AD  00BB               	movwf	set_time@blink_pos
  2112     03AE  2BD4               	goto	l2321
  2113     03AF                     l2301:
  2114     03AF  302A               	movlw	42
  2115     03B0  062C               	xorwf	set_time@key,w
  2116     03B1  1D03               	btfss	3,2
  2117     03B2  2BB4               	goto	u1941
  2118     03B3  2BB5               	goto	u1940
  2119     03B4                     u1941:
  2120     03B4  2BC1               	goto	l2311
  2121     03B5                     u1940:
  2122     03B5                     l2303:
  2123                           
  2124                           ;main.c: 260:     else if(key == '#');main.c: 261:     {
  2125     03B5  083B               	movf	set_time@blink_pos,w
  2126     03B6  1D03               	btfss	3,2
  2127     03B7  2BB9               	goto	u1951
  2128     03B8  2BBA               	goto	u1950
  2129     03B9                     u1951:
  2130     03B9  2BBD               	goto	l2307
  2131     03BA                     u1950:
  2132     03BA                     l2305:
  2133                           
  2134                           ;main.c: 262:         clear_screen();;main.c: 263:         operation_flag = 0x07;
  2135     03BA  01BF               	clrf	_sec
  2136                           
  2137                           ;main.c: 264:         RC2 = 1;
  2138     03BB  01BC               	clrf	set_time@key_count
  2139                           
  2140                           ;main.c: 265:         TMR2ON = 1;
  2141     03BC  2BD4               	goto	l2321
  2142     03BD                     l2307:
  2143                           
  2144                           ;main.c: 267: ;main.c: 268:     }
  2145     03BD  01BE               	clrf	_min
  2146     03BE                     l2309:
  2147                           
  2148                           ;main.c: 269: 
  2149     03BE  3002               	movlw	2
  2150     03BF  00BC               	movwf	set_time@key_count
  2151     03C0  2BD4               	goto	l2321
  2152     03C1                     l2311:
  2153     03C1  3023               	movlw	35
  2154     03C2  062C               	xorwf	set_time@key,w
  2155     03C3  1D03               	btfss	3,2
  2156     03C4  2BC6               	goto	u1961
  2157     03C5  2BC7               	goto	u1960
  2158     03C6                     u1961:
  2159     03C6  2BD4               	goto	l2321
  2160     03C7                     u1960:
  2161     03C7                     l2313:
  2162                           
  2163                           ;main.c: 274: ;main.c: 275: 
  2164     03C7  120A  118A  27EF  120A  118A  	fcall	_clear_screen
  2165     03CC                     l2315:
  2166                           
  2167                           ;main.c: 276: 
  2168     03CC  3007               	movlw	7
  2169     03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2170     03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2171     03CF  00C2               	movwf	_operation_flag
  2172     03D0  3000               	movlw	0
  2173     03D1  00C3               	movwf	_operation_flag+1
  2174     03D2                     l2317:
  2175                           
  2176                           ;main.c: 277:     clcd_ch(min/10 + '0', (0xC0 + 7));
  2177     03D2  1507               	bsf	7,2	;volatile
  2178     03D3                     l2319:
  2179                           
  2180                           ;main.c: 278:     clcd_ch(min%10 + '0', (0xC0 + 8));
  2181     03D3  1512               	bsf	18,2	;volatile
  2182     03D4                     l2321:
  2183                           
  2184                           ;main.c: 283:     clcd_ch(sec/10 + '0', (0xC0 + 10));
  2185     03D4  3001               	movlw	1
  2186     03D5  07B5               	addwf	set_time@wait,f
  2187     03D6  1803               	skipnc
  2188     03D7  0AB6               	incf	set_time@wait+1,f
  2189     03D8  3000               	movlw	0
  2190     03D9  07B6               	addwf	set_time@wait+1,f
  2191     03DA  3015               	movlw	21
  2192     03DB  0635               	xorwf	set_time@wait,w
  2193     03DC  0436               	iorwf	set_time@wait+1,w
  2194     03DD  1D03               	btfss	3,2
  2195     03DE  2BE0               	goto	u1971
  2196     03DF  2BE1               	goto	u1970
  2197     03E0                     u1971:
  2198     03E0  2C63               	goto	l2337
  2199     03E1                     u1970:
  2200     03E1                     l2323:
  2201                           
  2202                           ;main.c: 284:     clcd_ch(sec%10 + '0', (0xC0 + 11));;main.c: 285:     }
  2203     03E1  01B5               	clrf	set_time@wait
  2204     03E2  01B6               	clrf	set_time@wait+1
  2205     03E3                     l2325:
  2206                           
  2207                           ;main.c: 286: 
  2208     03E3  083A               	movf	set_time@blink,w
  2209     03E4  1903               	btfsc	3,2
  2210     03E5  2BE7               	goto	u1981
  2211     03E6  2BE9               	goto	u1980
  2212     03E7                     u1981:
  2213     03E7  3001               	movlw	1
  2214     03E8  2BEA               	goto	u1990
  2215     03E9                     u1980:
  2216     03E9  3000               	movlw	0
  2217     03EA                     u1990:
  2218     03EA  00BA               	movwf	set_time@blink
  2219     03EB                     l2327:
  2220                           
  2221                           ;main.c: 290:         {
  2222     03EB  30C7               	movlw	199
  2223     03EC  00A6               	movwf	clcd_ch@addr
  2224     03ED  300A               	movlw	10
  2225     03EE  00F2               	movwf	___awdiv@divisor
  2226     03EF  3000               	movlw	0
  2227     03F0  00F3               	movwf	___awdiv@divisor+1
  2228     03F1  083E               	movf	_min,w
  2229     03F2  00AA               	movwf	??_set_time
  2230     03F3  01AB               	clrf	??_set_time+1
  2231     03F4  082A               	movf	??_set_time,w
  2232     03F5  00F4               	movwf	___awdiv@dividend
  2233     03F6  082B               	movf	??_set_time+1,w
  2234     03F7  00F5               	movwf	___awdiv@dividend+1
  2235     03F8  120A  118A  2488  120A  118A  	fcall	___awdiv
  2236     03FD  0872               	movf	?___awdiv,w
  2237     03FE  3E30               	addlw	48
  2238     03FF  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  2239     0404                     l2329:
  2240                           
  2241                           ;main.c: 291:             case 0:
  2242     0404  30C8               	movlw	200
  2243     0405  1283               	bcf	3,5	;RP0=0, select bank0
  2244     0406  1303               	bcf	3,6	;RP1=0, select bank0
  2245     0407  00A6               	movwf	clcd_ch@addr
  2246     0408  300A               	movlw	10
  2247     0409  00A0               	movwf	___awmod@divisor
  2248     040A  3000               	movlw	0
  2249     040B  00A1               	movwf	___awmod@divisor+1
  2250     040C  083E               	movf	_min,w
  2251     040D  00AA               	movwf	??_set_time
  2252     040E  01AB               	clrf	??_set_time+1
  2253     040F  082A               	movf	??_set_time,w
  2254     0410  00A2               	movwf	___awmod@dividend
  2255     0411  082B               	movf	??_set_time+1,w
  2256     0412  00A3               	movwf	___awmod@dividend+1
  2257     0413  120A  158A  27A7  120A  118A  	fcall	___awmod
  2258     0418  1283               	bcf	3,5	;RP0=0, select bank0
  2259     0419  1303               	bcf	3,6	;RP1=0, select bank0
  2260     041A  0820               	movf	?___awmod,w
  2261     041B  3E30               	addlw	48
  2262     041C  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  2263     0421                     l2331:
  2264                           
  2265                           ;main.c: 293:                 break;
  2266     0421  30C9               	movlw	201
  2267     0422  1283               	bcf	3,5	;RP0=0, select bank0
  2268     0423  1303               	bcf	3,6	;RP1=0, select bank0
  2269     0424  00A6               	movwf	clcd_ch@addr
  2270     0425  303A               	movlw	58
  2271     0426  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  2272     042B                     l2333:
  2273                           
  2274                           ;main.c: 296:                 break;
  2275     042B  30CA               	movlw	202
  2276     042C  1283               	bcf	3,5	;RP0=0, select bank0
  2277     042D  1303               	bcf	3,6	;RP1=0, select bank0
  2278     042E  00A6               	movwf	clcd_ch@addr
  2279     042F  300A               	movlw	10
  2280     0430  00F2               	movwf	___awdiv@divisor
  2281     0431  3000               	movlw	0
  2282     0432  00F3               	movwf	___awdiv@divisor+1
  2283     0433  083F               	movf	_sec,w
  2284     0434  00AA               	movwf	??_set_time
  2285     0435  01AB               	clrf	??_set_time+1
  2286     0436  082A               	movf	??_set_time,w
  2287     0437  00F4               	movwf	___awdiv@dividend
  2288     0438  082B               	movf	??_set_time+1,w
  2289     0439  00F5               	movwf	___awdiv@dividend+1
  2290     043A  120A  118A  2488  120A  118A  	fcall	___awdiv
  2291     043F  0872               	movf	?___awdiv,w
  2292     0440  3E30               	addlw	48
  2293     0441  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  2294     0446                     l2335:
  2295                           
  2296                           ;main.c: 297:         }
  2297     0446  30CB               	movlw	203
  2298     0447  1283               	bcf	3,5	;RP0=0, select bank0
  2299     0448  1303               	bcf	3,6	;RP1=0, select bank0
  2300     0449  00A6               	movwf	clcd_ch@addr
  2301     044A  300A               	movlw	10
  2302     044B  00A0               	movwf	___awmod@divisor
  2303     044C  3000               	movlw	0
  2304     044D  00A1               	movwf	___awmod@divisor+1
  2305     044E  083F               	movf	_sec,w
  2306     044F  00AA               	movwf	??_set_time
  2307     0450  01AB               	clrf	??_set_time+1
  2308     0451  082A               	movf	??_set_time,w
  2309     0452  00A2               	movwf	___awmod@dividend
  2310     0453  082B               	movf	??_set_time+1,w
  2311     0454  00A3               	movwf	___awmod@dividend+1
  2312     0455  120A  158A  27A7  120A  118A  	fcall	___awmod
  2313     045A  1283               	bcf	3,5	;RP0=0, select bank0
  2314     045B  1303               	bcf	3,6	;RP1=0, select bank0
  2315     045C  0820               	movf	?___awmod,w
  2316     045D  3E30               	addlw	48
  2317     045E  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  2318     0463                     l2337:
  2319                           
  2320                           ;main.c: 300: }
  2321     0463  1283               	bcf	3,5	;RP0=0, select bank0
  2322     0464  1303               	bcf	3,6	;RP1=0, select bank0
  2323     0465  083A               	movf	set_time@blink,w
  2324     0466  1903               	btfsc	3,2
  2325     0467  2C69               	goto	u2001
  2326     0468  2C6A               	goto	u2000
  2327     0469                     u2001:
  2328     0469  2C87               	goto	l184
  2329     046A                     u2000:
  2330     046A  2C7F               	goto	l2347
  2331     046B                     l2341:
  2332                           
  2333                           ;main.c: 305:     clcd_print("TIME = ",(0x80 + 0));
  2334     046B  3063               	movlw	(low (((STR_17+13)-__stringbase)| (0+32768)))& (0+255)
  2335     046C  00F6               	movwf	clcd_print@str
  2336     046D  30CA               	movlw	202
  2337     046E  00F7               	movwf	clcd_print@addr
  2338     046F  120A  158A  2673  120A  118A  	fcall	_clcd_print
  2339                           
  2340                           ;main.c: 306: 
  2341     0474  2C87               	goto	l184
  2342     0475                     l2343:
  2343                           
  2344                           ;main.c: 308:     clcd_ch(min/10 + '0', (0x80 + 8));
  2345     0475  3063               	movlw	(low (((STR_17+13)-__stringbase)| (0+32768)))& (0+255)
  2346     0476  00F6               	movwf	clcd_print@str
  2347     0477  30C7               	movlw	199
  2348     0478  00F7               	movwf	clcd_print@addr
  2349     0479  120A  158A  2673  120A  118A  	fcall	_clcd_print
  2350                           
  2351                           ;main.c: 309:     clcd_ch(min%10 + '0', (0x80 + 9));
  2352     047E  2C87               	goto	l184
  2353     047F                     l2347:
  2354     047F  083B               	movf	set_time@blink_pos,w
  2355                           
  2356                           ; Switch size 1, requested type "simple"
  2357                           ; Number of cases is 2, Range of values is 0 to 1
  2358                           ; switch strategies available:
  2359                           ; Name         Instructions Cycles
  2360                           ; simple_byte            7     4 (average)
  2361                           ; direct_byte           14     8 (fixed)
  2362                           ; jumptable            260     6 (fixed)
  2363                           ;	Chosen strategy is simple_byte
  2364     0480  3A00               	xorlw	0	; case 0
  2365     0481  1903               	skipnz
  2366     0482  2C6B               	goto	l2341
  2367     0483  3A01               	xorlw	1	; case 1
  2368     0484  1903               	skipnz
  2369     0485  2C75               	goto	l2343
  2370     0486  2C87               	goto	l184
  2371     0487                     l184:
  2372     0487  0008               	return
  2373     0488                     __end_of_set_time:
  2374                           
  2375                           	psect	text3
  2376     003A                     __ptext3:	
  2377 ;; *************** function _set_temp *****************
  2378 ;; Defined at:
  2379 ;;		line 350 in file "main.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  key             1    wreg     unsigned char 
  2382 ;;  reset_flag      2    8[BANK0 ] int 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  key             1   12[BANK0 ] unsigned char 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      void 
  2387 ;; Registers used:
  2388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2394 ;;      Params:         0       2       0       0       0
  2395 ;;      Locals:         0       1       0       0       0
  2396 ;;      Temps:          0       2       0       0       0
  2397 ;;      Totals:         0       5       0       0       0
  2398 ;;Total ram usage:        5 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; Hardware stack levels required when called: 3
  2401 ;; This function calls:
  2402 ;;		___awdiv
  2403 ;;		___awmod
  2404 ;;		___bmul
  2405 ;;		_clcd_ch
  2406 ;;		_clcd_print
  2407 ;;		_clear_screen
  2408 ;; This function is called by:
  2409 ;;		_main
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413     003A                     _set_temp:	
  2414                           ;psect for function _set_temp
  2415                           
  2416                           
  2417                           ;incstack = 0
  2418                           ; Regs used in _set_temp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2419                           ;set_temp@key stored from wreg
  2420     003A  1283               	bcf	3,5	;RP0=0, select bank0
  2421     003B  1303               	bcf	3,6	;RP1=0, select bank0
  2422     003C  00AC               	movwf	set_temp@key
  2423     003D                     l1981:
  2424                           
  2425                           ;main.c: 350:         clcd_ch(0xDF,(0x80 + 10));;main.c: 351:         clcd_print(" TEMP 
      +                          = ",(0xC0 + 0));;main.c: 352:         clcd_print("*:CLEAR  #:ENTER",(0xD0 + 0));;main.c:
      +                           353:     };main.c: 354: 
  2426     003D  3010               	movlw	16
  2427     003E  0628               	xorwf	set_temp@reset_flag,w
  2428     003F  0429               	iorwf	set_temp@reset_flag+1,w
  2429     0040  1D03               	btfss	3,2
  2430     0041  2843               	goto	u1511
  2431     0042  2844               	goto	u1510
  2432     0043                     u1511:
  2433     0043  2870               	goto	l1995
  2434     0044                     u1510:
  2435     0044                     l1983:
  2436                           
  2437                           ;main.c: 355:     if (blink);main.c: 356:     {
  2438     0044  01B9               	clrf	set_temp@key_count
  2439                           
  2440                           ;main.c: 357:         clcd_print("   ",(0xC0 + 8));
  2441     0045  01B3               	clrf	set_temp@wait
  2442     0046  01B4               	clrf	set_temp@wait+1
  2443                           
  2444                           ;main.c: 358:     }
  2445     0047  01B8               	clrf	set_temp@blink
  2446                           
  2447                           ;main.c: 359: 
  2448     0048  01B7               	clrf	set_temp@temp
  2449     0049                     l1985:
  2450                           
  2451                           ;main.c: 360:     if((key != '*') && (key != '#') && (key != 0xFF))
  2452     0049  30FF               	movlw	255
  2453     004A  00AC               	movwf	set_temp@key
  2454     004B                     l1987:
  2455                           
  2456                           ;main.c: 362:         key_count++;
  2457     004B  3066               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2458     004C  00F6               	movwf	clcd_print@str
  2459     004D  3080               	movlw	128
  2460     004E  00F7               	movwf	clcd_print@addr
  2461     004F  120A  158A  2673  120A  118A  	fcall	_clcd_print
  2462     0054                     l1989:
  2463                           
  2464                           ;main.c: 363: 
  2465     0054  308A               	movlw	138
  2466     0055  1283               	bcf	3,5	;RP0=0, select bank0
  2467     0056  1303               	bcf	3,6	;RP1=0, select bank0
  2468     0057  00A6               	movwf	clcd_ch@addr
  2469     0058  30DF               	movlw	223
  2470     0059  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  2471     005E                     l1991:
  2472                           
  2473                           ;main.c: 364: 
  2474     005E  30AD               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  2475     005F  00F6               	movwf	clcd_print@str
  2476     0060  30C0               	movlw	192
  2477     0061  00F7               	movwf	clcd_print@addr
  2478     0062  120A  158A  2673  120A  118A  	fcall	_clcd_print
  2479     0067                     l1993:
  2480                           
  2481                           ;main.c: 365:         if(key_count <=3)
  2482     0067  3045               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2483     0068  00F6               	movwf	clcd_print@str
  2484     0069  30D0               	movlw	208
  2485     006A  00F7               	movwf	clcd_print@addr
  2486     006B  120A  158A  2673  120A  118A  	fcall	_clcd_print
  2487     0070                     l1995:
  2488                           
  2489                           ;main.c: 368:         }
  2490     0070  1283               	bcf	3,5	;RP0=0, select bank0
  2491     0071  1303               	bcf	3,6	;RP1=0, select bank0
  2492     0072  0838               	movf	set_temp@blink,w
  2493     0073  1903               	btfsc	3,2
  2494     0074  2876               	goto	u1521
  2495     0075  2877               	goto	u1520
  2496     0076                     u1521:
  2497     0076  2880               	goto	l1999
  2498     0077                     u1520:
  2499     0077                     l1997:
  2500                           
  2501                           ;main.c: 369: ;main.c: 370:     }
  2502     0077  3062               	movlw	(low (((STR_17+12)-__stringbase)| (0+32768)))& (0+255)
  2503     0078  00F6               	movwf	clcd_print@str
  2504     0079  30C8               	movlw	200
  2505     007A  00F7               	movwf	clcd_print@addr
  2506     007B  120A  158A  2673  120A  118A  	fcall	_clcd_print
  2507     0080                     l1999:
  2508                           
  2509                           ;main.c: 373: 
  2510     0080  302A               	movlw	42
  2511     0081  1283               	bcf	3,5	;RP0=0, select bank0
  2512     0082  1303               	bcf	3,6	;RP1=0, select bank0
  2513     0083  062C               	xorwf	set_temp@key,w
  2514     0084  1903               	btfsc	3,2
  2515     0085  2887               	goto	u1531
  2516     0086  2888               	goto	u1530
  2517     0087                     u1531:
  2518     0087  28A8               	goto	l2011
  2519     0088                     u1530:
  2520     0088                     l2001:
  2521     0088  3023               	movlw	35
  2522     0089  062C               	xorwf	set_temp@key,w
  2523     008A  1903               	btfsc	3,2
  2524     008B  288D               	goto	u1541
  2525     008C  288E               	goto	u1540
  2526     008D                     u1541:
  2527     008D  28A8               	goto	l2011
  2528     008E                     u1540:
  2529     008E                     l2003:
  2530     008E  0A2C               	incf	set_temp@key,w
  2531     008F  1903               	btfsc	3,2
  2532     0090  2892               	goto	u1551
  2533     0091  2893               	goto	u1550
  2534     0092                     u1551:
  2535     0092  28A8               	goto	l2011
  2536     0093                     u1550:
  2537     0093                     l2005:
  2538                           
  2539                           ;main.c: 374:             temp = 0;;main.c: 375:             key_count = 0;
  2540     0093  3001               	movlw	1
  2541     0094  07B9               	addwf	set_temp@key_count,f
  2542     0095                     l2007:
  2543                           
  2544                           ;main.c: 378:     else if (temp <= 180)
  2545     0095  3004               	movlw	4
  2546     0096  0239               	subwf	set_temp@key_count,w
  2547     0097  1803               	skipnc
  2548     0098  289A               	goto	u1561
  2549     0099  289B               	goto	u1560
  2550     009A                     u1561:
  2551     009A  29D3               	goto	l215
  2552     009B                     u1560:
  2553     009B                     l2009:
  2554                           
  2555                           ;main.c: 379:     {;main.c: 380:         if(key == '#')
  2556     009B  300A               	movlw	10
  2557     009C  00F2               	movwf	___bmul@multiplicand
  2558     009D  0837               	movf	set_temp@temp,w
  2559     009E  120A  158A  2642  120A  118A  	fcall	___bmul
  2560     00A3  1283               	bcf	3,5	;RP0=0, select bank0
  2561     00A4  1303               	bcf	3,6	;RP1=0, select bank0
  2562     00A5  072C               	addwf	set_temp@key,w
  2563     00A6  00B7               	movwf	set_temp@temp
  2564     00A7  29D3               	goto	l215
  2565     00A8                     l2011:
  2566     00A8  302A               	movlw	42
  2567     00A9  062C               	xorwf	set_temp@key,w
  2568     00AA  1D03               	btfss	3,2
  2569     00AB  28AD               	goto	u1571
  2570     00AC  28AE               	goto	u1570
  2571     00AD                     u1571:
  2572     00AD  28B1               	goto	l2015
  2573     00AE                     u1570:
  2574     00AE                     l2013:
  2575                           
  2576                           ;main.c: 385:         sec = 18;;main.c: 387:         while(sec != 0)
  2577     00AE  01B7               	clrf	set_temp@temp
  2578                           
  2579                           ;main.c: 388:         {
  2580     00AF  01B9               	clrf	set_temp@key_count
  2581                           
  2582                           ;main.c: 389:         clcd_ch((sec/100) + '0',(0x90 + 12));
  2583     00B0  29D3               	goto	l215
  2584     00B1                     l2015:
  2585     00B1  30B5               	movlw	181
  2586     00B2  0237               	subwf	set_temp@temp,w
  2587     00B3  1803               	skipnc
  2588     00B4  28B6               	goto	u1581
  2589     00B5  28B7               	goto	u1580
  2590     00B6                     u1581:
  2591     00B6  29CC               	goto	l2053
  2592     00B7                     u1580:
  2593     00B7                     l2017:
  2594                           
  2595                           ;main.c: 392:         };main.c: 393: 
  2596     00B7  3023               	movlw	35
  2597     00B8  062C               	xorwf	set_temp@key,w
  2598     00B9  1D03               	btfss	3,2
  2599     00BA  28BC               	goto	u1591
  2600     00BB  28BD               	goto	u1590
  2601     00BC                     u1591:
  2602     00BC  2952               	goto	l2041
  2603     00BD                     u1590:
  2604     00BD                     l2019:
  2605                           
  2606                           ;main.c: 394:         if(sec == 0);main.c: 395:         {
  2607     00BD  120A  118A  27EF  120A  118A  	fcall	_clear_screen
  2608     00C2                     l2021:
  2609                           
  2610                           ;main.c: 396:             clear_screen();
  2611     00C2  3075               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
  2612     00C3  00F6               	movwf	clcd_print@str
  2613     00C4  3080               	movlw	128
  2614     00C5  00F7               	movwf	clcd_print@addr
  2615     00C6  120A  158A  2673  120A  118A  	fcall	_clcd_print
  2616     00CB                     l2023:
  2617                           
  2618                           ;main.c: 397:             flag = 1;
  2619     00CB  3093               	movlw	(low ((STR_23-__stringbase)| (0+32768)))& (0+255)
  2620     00CC  00F6               	movwf	clcd_print@str
  2621     00CD  3090               	movlw	144
  2622     00CE  00F7               	movwf	clcd_print@addr
  2623     00CF  120A  158A  2673  120A  118A  	fcall	_clcd_print
  2624     00D4                     l2025:
  2625                           
  2626                           ;main.c: 398:             TMR2ON = 0;
  2627     00D4  3012               	movlw	18
  2628     00D5  1283               	bcf	3,5	;RP0=0, select bank0
  2629     00D6  1303               	bcf	3,6	;RP1=0, select bank0
  2630     00D7  00BF               	movwf	_sec
  2631     00D8                     l2027:
  2632                           
  2633                           ;main.c: 399:         }
  2634     00D8  1512               	bsf	18,2	;volatile
  2635                           
  2636                           ;main.c: 400: 
  2637     00D9  293C               	goto	l2031
  2638     00DA                     l2029:
  2639                           
  2640                           ;main.c: 401:     };main.c: 402: 
  2641     00DA  309C               	movlw	156
  2642     00DB  00A6               	movwf	clcd_ch@addr
  2643     00DC  3064               	movlw	100
  2644     00DD  00F2               	movwf	___awdiv@divisor
  2645     00DE  3000               	movlw	0
  2646     00DF  00F3               	movwf	___awdiv@divisor+1
  2647     00E0  083F               	movf	_sec,w
  2648     00E1  00AA               	movwf	??_set_temp
  2649     00E2  01AB               	clrf	??_set_temp+1
  2650     00E3  082A               	movf	??_set_temp,w
  2651     00E4  00F4               	movwf	___awdiv@dividend
  2652     00E5  082B               	movf	??_set_temp+1,w
  2653     00E6  00F5               	movwf	___awdiv@dividend+1
  2654     00E7  120A  118A  2488  120A  118A  	fcall	___awdiv
  2655     00EC  0872               	movf	?___awdiv,w
  2656     00ED  3E30               	addlw	48
  2657     00EE  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  2658                           
  2659                           ;main.c: 403:     if(wait++ == 20)
  2660     00F3  309D               	movlw	157
  2661     00F4  1283               	bcf	3,5	;RP0=0, select bank0
  2662     00F5  1303               	bcf	3,6	;RP1=0, select bank0
  2663     00F6  00A6               	movwf	clcd_ch@addr
  2664     00F7  300A               	movlw	10
  2665     00F8  00A0               	movwf	___awmod@divisor
  2666     00F9  3000               	movlw	0
  2667     00FA  00A1               	movwf	___awmod@divisor+1
  2668     00FB  300A               	movlw	10
  2669     00FC  00F2               	movwf	___awdiv@divisor
  2670     00FD  3000               	movlw	0
  2671     00FE  00F3               	movwf	___awdiv@divisor+1
  2672     00FF  083F               	movf	_sec,w
  2673     0100  00AA               	movwf	??_set_temp
  2674     0101  01AB               	clrf	??_set_temp+1
  2675     0102  082A               	movf	??_set_temp,w
  2676     0103  00F4               	movwf	___awdiv@dividend
  2677     0104  082B               	movf	??_set_temp+1,w
  2678     0105  00F5               	movwf	___awdiv@dividend+1
  2679     0106  120A  118A  2488  120A  118A  	fcall	___awdiv
  2680     010B  0873               	movf	?___awdiv+1,w
  2681     010C  1283               	bcf	3,5	;RP0=0, select bank0
  2682     010D  1303               	bcf	3,6	;RP1=0, select bank0
  2683     010E  00A3               	movwf	___awmod@dividend+1
  2684     010F  0872               	movf	?___awdiv,w
  2685     0110  00A2               	movwf	___awmod@dividend
  2686     0111  120A  158A  27A7  120A  118A  	fcall	___awmod
  2687     0116  1283               	bcf	3,5	;RP0=0, select bank0
  2688     0117  1303               	bcf	3,6	;RP1=0, select bank0
  2689     0118  0820               	movf	?___awmod,w
  2690     0119  3E30               	addlw	48
  2691     011A  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  2692                           
  2693                           ;main.c: 404:     {
  2694     011F  309E               	movlw	158
  2695     0120  1283               	bcf	3,5	;RP0=0, select bank0
  2696     0121  1303               	bcf	3,6	;RP1=0, select bank0
  2697     0122  00A6               	movwf	clcd_ch@addr
  2698     0123  300A               	movlw	10
  2699     0124  00A0               	movwf	___awmod@divisor
  2700     0125  3000               	movlw	0
  2701     0126  00A1               	movwf	___awmod@divisor+1
  2702     0127  083F               	movf	_sec,w
  2703     0128  00AA               	movwf	??_set_temp
  2704     0129  01AB               	clrf	??_set_temp+1
  2705     012A  082A               	movf	??_set_temp,w
  2706     012B  00A2               	movwf	___awmod@dividend
  2707     012C  082B               	movf	??_set_temp+1,w
  2708     012D  00A3               	movwf	___awmod@dividend+1
  2709     012E  120A  158A  27A7  120A  118A  	fcall	___awmod
  2710     0133  1283               	bcf	3,5	;RP0=0, select bank0
  2711     0134  1303               	bcf	3,6	;RP1=0, select bank0
  2712     0135  0820               	movf	?___awmod,w
  2713     0136  3E30               	addlw	48
  2714     0137  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  2715     013C                     l2031:
  2716                           
  2717                           ;main.c: 400: 
  2718     013C  1283               	bcf	3,5	;RP0=0, select bank0
  2719     013D  1303               	bcf	3,6	;RP1=0, select bank0
  2720     013E  083F               	movf	_sec,w
  2721     013F  1D03               	btfss	3,2
  2722     0140  2942               	goto	u1601
  2723     0141  2943               	goto	u1600
  2724     0142                     u1601:
  2725     0142  28DA               	goto	l2029
  2726     0143                     u1600:
  2727     0143                     l2033:
  2728                           
  2729                           ;main.c: 407: 
  2730     0143  083F               	movf	_sec,w
  2731     0144  1D03               	btfss	3,2
  2732     0145  2947               	goto	u1611
  2733     0146  2948               	goto	u1610
  2734     0147                     u1611:
  2735     0147  2952               	goto	l2041
  2736     0148                     u1610:
  2737     0148                     l2035:
  2738                           
  2739                           ;main.c: 408: ;main.c: 409:         clcd_ch((temp/100) + '0',(0xC0 + 8));
  2740     0148  120A  118A  27EF  120A  118A  	fcall	_clear_screen
  2741     014D                     l2037:
  2742                           
  2743                           ;main.c: 410:         clcd_ch(((temp/10)%10) + '0',(0xC0 + 9));
  2744     014D  3001               	movlw	1
  2745     014E  1283               	bcf	3,5	;RP0=0, select bank0
  2746     014F  1303               	bcf	3,6	;RP1=0, select bank0
  2747     0150  00BD               	movwf	_flag
  2748     0151                     l2039:
  2749                           
  2750                           ;main.c: 411:         clcd_ch( (temp%10) + '0',(0xC0 + 10));
  2751     0151  1112               	bcf	18,2	;volatile
  2752     0152                     l2041:
  2753                           
  2754                           ;main.c: 416:     {
  2755     0152  3001               	movlw	1
  2756     0153  07B3               	addwf	set_temp@wait,f
  2757     0154  1803               	skipnc
  2758     0155  0AB4               	incf	set_temp@wait+1,f
  2759     0156  3000               	movlw	0
  2760     0157  07B4               	addwf	set_temp@wait+1,f
  2761     0158  3015               	movlw	21
  2762     0159  0633               	xorwf	set_temp@wait,w
  2763     015A  0434               	iorwf	set_temp@wait+1,w
  2764     015B  1D03               	btfss	3,2
  2765     015C  295E               	goto	u1621
  2766     015D  295F               	goto	u1620
  2767     015E                     u1621:
  2768     015E  29D3               	goto	l215
  2769     015F                     u1620:
  2770     015F                     l2043:
  2771                           
  2772                           ;main.c: 417:         temp = 0;;main.c: 418:         key_count = 0;
  2773     015F  01B3               	clrf	set_temp@wait
  2774     0160  01B4               	clrf	set_temp@wait+1
  2775     0161                     l2045:
  2776                           
  2777                           ;main.c: 419:     }
  2778     0161  0838               	movf	set_temp@blink,w
  2779     0162  1903               	btfsc	3,2
  2780     0163  2965               	goto	u1631
  2781     0164  2967               	goto	u1630
  2782     0165                     u1631:
  2783     0165  3001               	movlw	1
  2784     0166  2968               	goto	u1640
  2785     0167                     u1630:
  2786     0167  3000               	movlw	0
  2787     0168                     u1640:
  2788     0168  00B8               	movwf	set_temp@blink
  2789     0169                     l2047:
  2790                           
  2791                           ;main.c: 422: }
  2792     0169  30C8               	movlw	200
  2793     016A  00A6               	movwf	clcd_ch@addr
  2794     016B  3064               	movlw	100
  2795     016C  00F2               	movwf	___awdiv@divisor
  2796     016D  3000               	movlw	0
  2797     016E  00F3               	movwf	___awdiv@divisor+1
  2798     016F  0837               	movf	set_temp@temp,w
  2799     0170  00AA               	movwf	??_set_temp
  2800     0171  01AB               	clrf	??_set_temp+1
  2801     0172  082A               	movf	??_set_temp,w
  2802     0173  00F4               	movwf	___awdiv@dividend
  2803     0174  082B               	movf	??_set_temp+1,w
  2804     0175  00F5               	movwf	___awdiv@dividend+1
  2805     0176  120A  118A  2488  120A  118A  	fcall	___awdiv
  2806     017B  0872               	movf	?___awdiv,w
  2807     017C  3E30               	addlw	48
  2808     017D  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  2809     0182                     l2049:
  2810     0182  30C9               	movlw	201
  2811     0183  1283               	bcf	3,5	;RP0=0, select bank0
  2812     0184  1303               	bcf	3,6	;RP1=0, select bank0
  2813     0185  00A6               	movwf	clcd_ch@addr
  2814     0186  300A               	movlw	10
  2815     0187  00A0               	movwf	___awmod@divisor
  2816     0188  3000               	movlw	0
  2817     0189  00A1               	movwf	___awmod@divisor+1
  2818     018A  300A               	movlw	10
  2819     018B  00F2               	movwf	___awdiv@divisor
  2820     018C  3000               	movlw	0
  2821     018D  00F3               	movwf	___awdiv@divisor+1
  2822     018E  0837               	movf	set_temp@temp,w
  2823     018F  00AA               	movwf	??_set_temp
  2824     0190  01AB               	clrf	??_set_temp+1
  2825     0191  082A               	movf	??_set_temp,w
  2826     0192  00F4               	movwf	___awdiv@dividend
  2827     0193  082B               	movf	??_set_temp+1,w
  2828     0194  00F5               	movwf	___awdiv@dividend+1
  2829     0195  120A  118A  2488  120A  118A  	fcall	___awdiv
  2830     019A  0873               	movf	?___awdiv+1,w
  2831     019B  1283               	bcf	3,5	;RP0=0, select bank0
  2832     019C  1303               	bcf	3,6	;RP1=0, select bank0
  2833     019D  00A3               	movwf	___awmod@dividend+1
  2834     019E  0872               	movf	?___awdiv,w
  2835     019F  00A2               	movwf	___awmod@dividend
  2836     01A0  120A  158A  27A7  120A  118A  	fcall	___awmod
  2837     01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2838     01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2839     01A7  0820               	movf	?___awmod,w
  2840     01A8  3E30               	addlw	48
  2841     01A9  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  2842     01AE                     l2051:
  2843     01AE  30CA               	movlw	202
  2844     01AF  1283               	bcf	3,5	;RP0=0, select bank0
  2845     01B0  1303               	bcf	3,6	;RP1=0, select bank0
  2846     01B1  00A6               	movwf	clcd_ch@addr
  2847     01B2  300A               	movlw	10
  2848     01B3  00A0               	movwf	___awmod@divisor
  2849     01B4  3000               	movlw	0
  2850     01B5  00A1               	movwf	___awmod@divisor+1
  2851     01B6  0837               	movf	set_temp@temp,w
  2852     01B7  00AA               	movwf	??_set_temp
  2853     01B8  01AB               	clrf	??_set_temp+1
  2854     01B9  082A               	movf	??_set_temp,w
  2855     01BA  00A2               	movwf	___awmod@dividend
  2856     01BB  082B               	movf	??_set_temp+1,w
  2857     01BC  00A3               	movwf	___awmod@dividend+1
  2858     01BD  120A  158A  27A7  120A  118A  	fcall	___awmod
  2859     01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2860     01C3  1303               	bcf	3,6	;RP1=0, select bank0
  2861     01C4  0820               	movf	?___awmod,w
  2862     01C5  3E30               	addlw	48
  2863     01C6  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  2864     01CB  29D3               	goto	l215
  2865     01CC                     l2053:
  2866     01CC  30B5               	movlw	181
  2867     01CD  0237               	subwf	set_temp@temp,w
  2868     01CE  1C03               	skipc
  2869     01CF  29D1               	goto	u1651
  2870     01D0  29D2               	goto	u1650
  2871     01D1                     u1651:
  2872     01D1  29D3               	goto	l215
  2873     01D2                     u1650:
  2874     01D2  28AE               	goto	l2013
  2875     01D3                     l215:
  2876     01D3  0008               	return
  2877     01D4                     __end_of_set_temp:
  2878                           
  2879                           	psect	text4
  2880     07EF                     __ptext4:	
  2881 ;; *************** function _clear_screen *****************
  2882 ;; Defined at:
  2883 ;;		line 181 in file "main.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0, pclath, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2897 ;;      Params:         0       0       0       0       0
  2898 ;;      Locals:         0       0       0       0       0
  2899 ;;      Temps:          2       0       0       0       0
  2900 ;;      Totals:         2       0       0       0       0
  2901 ;;Total ram usage:        2 bytes
  2902 ;; Hardware stack levels used: 1
  2903 ;; Hardware stack levels required when called: 2
  2904 ;; This function calls:
  2905 ;;		_clcd_write
  2906 ;; This function is called by:
  2907 ;;		_main
  2908 ;;		_set_time
  2909 ;;		_time_screen
  2910 ;;		_set_temp
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914     07EF                     _clear_screen:	
  2915                           ;psect for function _clear_screen
  2916                           
  2917     07EF                     l1617:	
  2918                           ;incstack = 0
  2919                           ; Regs used in _clear_screen: [wreg+status,2+status,0+pclath+cstack]
  2920                           
  2921                           
  2922                           ;main.c: 183:     }
  2923     07EF  01F2               	clrf	clcd_write@mode
  2924     07F0  3001               	movlw	1
  2925     07F1  120A  158A  271D  120A  118A  	fcall	_clcd_write
  2926     07F6                     l1619:
  2927                           
  2928                           ;main.c: 184:     clcd_print("  POWERING ON   ",(0xC0 + 0));
  2929     07F6  3004               	movlw	4
  2930     07F7  00F7               	movwf	??_clear_screen+1
  2931     07F8  303D               	movlw	61
  2932     07F9  00F6               	movwf	??_clear_screen
  2933     07FA                     u2187:
  2934     07FA  0BF6               	decfsz	??_clear_screen,f
  2935     07FB  2FFA               	goto	u2187
  2936     07FC  0BF7               	decfsz	??_clear_screen+1,f
  2937     07FD  2FFA               	goto	u2187
  2938     07FE  2FFF               	nop2
  2939     07FF                     l146:
  2940     07FF  0008               	return
  2941     0800                     __end_of_clear_screen:
  2942                           
  2943                           	psect	text5
  2944     0E42                     __ptext5:	
  2945 ;; *************** function ___bmul *****************
  2946 ;; Defined at:
  2947 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  multiplier      1    wreg     unsigned char 
  2950 ;;  multiplicand    1    2[COMMON] unsigned char 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  multiplier      1    4[COMMON] unsigned char 
  2953 ;;  product         1    3[COMMON] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      unsigned char 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         1       0       0       0       0
  2964 ;;      Locals:         2       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0
  2966 ;;      Totals:         3       0       0       0       0
  2967 ;;Total ram usage:        3 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; Hardware stack levels required when called: 1
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_set_temp
  2974 ;;		_set_time
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978     0E42                     ___bmul:	
  2979                           ;psect for function ___bmul
  2980                           
  2981                           
  2982                           ;incstack = 0
  2983                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2984                           ;___bmul@multiplier stored from wreg
  2985     0E42  00F4               	movwf	___bmul@multiplier
  2986     0E43                     l1725:
  2987     0E43  01F3               	clrf	___bmul@product
  2988     0E44                     l1727:
  2989     0E44  1C74               	btfss	___bmul@multiplier,0
  2990     0E45  2E47               	goto	u1101
  2991     0E46  2E48               	goto	u1100
  2992     0E47                     u1101:
  2993     0E47  2E4A               	goto	l1731
  2994     0E48                     u1100:
  2995     0E48                     l1729:
  2996     0E48  0872               	movf	___bmul@multiplicand,w
  2997     0E49  07F3               	addwf	___bmul@product,f
  2998     0E4A                     l1731:
  2999     0E4A  1003               	clrc
  3000     0E4B  0DF2               	rlf	___bmul@multiplicand,f
  3001     0E4C                     l1733:
  3002     0E4C  1003               	clrc
  3003     0E4D  0CF4               	rrf	___bmul@multiplier,f
  3004     0E4E  0874               	movf	___bmul@multiplier,w
  3005     0E4F  1D03               	btfss	3,2
  3006     0E50  2E52               	goto	u1111
  3007     0E51  2E53               	goto	u1110
  3008     0E52                     u1111:
  3009     0E52  2E44               	goto	l1727
  3010     0E53                     u1110:
  3011     0E53                     l1735:
  3012     0E53  0873               	movf	___bmul@product,w
  3013     0E54                     l405:
  3014     0E54  0008               	return
  3015     0E55                     __end_of___bmul:
  3016                           
  3017                           	psect	text6
  3018     0FA7                     __ptext6:	
  3019 ;; *************** function ___awmod *****************
  3020 ;; Defined at:
  3021 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  divisor         2    0[BANK0 ] int 
  3024 ;;  dividend        2    2[BANK0 ] int 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  sign            1    5[BANK0 ] unsigned char 
  3027 ;;  counter         1    4[BANK0 ] unsigned char 
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  2    0[BANK0 ] int 
  3030 ;; Registers used:
  3031 ;;		wreg, status,2, status,0
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3037 ;;      Params:         0       4       0       0       0
  3038 ;;      Locals:         0       2       0       0       0
  3039 ;;      Temps:          0       0       0       0       0
  3040 ;;      Totals:         0       6       0       0       0
  3041 ;;Total ram usage:        6 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; Hardware stack levels required when called: 1
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		_set_temp
  3048 ;;		_set_time
  3049 ;;		_time_screen
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053     0FA7                     ___awmod:	
  3054                           ;psect for function ___awmod
  3055                           
  3056     0FA7                     l1783:	
  3057                           ;incstack = 0
  3058                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3059                           
  3060     0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  3061     0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  3062     0FA9  01A5               	clrf	___awmod@sign
  3063     0FAA                     l1785:
  3064     0FAA  1FA3               	btfss	___awmod@dividend+1,7
  3065     0FAB  2FAD               	goto	u1221
  3066     0FAC  2FAE               	goto	u1220
  3067     0FAD                     u1221:
  3068     0FAD  2FB5               	goto	l1791
  3069     0FAE                     u1220:
  3070     0FAE                     l1787:
  3071     0FAE  09A2               	comf	___awmod@dividend,f
  3072     0FAF  09A3               	comf	___awmod@dividend+1,f
  3073     0FB0  0AA2               	incf	___awmod@dividend,f
  3074     0FB1  1903               	skipnz
  3075     0FB2  0AA3               	incf	___awmod@dividend+1,f
  3076     0FB3                     l1789:
  3077     0FB3  3001               	movlw	1
  3078     0FB4  00A5               	movwf	___awmod@sign
  3079     0FB5                     l1791:
  3080     0FB5  1FA1               	btfss	___awmod@divisor+1,7
  3081     0FB6  2FB8               	goto	u1231
  3082     0FB7  2FB9               	goto	u1230
  3083     0FB8                     u1231:
  3084     0FB8  2FBE               	goto	l1795
  3085     0FB9                     u1230:
  3086     0FB9                     l1793:
  3087     0FB9  09A0               	comf	___awmod@divisor,f
  3088     0FBA  09A1               	comf	___awmod@divisor+1,f
  3089     0FBB  0AA0               	incf	___awmod@divisor,f
  3090     0FBC  1903               	skipnz
  3091     0FBD  0AA1               	incf	___awmod@divisor+1,f
  3092     0FBE                     l1795:
  3093     0FBE  0820               	movf	___awmod@divisor,w
  3094     0FBF  0421               	iorwf	___awmod@divisor+1,w
  3095     0FC0  1903               	btfsc	3,2
  3096     0FC1  2FC3               	goto	u1241
  3097     0FC2  2FC4               	goto	u1240
  3098     0FC3                     u1241:
  3099     0FC3  2FF1               	goto	l1813
  3100     0FC4                     u1240:
  3101     0FC4                     l1797:
  3102     0FC4  3001               	movlw	1
  3103     0FC5  00A4               	movwf	___awmod@counter
  3104     0FC6  2FD0               	goto	l1803
  3105     0FC7                     l1799:
  3106     0FC7  3001               	movlw	1
  3107     0FC8                     u1255:
  3108     0FC8  1003               	clrc
  3109     0FC9  0DA0               	rlf	___awmod@divisor,f
  3110     0FCA  0DA1               	rlf	___awmod@divisor+1,f
  3111     0FCB  3EFF               	addlw	-1
  3112     0FCC  1D03               	skipz
  3113     0FCD  2FC8               	goto	u1255
  3114     0FCE                     l1801:
  3115     0FCE  3001               	movlw	1
  3116     0FCF  07A4               	addwf	___awmod@counter,f
  3117     0FD0                     l1803:
  3118     0FD0  1FA1               	btfss	___awmod@divisor+1,7
  3119     0FD1  2FD3               	goto	u1261
  3120     0FD2  2FD4               	goto	u1260
  3121     0FD3                     u1261:
  3122     0FD3  2FC7               	goto	l1799
  3123     0FD4                     u1260:
  3124     0FD4                     l1805:
  3125     0FD4  0821               	movf	___awmod@divisor+1,w
  3126     0FD5  0223               	subwf	___awmod@dividend+1,w
  3127     0FD6  1D03               	skipz
  3128     0FD7  2FDA               	goto	u1275
  3129     0FD8  0820               	movf	___awmod@divisor,w
  3130     0FD9  0222               	subwf	___awmod@dividend,w
  3131     0FDA                     u1275:
  3132     0FDA  1C03               	skipc
  3133     0FDB  2FDD               	goto	u1271
  3134     0FDC  2FDE               	goto	u1270
  3135     0FDD                     u1271:
  3136     0FDD  2FE4               	goto	l1809
  3137     0FDE                     u1270:
  3138     0FDE                     l1807:
  3139     0FDE  0820               	movf	___awmod@divisor,w
  3140     0FDF  02A2               	subwf	___awmod@dividend,f
  3141     0FE0  0821               	movf	___awmod@divisor+1,w
  3142     0FE1  1C03               	skipc
  3143     0FE2  03A3               	decf	___awmod@dividend+1,f
  3144     0FE3  02A3               	subwf	___awmod@dividend+1,f
  3145     0FE4                     l1809:
  3146     0FE4  3001               	movlw	1
  3147     0FE5                     u1285:
  3148     0FE5  1003               	clrc
  3149     0FE6  0CA1               	rrf	___awmod@divisor+1,f
  3150     0FE7  0CA0               	rrf	___awmod@divisor,f
  3151     0FE8  3EFF               	addlw	-1
  3152     0FE9  1D03               	skipz
  3153     0FEA  2FE5               	goto	u1285
  3154     0FEB                     l1811:
  3155     0FEB  3001               	movlw	1
  3156     0FEC  02A4               	subwf	___awmod@counter,f
  3157     0FED  1D03               	btfss	3,2
  3158     0FEE  2FF0               	goto	u1291
  3159     0FEF  2FF1               	goto	u1290
  3160     0FF0                     u1291:
  3161     0FF0  2FD4               	goto	l1805
  3162     0FF1                     u1290:
  3163     0FF1                     l1813:
  3164     0FF1  0825               	movf	___awmod@sign,w
  3165     0FF2  1903               	btfsc	3,2
  3166     0FF3  2FF5               	goto	u1301
  3167     0FF4  2FF6               	goto	u1300
  3168     0FF5                     u1301:
  3169     0FF5  2FFB               	goto	l1817
  3170     0FF6                     u1300:
  3171     0FF6                     l1815:
  3172     0FF6  09A2               	comf	___awmod@dividend,f
  3173     0FF7  09A3               	comf	___awmod@dividend+1,f
  3174     0FF8  0AA2               	incf	___awmod@dividend,f
  3175     0FF9  1903               	skipnz
  3176     0FFA  0AA3               	incf	___awmod@dividend+1,f
  3177     0FFB                     l1817:
  3178     0FFB  0823               	movf	___awmod@dividend+1,w
  3179     0FFC  00A1               	movwf	?___awmod+1
  3180     0FFD  0822               	movf	___awmod@dividend,w
  3181     0FFE  00A0               	movwf	?___awmod
  3182     0FFF                     l545:
  3183     0FFF  0008               	return
  3184     1000                     __end_of___awmod:
  3185                           
  3186                           	psect	text7
  3187     0488                     __ptext7:	
  3188 ;; *************** function ___awdiv *****************
  3189 ;; Defined at:
  3190 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  divisor         2    2[COMMON] int 
  3193 ;;  dividend        2    4[COMMON] int 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  quotient        2    8[COMMON] int 
  3196 ;;  sign            1    7[COMMON] unsigned char 
  3197 ;;  counter         1    6[COMMON] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  2    2[COMMON] int 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3207 ;;      Params:         4       0       0       0       0
  3208 ;;      Locals:         4       0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0
  3210 ;;      Totals:         8       0       0       0       0
  3211 ;;Total ram usage:        8 bytes
  3212 ;; Hardware stack levels used: 1
  3213 ;; Hardware stack levels required when called: 1
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_set_temp
  3218 ;;		_set_time
  3219 ;;		_time_screen
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223     0488                     ___awdiv:	
  3224                           ;psect for function ___awdiv
  3225                           
  3226     0488                     l1739:	
  3227                           ;incstack = 0
  3228                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3229                           
  3230     0488  01F7               	clrf	___awdiv@sign
  3231     0489                     l1741:
  3232     0489  1FF3               	btfss	___awdiv@divisor+1,7
  3233     048A  2C8C               	goto	u1121
  3234     048B  2C8D               	goto	u1120
  3235     048C                     u1121:
  3236     048C  2C94               	goto	l1747
  3237     048D                     u1120:
  3238     048D                     l1743:
  3239     048D  09F2               	comf	___awdiv@divisor,f
  3240     048E  09F3               	comf	___awdiv@divisor+1,f
  3241     048F  0AF2               	incf	___awdiv@divisor,f
  3242     0490  1903               	skipnz
  3243     0491  0AF3               	incf	___awdiv@divisor+1,f
  3244     0492                     l1745:
  3245     0492  3001               	movlw	1
  3246     0493  00F7               	movwf	___awdiv@sign
  3247     0494                     l1747:
  3248     0494  1FF5               	btfss	___awdiv@dividend+1,7
  3249     0495  2C97               	goto	u1131
  3250     0496  2C98               	goto	u1130
  3251     0497                     u1131:
  3252     0497  2C9F               	goto	l1753
  3253     0498                     u1130:
  3254     0498                     l1749:
  3255     0498  09F4               	comf	___awdiv@dividend,f
  3256     0499  09F5               	comf	___awdiv@dividend+1,f
  3257     049A  0AF4               	incf	___awdiv@dividend,f
  3258     049B  1903               	skipnz
  3259     049C  0AF5               	incf	___awdiv@dividend+1,f
  3260     049D                     l1751:
  3261     049D  3001               	movlw	1
  3262     049E  06F7               	xorwf	___awdiv@sign,f
  3263     049F                     l1753:
  3264     049F  01F8               	clrf	___awdiv@quotient
  3265     04A0  01F9               	clrf	___awdiv@quotient+1
  3266     04A1                     l1755:
  3267     04A1  0872               	movf	___awdiv@divisor,w
  3268     04A2  0473               	iorwf	___awdiv@divisor+1,w
  3269     04A3  1903               	btfsc	3,2
  3270     04A4  2CA6               	goto	u1141
  3271     04A5  2CA7               	goto	u1140
  3272     04A6                     u1141:
  3273     04A6  2CDC               	goto	l1775
  3274     04A7                     u1140:
  3275     04A7                     l1757:
  3276     04A7  3001               	movlw	1
  3277     04A8  00F6               	movwf	___awdiv@counter
  3278     04A9  2CB3               	goto	l1763
  3279     04AA                     l1759:
  3280     04AA  3001               	movlw	1
  3281     04AB                     u1155:
  3282     04AB  1003               	clrc
  3283     04AC  0DF2               	rlf	___awdiv@divisor,f
  3284     04AD  0DF3               	rlf	___awdiv@divisor+1,f
  3285     04AE  3EFF               	addlw	-1
  3286     04AF  1D03               	skipz
  3287     04B0  2CAB               	goto	u1155
  3288     04B1                     l1761:
  3289     04B1  3001               	movlw	1
  3290     04B2  07F6               	addwf	___awdiv@counter,f
  3291     04B3                     l1763:
  3292     04B3  1FF3               	btfss	___awdiv@divisor+1,7
  3293     04B4  2CB6               	goto	u1161
  3294     04B5  2CB7               	goto	u1160
  3295     04B6                     u1161:
  3296     04B6  2CAA               	goto	l1759
  3297     04B7                     u1160:
  3298     04B7                     l1765:
  3299     04B7  3001               	movlw	1
  3300     04B8                     u1175:
  3301     04B8  1003               	clrc
  3302     04B9  0DF8               	rlf	___awdiv@quotient,f
  3303     04BA  0DF9               	rlf	___awdiv@quotient+1,f
  3304     04BB  3EFF               	addlw	-1
  3305     04BC  1D03               	skipz
  3306     04BD  2CB8               	goto	u1175
  3307     04BE  0873               	movf	___awdiv@divisor+1,w
  3308     04BF  0275               	subwf	___awdiv@dividend+1,w
  3309     04C0  1D03               	skipz
  3310     04C1  2CC4               	goto	u1185
  3311     04C2  0872               	movf	___awdiv@divisor,w
  3312     04C3  0274               	subwf	___awdiv@dividend,w
  3313     04C4                     u1185:
  3314     04C4  1C03               	skipc
  3315     04C5  2CC7               	goto	u1181
  3316     04C6  2CC8               	goto	u1180
  3317     04C7                     u1181:
  3318     04C7  2CCF               	goto	l1771
  3319     04C8                     u1180:
  3320     04C8                     l1767:
  3321     04C8  0872               	movf	___awdiv@divisor,w
  3322     04C9  02F4               	subwf	___awdiv@dividend,f
  3323     04CA  0873               	movf	___awdiv@divisor+1,w
  3324     04CB  1C03               	skipc
  3325     04CC  03F5               	decf	___awdiv@dividend+1,f
  3326     04CD  02F5               	subwf	___awdiv@dividend+1,f
  3327     04CE                     l1769:
  3328     04CE  1478               	bsf	___awdiv@quotient,0
  3329     04CF                     l1771:
  3330     04CF  3001               	movlw	1
  3331     04D0                     u1195:
  3332     04D0  1003               	clrc
  3333     04D1  0CF3               	rrf	___awdiv@divisor+1,f
  3334     04D2  0CF2               	rrf	___awdiv@divisor,f
  3335     04D3  3EFF               	addlw	-1
  3336     04D4  1D03               	skipz
  3337     04D5  2CD0               	goto	u1195
  3338     04D6                     l1773:
  3339     04D6  3001               	movlw	1
  3340     04D7  02F6               	subwf	___awdiv@counter,f
  3341     04D8  1D03               	btfss	3,2
  3342     04D9  2CDB               	goto	u1201
  3343     04DA  2CDC               	goto	u1200
  3344     04DB                     u1201:
  3345     04DB  2CB7               	goto	l1765
  3346     04DC                     u1200:
  3347     04DC                     l1775:
  3348     04DC  0877               	movf	___awdiv@sign,w
  3349     04DD  1903               	btfsc	3,2
  3350     04DE  2CE0               	goto	u1211
  3351     04DF  2CE1               	goto	u1210
  3352     04E0                     u1211:
  3353     04E0  2CE6               	goto	l1779
  3354     04E1                     u1210:
  3355     04E1                     l1777:
  3356     04E1  09F8               	comf	___awdiv@quotient,f
  3357     04E2  09F9               	comf	___awdiv@quotient+1,f
  3358     04E3  0AF8               	incf	___awdiv@quotient,f
  3359     04E4  1903               	skipnz
  3360     04E5  0AF9               	incf	___awdiv@quotient+1,f
  3361     04E6                     l1779:
  3362     04E6  0879               	movf	___awdiv@quotient+1,w
  3363     04E7  00F3               	movwf	?___awdiv+1
  3364     04E8  0878               	movf	___awdiv@quotient,w
  3365     04E9  00F2               	movwf	?___awdiv
  3366     04EA                     l532:
  3367     04EA  0008               	return
  3368     04EB                     __end_of___awdiv:
  3369                           
  3370                           	psect	text8
  3371     0EBD                     __ptext8:	
  3372 ;; *************** function _read_key *****************
  3373 ;; Defined at:
  3374 ;;		line 114 in file "matrix_keypad.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;  MODE            1    wreg     unsigned char 
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;  MODE            1    4[COMMON] unsigned char 
  3379 ;;  key             1    5[COMMON] unsigned char 
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      unsigned char 
  3382 ;; Registers used:
  3383 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3389 ;;      Params:         0       0       0       0       0
  3390 ;;      Locals:         2       0       0       0       0
  3391 ;;      Temps:          0       0       0       0       0
  3392 ;;      Totals:         2       0       0       0       0
  3393 ;;Total ram usage:        2 bytes
  3394 ;; Hardware stack levels used: 1
  3395 ;; Hardware stack levels required when called: 2
  3396 ;; This function calls:
  3397 ;;		_scan_key
  3398 ;; This function is called by:
  3399 ;;		_main
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403     0EBD                     _read_key:	
  3404                           ;psect for function _read_key
  3405                           
  3406                           
  3407                           ;incstack = 0
  3408                           ; Regs used in _read_key: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3409                           ;read_key@MODE stored from wreg
  3410     0EBD  00F4               	movwf	read_key@MODE
  3411     0EBE                     l1837:
  3412                           
  3413                           ;matrix_keypad.c: 114: unsigned char read_key(unsigned char MODE );matrix_keypad.c: 115:
      +                           {;matrix_keypad.c: 116:     static unsigned int once = 1;;matrix_keypad.c: 117:     uns
      +                          igned char key;;matrix_keypad.c: 118:     key = scan_key();
  3414     0EBE  120A  118A  26CA  120A  158A  	fcall	_scan_key
  3415     0EC3  00F5               	movwf	read_key@key
  3416     0EC4                     l1839:
  3417                           
  3418                           ;matrix_keypad.c: 119:     if(MODE == 0)
  3419     0EC4  0874               	movf	read_key@MODE,w
  3420     0EC5  1D03               	btfss	3,2
  3421     0EC6  2EC8               	goto	u1311
  3422     0EC7  2EC9               	goto	u1310
  3423     0EC8                     u1311:
  3424     0EC8  2ECB               	goto	l1847
  3425     0EC9                     u1310:
  3426     0EC9                     l1841:
  3427                           
  3428                           ;matrix_keypad.c: 120:     {;matrix_keypad.c: 121:         return key;
  3429     0EC9  0875               	movf	read_key@key,w
  3430     0ECA  2EE7               	goto	l276
  3431     0ECB                     l1847:
  3432                           
  3433                           ;matrix_keypad.c: 124:     {;matrix_keypad.c: 125:         if(key!=0xFF && once)
  3434     0ECB  0A75               	incf	read_key@key,w
  3435     0ECC  1903               	btfsc	3,2
  3436     0ECD  2ECF               	goto	u1321
  3437     0ECE  2ED0               	goto	u1320
  3438     0ECF                     u1321:
  3439     0ECF  2EDB               	goto	l1859
  3440     0ED0                     u1320:
  3441     0ED0                     l1849:
  3442     0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  3443     0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  3444     0ED2  0840               	movf	read_key@once,w
  3445     0ED3  0441               	iorwf	read_key@once+1,w
  3446     0ED4  1903               	btfsc	3,2
  3447     0ED5  2ED7               	goto	u1331
  3448     0ED6  2ED8               	goto	u1330
  3449     0ED7                     u1331:
  3450     0ED7  2EDB               	goto	l1859
  3451     0ED8                     u1330:
  3452     0ED8                     l1851:
  3453                           
  3454                           ;matrix_keypad.c: 126:         {;matrix_keypad.c: 127:             once = 0;
  3455     0ED8  01C0               	clrf	read_key@once
  3456     0ED9  01C1               	clrf	read_key@once+1
  3457     0EDA  2EC9               	goto	l1841
  3458     0EDB                     l1859:
  3459     0EDB  0A75               	incf	read_key@key,w
  3460     0EDC  1D03               	btfss	3,2
  3461     0EDD  2EDF               	goto	u1341
  3462     0EDE  2EE0               	goto	u1340
  3463     0EDF                     u1341:
  3464     0EDF  2EE6               	goto	l277
  3465     0EE0                     u1340:
  3466     0EE0                     l1861:
  3467                           
  3468                           ;matrix_keypad.c: 131:         {;matrix_keypad.c: 132:             once = 1;
  3469     0EE0  3001               	movlw	1
  3470     0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3471     0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  3472     0EE3  00C0               	movwf	read_key@once
  3473     0EE4  3000               	movlw	0
  3474     0EE5  00C1               	movwf	read_key@once+1
  3475     0EE6                     l277:	
  3476                           ;matrix_keypad.c: 135:     }
  3477                           
  3478                           
  3479                           ;matrix_keypad.c: 136:     return 0xFF;
  3480     0EE6  30FF               	movlw	255
  3481     0EE7                     l276:
  3482     0EE7  0008               	return
  3483     0EE8                     __end_of_read_key:
  3484                           
  3485                           	psect	text9
  3486     06CA                     __ptext9:	
  3487 ;; *************** function _scan_key *****************
  3488 ;; Defined at:
  3489 ;;		line 25 in file "matrix_keypad.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  i               2    2[COMMON] int 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      unsigned char 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0, btemp+1
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3503 ;;      Params:         0       0       0       0       0
  3504 ;;      Locals:         2       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0
  3506 ;;      Totals:         2       0       0       0       0
  3507 ;;Total ram usage:        2 bytes
  3508 ;; Hardware stack levels used: 1
  3509 ;; Hardware stack levels required when called: 1
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_read_key
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517     06CA                     _scan_key:	
  3518                           ;psect for function _scan_key
  3519                           
  3520     06CA                     l1621:	
  3521                           ;incstack = 0
  3522                           ; Regs used in _scan_key: [wreg+status,2+status,0+btemp+1]
  3523                           
  3524                           
  3525                           ;matrix_keypad.c: 27:     int i;;matrix_keypad.c: 29:     RD3 = 0;
  3526     06CA  1283               	bcf	3,5	;RP0=0, select bank0
  3527     06CB  1303               	bcf	3,6	;RP1=0, select bank0
  3528     06CC  1188               	bcf	8,3	;volatile
  3529                           
  3530                           ;matrix_keypad.c: 30:     RD2 = 1;
  3531     06CD  1508               	bsf	8,2	;volatile
  3532                           
  3533                           ;matrix_keypad.c: 31:     RD1 = 1;
  3534     06CE  1488               	bsf	8,1	;volatile
  3535                           
  3536                           ;matrix_keypad.c: 32:     RD0 = 1;
  3537     06CF  1408               	bsf	8,0	;volatile
  3538     06D0                     l1623:
  3539                           
  3540                           ;matrix_keypad.c: 34:     for (i = 100; i--; );
  3541     06D0  3064               	movlw	100
  3542     06D1  00F2               	movwf	scan_key@i
  3543     06D2  3000               	movlw	0
  3544     06D3  00F3               	movwf	scan_key@i+1
  3545     06D4                     l1625:
  3546     06D4  30FF               	movlw	255
  3547     06D5  07F2               	addwf	scan_key@i,f
  3548     06D6  1803               	skipnc
  3549     06D7  0AF3               	incf	scan_key@i+1,f
  3550     06D8  30FF               	movlw	255
  3551     06D9  07F3               	addwf	scan_key@i+1,f
  3552     06DA  0A72               	incf	scan_key@i,w
  3553     06DB  1D03               	skipz
  3554     06DC  2EE1               	goto	u941
  3555     06DD  0A73               	incf	scan_key@i+1,w
  3556     06DE  1D03               	btfss	3,2
  3557     06DF  2EE1               	goto	u941
  3558     06E0  2EE2               	goto	u940
  3559     06E1                     u941:
  3560     06E1  2ED4               	goto	l1625
  3561     06E2                     u940:
  3562     06E2                     l243:
  3563                           
  3564                           ;matrix_keypad.c: 36:     if (RB0 == 0)
  3565     06E2  1283               	bcf	3,5	;RP0=0, select bank0
  3566     06E3  1303               	bcf	3,6	;RP1=0, select bank0
  3567     06E4  1806               	btfsc	6,0	;volatile
  3568     06E5  2EE7               	goto	u951
  3569     06E6  2EE8               	goto	u950
  3570     06E7                     u951:
  3571     06E7  2EEA               	goto	l244
  3572     06E8                     u950:
  3573     06E8                     l1627:
  3574                           
  3575                           ;matrix_keypad.c: 37:     {;matrix_keypad.c: 38:         return 1;
  3576     06E8  3001               	movlw	1
  3577     06E9  2F84               	goto	l245
  3578     06EA                     l244:	
  3579                           ;matrix_keypad.c: 40:     else if (RB1 == 0)
  3580                           
  3581     06EA  1886               	btfsc	6,1	;volatile
  3582     06EB  2EED               	goto	u961
  3583     06EC  2EEE               	goto	u960
  3584     06ED                     u961:
  3585     06ED  2EF0               	goto	l247
  3586     06EE                     u960:
  3587     06EE                     l1633:
  3588                           
  3589                           ;matrix_keypad.c: 41:     {;matrix_keypad.c: 42:         return 2;
  3590     06EE  3002               	movlw	2
  3591     06EF  2F84               	goto	l245
  3592     06F0                     l247:	
  3593                           ;matrix_keypad.c: 44:     else if (RB2 == 0)
  3594                           
  3595     06F0  1906               	btfsc	6,2	;volatile
  3596     06F1  2EF3               	goto	u971
  3597     06F2  2EF4               	goto	u970
  3598     06F3                     u971:
  3599     06F3  2EF6               	goto	l246
  3600     06F4                     u970:
  3601     06F4                     l1639:
  3602                           
  3603                           ;matrix_keypad.c: 45:     {;matrix_keypad.c: 46:         return 3;
  3604     06F4  3003               	movlw	3
  3605     06F5  2F84               	goto	l245
  3606     06F6                     l246:
  3607                           
  3608                           ;matrix_keypad.c: 49:     RD3 = 1;
  3609     06F6  1588               	bsf	8,3	;volatile
  3610                           
  3611                           ;matrix_keypad.c: 50:     RD2 = 0;
  3612     06F7  1108               	bcf	8,2	;volatile
  3613                           
  3614                           ;matrix_keypad.c: 51:     RD1 = 1;
  3615     06F8  1488               	bsf	8,1	;volatile
  3616                           
  3617                           ;matrix_keypad.c: 52:     RD0 = 1;
  3618     06F9  1408               	bsf	8,0	;volatile
  3619     06FA                     l1643:
  3620                           
  3621                           ;matrix_keypad.c: 54:    for (i = 100; i > 0; i--)
  3622     06FA  3064               	movlw	100
  3623     06FB  00F2               	movwf	scan_key@i
  3624     06FC  3000               	movlw	0
  3625     06FD  00F3               	movwf	scan_key@i+1
  3626     06FE                     l1649:
  3627                           
  3628                           ;matrix_keypad.c: 55:        ;
  3629     06FE  30FF               	movlw	255
  3630     06FF  07F2               	addwf	scan_key@i,f
  3631     0700  1803               	skipnc
  3632     0701  0AF3               	incf	scan_key@i+1,f
  3633     0702  30FF               	movlw	255
  3634     0703  07F3               	addwf	scan_key@i+1,f
  3635     0704                     l1651:
  3636     0704  0873               	movf	scan_key@i+1,w
  3637     0705  3A80               	xorlw	128
  3638     0706  00FF               	movwf	btemp+1
  3639     0707  3080               	movlw	128
  3640     0708  027F               	subwf	btemp+1,w
  3641     0709  1D03               	skipz
  3642     070A  2F0D               	goto	u985
  3643     070B  3001               	movlw	1
  3644     070C  0272               	subwf	scan_key@i,w
  3645     070D                     u985:
  3646     070D  1803               	skipnc
  3647     070E  2F10               	goto	u981
  3648     070F  2F11               	goto	u980
  3649     0710                     u981:
  3650     0710  2EFE               	goto	l1649
  3651     0711                     u980:
  3652     0711                     l251:
  3653                           
  3654                           ;matrix_keypad.c: 57:     if (RB0 == 0)
  3655     0711  1283               	bcf	3,5	;RP0=0, select bank0
  3656     0712  1303               	bcf	3,6	;RP1=0, select bank0
  3657     0713  1806               	btfsc	6,0	;volatile
  3658     0714  2F16               	goto	u991
  3659     0715  2F17               	goto	u990
  3660     0716                     u991:
  3661     0716  2F19               	goto	l252
  3662     0717                     u990:
  3663     0717                     l1653:
  3664                           
  3665                           ;matrix_keypad.c: 58:     {;matrix_keypad.c: 59:         return 4;
  3666     0717  3004               	movlw	4
  3667     0718  2F84               	goto	l245
  3668     0719                     l252:	
  3669                           ;matrix_keypad.c: 61:     else if (RB1 == 0)
  3670                           
  3671     0719  1886               	btfsc	6,1	;volatile
  3672     071A  2F1C               	goto	u1001
  3673     071B  2F1D               	goto	u1000
  3674     071C                     u1001:
  3675     071C  2F1F               	goto	l254
  3676     071D                     u1000:
  3677     071D                     l1659:
  3678                           
  3679                           ;matrix_keypad.c: 62:     {;matrix_keypad.c: 63:         return 5;
  3680     071D  3005               	movlw	5
  3681     071E  2F84               	goto	l245
  3682     071F                     l254:	
  3683                           ;matrix_keypad.c: 65:     else if (RB2 == 0)
  3684                           
  3685     071F  1906               	btfsc	6,2	;volatile
  3686     0720  2F22               	goto	u1011
  3687     0721  2F23               	goto	u1010
  3688     0722                     u1011:
  3689     0722  2F25               	goto	l253
  3690     0723                     u1010:
  3691     0723                     l1665:
  3692                           
  3693                           ;matrix_keypad.c: 66:     {;matrix_keypad.c: 67:         return 6;
  3694     0723  3006               	movlw	6
  3695     0724  2F84               	goto	l245
  3696     0725                     l253:
  3697                           
  3698                           ;matrix_keypad.c: 70:     RD3 = 1;
  3699     0725  1588               	bsf	8,3	;volatile
  3700                           
  3701                           ;matrix_keypad.c: 71:     RD2 = 1;
  3702     0726  1508               	bsf	8,2	;volatile
  3703                           
  3704                           ;matrix_keypad.c: 72:     RD1 = 0;
  3705     0727  1088               	bcf	8,1	;volatile
  3706                           
  3707                           ;matrix_keypad.c: 73:     RD0 = 1;
  3708     0728  1408               	bsf	8,0	;volatile
  3709     0729                     l1669:
  3710                           
  3711                           ;matrix_keypad.c: 75:     for (i = 100; i > 0; i--);
  3712     0729  3064               	movlw	100
  3713     072A  00F2               	movwf	scan_key@i
  3714     072B  3000               	movlw	0
  3715     072C  00F3               	movwf	scan_key@i+1
  3716     072D                     l1675:
  3717     072D  30FF               	movlw	255
  3718     072E  07F2               	addwf	scan_key@i,f
  3719     072F  1803               	skipnc
  3720     0730  0AF3               	incf	scan_key@i+1,f
  3721     0731  30FF               	movlw	255
  3722     0732  07F3               	addwf	scan_key@i+1,f
  3723     0733                     l1677:
  3724     0733  0873               	movf	scan_key@i+1,w
  3725     0734  3A80               	xorlw	128
  3726     0735  00FF               	movwf	btemp+1
  3727     0736  3080               	movlw	128
  3728     0737  027F               	subwf	btemp+1,w
  3729     0738  1D03               	skipz
  3730     0739  2F3C               	goto	u1025
  3731     073A  3001               	movlw	1
  3732     073B  0272               	subwf	scan_key@i,w
  3733     073C                     u1025:
  3734     073C  1803               	skipnc
  3735     073D  2F3F               	goto	u1021
  3736     073E  2F40               	goto	u1020
  3737     073F                     u1021:
  3738     073F  2F2D               	goto	l1675
  3739     0740                     u1020:
  3740     0740                     l258:
  3741                           
  3742                           ;matrix_keypad.c: 77:     if (RB0 == 0)
  3743     0740  1283               	bcf	3,5	;RP0=0, select bank0
  3744     0741  1303               	bcf	3,6	;RP1=0, select bank0
  3745     0742  1806               	btfsc	6,0	;volatile
  3746     0743  2F45               	goto	u1031
  3747     0744  2F46               	goto	u1030
  3748     0745                     u1031:
  3749     0745  2F48               	goto	l259
  3750     0746                     u1030:
  3751     0746                     l1679:
  3752                           
  3753                           ;matrix_keypad.c: 78:     {;matrix_keypad.c: 79:         return 7;
  3754     0746  3007               	movlw	7
  3755     0747  2F84               	goto	l245
  3756     0748                     l259:	
  3757                           ;matrix_keypad.c: 81:     else if (RB1 == 0)
  3758                           
  3759     0748  1886               	btfsc	6,1	;volatile
  3760     0749  2F4B               	goto	u1041
  3761     074A  2F4C               	goto	u1040
  3762     074B                     u1041:
  3763     074B  2F4E               	goto	l261
  3764     074C                     u1040:
  3765     074C                     l1685:
  3766                           
  3767                           ;matrix_keypad.c: 82:     {;matrix_keypad.c: 83:         return 8;
  3768     074C  3008               	movlw	8
  3769     074D  2F84               	goto	l245
  3770     074E                     l261:	
  3771                           ;matrix_keypad.c: 85:     else if (RB2 == 0)
  3772                           
  3773     074E  1906               	btfsc	6,2	;volatile
  3774     074F  2F51               	goto	u1051
  3775     0750  2F52               	goto	u1050
  3776     0751                     u1051:
  3777     0751  2F54               	goto	l260
  3778     0752                     u1050:
  3779     0752                     l1691:
  3780                           
  3781                           ;matrix_keypad.c: 86:     {;matrix_keypad.c: 87:         return 9;
  3782     0752  3009               	movlw	9
  3783     0753  2F84               	goto	l245
  3784     0754                     l260:
  3785                           
  3786                           ;matrix_keypad.c: 90:     RD3 = 1;
  3787     0754  1588               	bsf	8,3	;volatile
  3788                           
  3789                           ;matrix_keypad.c: 91:     RD2 = 1;
  3790     0755  1508               	bsf	8,2	;volatile
  3791                           
  3792                           ;matrix_keypad.c: 92:     RD1 = 1;
  3793     0756  1488               	bsf	8,1	;volatile
  3794                           
  3795                           ;matrix_keypad.c: 93:     RD0 = 0;
  3796     0757  1008               	bcf	8,0	;volatile
  3797     0758                     l1695:
  3798                           
  3799                           ;matrix_keypad.c: 95:     for (i = 100; i > 0; i--);
  3800     0758  3064               	movlw	100
  3801     0759  00F2               	movwf	scan_key@i
  3802     075A  3000               	movlw	0
  3803     075B  00F3               	movwf	scan_key@i+1
  3804     075C                     l1701:
  3805     075C  30FF               	movlw	255
  3806     075D  07F2               	addwf	scan_key@i,f
  3807     075E  1803               	skipnc
  3808     075F  0AF3               	incf	scan_key@i+1,f
  3809     0760  30FF               	movlw	255
  3810     0761  07F3               	addwf	scan_key@i+1,f
  3811     0762                     l1703:
  3812     0762  0873               	movf	scan_key@i+1,w
  3813     0763  3A80               	xorlw	128
  3814     0764  00FF               	movwf	btemp+1
  3815     0765  3080               	movlw	128
  3816     0766  027F               	subwf	btemp+1,w
  3817     0767  1D03               	skipz
  3818     0768  2F6B               	goto	u1065
  3819     0769  3001               	movlw	1
  3820     076A  0272               	subwf	scan_key@i,w
  3821     076B                     u1065:
  3822     076B  1803               	skipnc
  3823     076C  2F6E               	goto	u1061
  3824     076D  2F6F               	goto	u1060
  3825     076E                     u1061:
  3826     076E  2F5C               	goto	l1701
  3827     076F                     u1060:
  3828     076F                     l265:
  3829                           
  3830                           ;matrix_keypad.c: 97:     if (RB0 == 0)
  3831     076F  1283               	bcf	3,5	;RP0=0, select bank0
  3832     0770  1303               	bcf	3,6	;RP1=0, select bank0
  3833     0771  1806               	btfsc	6,0	;volatile
  3834     0772  2F74               	goto	u1071
  3835     0773  2F75               	goto	u1070
  3836     0774                     u1071:
  3837     0774  2F77               	goto	l266
  3838     0775                     u1070:
  3839     0775                     l1705:
  3840                           
  3841                           ;matrix_keypad.c: 98:     {;matrix_keypad.c: 99:         return '*';
  3842     0775  302A               	movlw	42
  3843     0776  2F84               	goto	l245
  3844     0777                     l266:	
  3845                           ;matrix_keypad.c: 101:     else if (RB1 == 0)
  3846                           
  3847     0777  1886               	btfsc	6,1	;volatile
  3848     0778  2F7A               	goto	u1081
  3849     0779  2F7B               	goto	u1080
  3850     077A                     u1081:
  3851     077A  2F7D               	goto	l268
  3852     077B                     u1080:
  3853     077B                     l1711:
  3854                           
  3855                           ;matrix_keypad.c: 102:     {;matrix_keypad.c: 103:         return 0;
  3856     077B  3000               	movlw	0
  3857     077C  2F84               	goto	l245
  3858     077D                     l268:	
  3859                           ;matrix_keypad.c: 105:     else if (RB2 == 0)
  3860                           
  3861     077D  1906               	btfsc	6,2	;volatile
  3862     077E  2F80               	goto	u1091
  3863     077F  2F81               	goto	u1090
  3864     0780                     u1091:
  3865     0780  2F83               	goto	l1721
  3866     0781                     u1090:
  3867     0781                     l1717:
  3868                           
  3869                           ;matrix_keypad.c: 106:     {;matrix_keypad.c: 107:         return '#';
  3870     0781  3023               	movlw	35
  3871     0782  2F84               	goto	l245
  3872     0783                     l1721:
  3873                           
  3874                           ;matrix_keypad.c: 110:     return 0xFF;
  3875     0783  30FF               	movlw	255
  3876     0784                     l245:
  3877     0784  0008               	return
  3878     0785                     __end_of_scan_key:
  3879                           
  3880                           	psect	text10
  3881     0785                     __ptext10:	
  3882 ;; *************** function _power_screen *****************
  3883 ;; Defined at:
  3884 ;;		line 189 in file "main.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;		None
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;  i               1   11[BANK0 ] unsigned char 
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  1    wreg      void 
  3891 ;; Registers used:
  3892 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3898 ;;      Params:         0       0       0       0       0
  3899 ;;      Locals:         0       1       0       0       0
  3900 ;;      Temps:          0       3       0       0       0
  3901 ;;      Totals:         0       4       0       0       0
  3902 ;;Total ram usage:        4 bytes
  3903 ;; Hardware stack levels used: 1
  3904 ;; Hardware stack levels required when called: 3
  3905 ;; This function calls:
  3906 ;;		_clcd_ch
  3907 ;;		_clcd_print
  3908 ;; This function is called by:
  3909 ;;		_main
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913     0785                     _power_screen:	
  3914                           ;psect for function _power_screen
  3915                           
  3916     0785                     l1865:	
  3917                           ;incstack = 0
  3918                           ; Regs used in _power_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3919                           
  3920                           
  3921                           ;main.c: 191: ;main.c: 192:  _delay((unsigned long)((1000)*(20000000/4000.0)));
  3922     0785  1283               	bcf	3,5	;RP0=0, select bank0
  3923     0786  1303               	bcf	3,6	;RP1=0, select bank0
  3924     0787  01AB               	clrf	power_screen@i
  3925     0788                     l1871:
  3926                           
  3927                           ;main.c: 193: };main.c: 194: 
  3928     0788  082B               	movf	power_screen@i,w
  3929     0789  3E80               	addlw	128
  3930     078A  00A6               	movwf	clcd_ch@addr
  3931     078B  30FF               	movlw	255
  3932     078C  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  3933     0791                     l1873:
  3934                           
  3935                           ;main.c: 195: 
  3936     0791  3003               	movlw	3
  3937     0792  1283               	bcf	3,5	;RP0=0, select bank0
  3938     0793  1303               	bcf	3,6	;RP1=0, select bank0
  3939     0794  00AA               	movwf	??_power_screen+2
  3940     0795  308A               	movlw	138
  3941     0796  00A9               	movwf	??_power_screen+1
  3942     0797  3055               	movlw	85
  3943     0798  00A8               	movwf	??_power_screen
  3944     0799                     u2197:
  3945     0799  0BA8               	decfsz	??_power_screen,f
  3946     079A  2F99               	goto	u2197
  3947     079B  0BA9               	decfsz	??_power_screen+1,f
  3948     079C  2F99               	goto	u2197
  3949     079D  0BAA               	decfsz	??_power_screen+2,f
  3950     079E  2F99               	goto	u2197
  3951     079F                     l1875:
  3952                           
  3953                           ;main.c: 196: 
  3954     079F  3001               	movlw	1
  3955     07A0  1283               	bcf	3,5	;RP0=0, select bank0
  3956     07A1  1303               	bcf	3,6	;RP1=0, select bank0
  3957     07A2  07AB               	addwf	power_screen@i,f
  3958     07A3                     l1877:
  3959     07A3  3010               	movlw	16
  3960     07A4  022B               	subwf	power_screen@i,w
  3961     07A5  1C03               	skipc
  3962     07A6  2FA8               	goto	u1351
  3963     07A7  2FA9               	goto	u1350
  3964     07A8                     u1351:
  3965     07A8  2F88               	goto	l1871
  3966     07A9                     u1350:
  3967     07A9                     l1879:
  3968                           
  3969                           ;main.c: 197: void menu(void)
  3970     07A9  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3971     07AA  00F6               	movwf	clcd_print@str
  3972     07AB  30C0               	movlw	192
  3973     07AC  00F7               	movwf	clcd_print@addr
  3974     07AD  120A  158A  2673  120A  118A  	fcall	_clcd_print
  3975                           
  3976                           ;main.c: 198: {
  3977     07B2  3023               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3978     07B3  00F6               	movwf	clcd_print@str
  3979     07B4  3090               	movlw	144
  3980     07B5  00F7               	movwf	clcd_print@addr
  3981     07B6  120A  158A  2673  120A  118A  	fcall	_clcd_print
  3982     07BB                     l1881:
  3983                           
  3984                           ;main.c: 199:     clcd_print("1.MICRO",(0x80 + 0));
  3985     07BB  1283               	bcf	3,5	;RP0=0, select bank0
  3986     07BC  1303               	bcf	3,6	;RP1=0, select bank0
  3987     07BD  01AB               	clrf	power_screen@i
  3988     07BE                     l1887:
  3989                           
  3990                           ;main.c: 200:     clcd_print("2.GRILL",(0xC0 + 0));;main.c: 201:     clcd_print("3.CONVE
      +                          CTION",(0x90 + 0));
  3991     07BE  082B               	movf	power_screen@i,w
  3992     07BF  3ED0               	addlw	208
  3993     07C0  00A6               	movwf	clcd_ch@addr
  3994     07C1  30FF               	movlw	255
  3995     07C2  120A  118A  24EB  120A  118A  	fcall	_clcd_ch
  3996     07C7                     l1889:
  3997                           
  3998                           ;main.c: 202:     clcd_print("4.START",(0xD0 + 0));
  3999     07C7  3003               	movlw	3
  4000     07C8  1283               	bcf	3,5	;RP0=0, select bank0
  4001     07C9  1303               	bcf	3,6	;RP1=0, select bank0
  4002     07CA  00AA               	movwf	??_power_screen+2
  4003     07CB  308A               	movlw	138
  4004     07CC  00A9               	movwf	??_power_screen+1
  4005     07CD  3055               	movlw	85
  4006     07CE  00A8               	movwf	??_power_screen
  4007     07CF                     u2207:
  4008     07CF  0BA8               	decfsz	??_power_screen,f
  4009     07D0  2FCF               	goto	u2207
  4010     07D1  0BA9               	decfsz	??_power_screen+1,f
  4011     07D2  2FCF               	goto	u2207
  4012     07D3  0BAA               	decfsz	??_power_screen+2,f
  4013     07D4  2FCF               	goto	u2207
  4014     07D5                     l1891:
  4015                           
  4016                           ;main.c: 203: 
  4017     07D5  3001               	movlw	1
  4018     07D6  1283               	bcf	3,5	;RP0=0, select bank0
  4019     07D7  1303               	bcf	3,6	;RP1=0, select bank0
  4020     07D8  07AB               	addwf	power_screen@i,f
  4021     07D9                     l1893:
  4022     07D9  3010               	movlw	16
  4023     07DA  022B               	subwf	power_screen@i,w
  4024     07DB  1C03               	skipc
  4025     07DC  2FDE               	goto	u1361
  4026     07DD  2FDF               	goto	u1360
  4027     07DE                     u1361:
  4028     07DE  2FBE               	goto	l1887
  4029     07DF                     u1360:
  4030     07DF                     l1895:
  4031                           
  4032                           ;main.c: 205: }
  4033     07DF  301A               	movlw	26
  4034     07E0  1283               	bcf	3,5	;RP0=0, select bank0
  4035     07E1  1303               	bcf	3,6	;RP1=0, select bank0
  4036     07E2  00AA               	movwf	??_power_screen+2
  4037     07E3  305E               	movlw	94
  4038     07E4  00A9               	movwf	??_power_screen+1
  4039     07E5  306D               	movlw	109
  4040     07E6  00A8               	movwf	??_power_screen
  4041     07E7                     u2217:
  4042     07E7  0BA8               	decfsz	??_power_screen,f
  4043     07E8  2FE7               	goto	u2217
  4044     07E9  0BA9               	decfsz	??_power_screen+1,f
  4045     07EA  2FE7               	goto	u2217
  4046     07EB  0BAA               	decfsz	??_power_screen+2,f
  4047     07EC  2FE7               	goto	u2217
  4048     07ED  2FEE               	nop2
  4049     07EE                     l153:
  4050     07EE  0008               	return
  4051     07EF                     __end_of_power_screen:
  4052                           
  4053                           	psect	text11
  4054     04EB                     __ptext11:	
  4055 ;; *************** function _clcd_ch *****************
  4056 ;; Defined at:
  4057 ;;		line 62 in file "clcd.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  data            1    wreg     const unsigned char 
  4060 ;;  addr            1    6[BANK0 ] unsigned char 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;  data            1    7[BANK0 ] const unsigned char 
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  1    wreg      void 
  4065 ;; Registers used:
  4066 ;;		wreg, status,2, status,0, pclath, cstack
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4072 ;;      Params:         0       1       0       0       0
  4073 ;;      Locals:         0       1       0       0       0
  4074 ;;      Temps:          0       0       0       0       0
  4075 ;;      Totals:         0       2       0       0       0
  4076 ;;Total ram usage:        2 bytes
  4077 ;; Hardware stack levels used: 1
  4078 ;; Hardware stack levels required when called: 2
  4079 ;; This function calls:
  4080 ;;		_clcd_write
  4081 ;; This function is called by:
  4082 ;;		_power_screen
  4083 ;;		_set_time
  4084 ;;		_time_screen
  4085 ;;		_set_temp
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089     04EB                     _clcd_ch:	
  4090                           ;psect for function _clcd_ch
  4091                           
  4092                           
  4093                           ;incstack = 0
  4094                           ; Regs used in _clcd_ch: [wreg+status,2+status,0+pclath+cstack]
  4095                           ;clcd_ch@data stored from wreg
  4096     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  4097     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  4098     04ED  00A7               	movwf	clcd_ch@data
  4099     04EE                     l1593:
  4100                           
  4101                           ;clcd.c: 62: void clcd_ch(const char data, unsigned char addr);clcd.c: 63: {;clcd.c: 64:
      +                               clcd_write(addr,0);
  4102     04EE  01F2               	clrf	clcd_write@mode
  4103     04EF  0826               	movf	clcd_ch@addr,w
  4104     04F0  120A  158A  271D  120A  118A  	fcall	_clcd_write
  4105                           
  4106                           ;clcd.c: 65:     clcd_write(data,1);
  4107     04F5  01F2               	clrf	clcd_write@mode
  4108     04F6  0AF2               	incf	clcd_write@mode,f
  4109     04F7  1283               	bcf	3,5	;RP0=0, select bank0
  4110     04F8  1303               	bcf	3,6	;RP1=0, select bank0
  4111     04F9  0827               	movf	clcd_ch@data,w
  4112     04FA  120A  158A  271D  120A  118A  	fcall	_clcd_write
  4113     04FF                     l26:
  4114     04FF  0008               	return
  4115     0500                     __end_of_clcd_ch:
  4116                           
  4117                           	psect	text12
  4118     0E98                     __ptext12:	
  4119 ;; *************** function _menu *****************
  4120 ;; Defined at:
  4121 ;;		line 210 in file "main.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4135 ;;      Params:         0       0       0       0       0
  4136 ;;      Locals:         0       0       0       0       0
  4137 ;;      Temps:          0       0       0       0       0
  4138 ;;      Totals:         0       0       0       0       0
  4139 ;;Total ram usage:        0 bytes
  4140 ;; Hardware stack levels used: 1
  4141 ;; Hardware stack levels required when called: 3
  4142 ;; This function calls:
  4143 ;;		_clcd_print
  4144 ;; This function is called by:
  4145 ;;		_main
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149     0E98                     _menu:	
  4150                           ;psect for function _menu
  4151                           
  4152     0E98                     l1897:	
  4153                           ;incstack = 0
  4154                           ; Regs used in _menu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4155                           
  4156                           
  4157                           ;main.c: 212:     static int wait;
  4158     0E98  30D6               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  4159     0E99  00F6               	movwf	clcd_print@str
  4160     0E9A  3080               	movlw	128
  4161     0E9B  00F7               	movwf	clcd_print@addr
  4162     0E9C  120A  158A  2673  120A  158A  	fcall	_clcd_print
  4163                           
  4164                           ;main.c: 213: 
  4165     0EA1  30CE               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  4166     0EA2  00F6               	movwf	clcd_print@str
  4167     0EA3  30C0               	movlw	192
  4168     0EA4  00F7               	movwf	clcd_print@addr
  4169     0EA5  120A  158A  2673  120A  158A  	fcall	_clcd_print
  4170                           
  4171                           ;main.c: 214:     if(reset_flag == 0x10)
  4172     0EAA  30A0               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  4173     0EAB  00F6               	movwf	clcd_print@str
  4174     0EAC  3090               	movlw	144
  4175     0EAD  00F7               	movwf	clcd_print@addr
  4176     0EAE  120A  158A  2673  120A  158A  	fcall	_clcd_print
  4177                           
  4178                           ;main.c: 215:     {
  4179     0EB3  30DE               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  4180     0EB4  00F6               	movwf	clcd_print@str
  4181     0EB5  30D0               	movlw	208
  4182     0EB6  00F7               	movwf	clcd_print@addr
  4183     0EB7  120A  158A  2673  120A  158A  	fcall	_clcd_print
  4184     0EBC                     l156:
  4185     0EBC  0008               	return
  4186     0EBD                     __end_of_menu:
  4187                           
  4188                           	psect	text13
  4189     0E73                     __ptext13:	
  4190 ;; *************** function _clcd_print *****************
  4191 ;; Defined at:
  4192 ;;		line 68 in file "clcd.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  str             1    6[COMMON] PTR const unsigned char 
  4195 ;;		 -> STR_23(13), STR_22(15), STR_21(4), STR_20(17), 
  4196 ;;		 -> STR_19(9), STR_18(15), STR_17(16), STR_16(7), 
  4197 ;;		 -> STR_15(8), STR_14(15), STR_13(8), STR_12(3), 
  4198 ;;		 -> STR_11(3), STR_10(17), STR_9(8), STR_8(17), 
  4199 ;;		 -> STR_7(8), STR_6(13), STR_5(8), STR_4(8), 
  4200 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  4201 ;;  addr            1    7[COMMON] unsigned char 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;		None
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  1    wreg      void 
  4206 ;; Registers used:
  4207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4213 ;;      Params:         2       0       0       0       0
  4214 ;;      Locals:         0       0       0       0       0
  4215 ;;      Temps:          0       0       0       0       0
  4216 ;;      Totals:         2       0       0       0       0
  4217 ;;Total ram usage:        2 bytes
  4218 ;; Hardware stack levels used: 1
  4219 ;; Hardware stack levels required when called: 2
  4220 ;; This function calls:
  4221 ;;		_clcd_write
  4222 ;; This function is called by:
  4223 ;;		_main
  4224 ;;		_power_screen
  4225 ;;		_menu
  4226 ;;		_set_time
  4227 ;;		_time_screen
  4228 ;;		_set_temp
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232     0E73                     _clcd_print:	
  4233                           ;psect for function _clcd_print
  4234                           
  4235     0E73                     l1595:	
  4236                           ;incstack = 0
  4237                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4238                           
  4239                           
  4240                           ;clcd.c: 68: void clcd_print(const char *str, unsigned char addr);clcd.c: 69: {;clcd.c: 
      +                          70:     clcd_write(addr,0);
  4241     0E73  01F2               	clrf	clcd_write@mode
  4242     0E74  0877               	movf	clcd_print@addr,w
  4243     0E75  120A  158A  271D  120A  158A  	fcall	_clcd_write
  4244                           
  4245                           ;clcd.c: 72:     while(*str != '\0')
  4246     0E7A  2E8B               	goto	l1601
  4247     0E7B                     l1597:
  4248                           
  4249                           ;clcd.c: 73:     {;clcd.c: 74:         clcd_write(*str,1);
  4250     0E7B  01F2               	clrf	clcd_write@mode
  4251     0E7C  0AF2               	incf	clcd_write@mode,f
  4252     0E7D  0876               	movf	clcd_print@str,w
  4253     0E7E  0084               	movwf	4
  4254     0E7F  120A  118A  2500  120A  158A  	fcall	stringdir
  4255     0E84  120A  158A  271D  120A  158A  	fcall	_clcd_write
  4256     0E89                     l1599:
  4257                           
  4258                           ;clcd.c: 75:         str++;
  4259     0E89  3001               	movlw	1
  4260     0E8A  07F6               	addwf	clcd_print@str,f
  4261     0E8B                     l1601:
  4262                           
  4263                           ;clcd.c: 72:     while(*str != '\0')
  4264     0E8B  0876               	movf	clcd_print@str,w
  4265     0E8C  0084               	movwf	4
  4266     0E8D  120A  118A  2500  120A  158A  	fcall	stringdir
  4267     0E92  3A00               	xorlw	0
  4268     0E93  1D03               	skipz
  4269     0E94  2E96               	goto	u931
  4270     0E95  2E97               	goto	u930
  4271     0E96                     u931:
  4272     0E96  2E7B               	goto	l1597
  4273     0E97                     u930:
  4274     0E97                     l32:
  4275     0E97  0008               	return
  4276     0E98                     __end_of_clcd_print:
  4277                           
  4278                           	psect	text14
  4279     0E55                     __ptext14:	
  4280 ;; *************** function _init_config *****************
  4281 ;; Defined at:
  4282 ;;		line 16 in file "main.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;		None
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      void 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0, pclath, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4296 ;;      Params:         0       0       0       0       0
  4297 ;;      Locals:         0       0       0       0       0
  4298 ;;      Temps:          0       0       0       0       0
  4299 ;;      Totals:         0       0       0       0       0
  4300 ;;Total ram usage:        0 bytes
  4301 ;; Hardware stack levels used: 1
  4302 ;; Hardware stack levels required when called: 4
  4303 ;; This function calls:
  4304 ;;		_init_clcd
  4305 ;;		_init_matrix
  4306 ;;		_init_timer2
  4307 ;; This function is called by:
  4308 ;;		_main
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312     0E55                     _init_config:	
  4313                           ;psect for function _init_config
  4314                           
  4315     0E55                     l1821:	
  4316                           ;incstack = 0
  4317                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  4318                           
  4319                           
  4320                           ;main.c: 17: 
  4321     0E55  120A  158A  261A  120A  158A  	fcall	_init_clcd
  4322                           
  4323                           ;main.c: 18:     init_config();
  4324     0E5A  120A  158A  2632  120A  158A  	fcall	_init_matrix
  4325     0E5F                     l1823:
  4326                           
  4327                           ;main.c: 19:     unsigned char key;
  4328     0E5F  1683               	bsf	3,5	;RP0=1, select bank1
  4329     0E60  1303               	bcf	3,6	;RP1=0, select bank1
  4330     0E61  1107               	bcf	7,2	;volatile
  4331     0E62                     l1825:
  4332                           
  4333                           ;main.c: 20:     int reset_flag;
  4334     0E62  1283               	bcf	3,5	;RP0=0, select bank0
  4335     0E63  1303               	bcf	3,6	;RP1=0, select bank0
  4336     0E64  1107               	bcf	7,2	;volatile
  4337     0E65                     l1827:
  4338                           
  4339                           ;main.c: 21:     while(1)
  4340     0E65  1683               	bsf	3,5	;RP0=1, select bank1
  4341     0E66  1303               	bcf	3,6	;RP1=0, select bank1
  4342     0E67  1087               	bcf	7,1	;volatile
  4343     0E68                     l1829:
  4344                           
  4345                           ;main.c: 22:     {
  4346     0E68  1283               	bcf	3,5	;RP0=0, select bank0
  4347     0E69  1303               	bcf	3,6	;RP1=0, select bank0
  4348     0E6A  1087               	bcf	7,1	;volatile
  4349     0E6B                     l1831:
  4350                           
  4351                           ;main.c: 23:         key = read_key(1);
  4352     0E6B  120A  158A  2625  120A  158A  	fcall	_init_timer2
  4353     0E70                     l1833:
  4354                           
  4355                           ;main.c: 24:         if(operation_flag == 0x02)
  4356     0E70  178B               	bsf	11,7	;volatile
  4357     0E71                     l1835:
  4358                           
  4359                           ;main.c: 25:         {
  4360     0E71  170B               	bsf	11,6	;volatile
  4361     0E72                     l103:
  4362     0E72  0008               	return
  4363     0E73                     __end_of_init_config:
  4364                           
  4365                           	psect	text15
  4366     0E25                     __ptext15:	
  4367 ;; *************** function _init_timer2 *****************
  4368 ;; Defined at:
  4369 ;;		line 4 in file "timers.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;		None
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;		None
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  1    wreg      void 
  4376 ;; Registers used:
  4377 ;;		None
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4383 ;;      Params:         0       0       0       0       0
  4384 ;;      Locals:         0       0       0       0       0
  4385 ;;      Temps:          0       0       0       0       0
  4386 ;;      Totals:         0       0       0       0       0
  4387 ;;Total ram usage:        0 bytes
  4388 ;; Hardware stack levels used: 1
  4389 ;; Hardware stack levels required when called: 1
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_init_config
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397     0E25                     _init_timer2:	
  4398                           ;psect for function _init_timer2
  4399                           
  4400     0E25                     l1615:	
  4401                           ;incstack = 0
  4402                           ; Regs used in _init_timer2: []
  4403                           
  4404                           
  4405                           ;timers.c: 7:     T2CKPS0 = 1;
  4406     0E25  1283               	bcf	3,5	;RP0=0, select bank0
  4407     0E26  1303               	bcf	3,6	;RP1=0, select bank0
  4408     0E27  1412               	bsf	18,0	;volatile
  4409                           
  4410                           ;timers.c: 8:     T2CKPS1 = 1;
  4411     0E28  1492               	bsf	18,1	;volatile
  4412                           
  4413                           ;timers.c: 11:     PR2 = 250;
  4414     0E29  30FA               	movlw	250
  4415     0E2A  1683               	bsf	3,5	;RP0=1, select bank1
  4416     0E2B  1303               	bcf	3,6	;RP1=0, select bank1
  4417     0E2C  0092               	movwf	18	;volatile
  4418                           
  4419                           ;timers.c: 14:     TMR2IE = 1;
  4420     0E2D  148C               	bsf	12,1	;volatile
  4421                           
  4422                           ;timers.c: 17:     TMR2ON = 0;
  4423     0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  4424     0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  4425     0E30  1112               	bcf	18,2	;volatile
  4426     0E31                     l293:
  4427     0E31  0008               	return
  4428     0E32                     __end_of_init_timer2:
  4429                           
  4430                           	psect	text16
  4431     0E32                     __ptext16:	
  4432 ;; *************** function _init_matrix *****************
  4433 ;; Defined at:
  4434 ;;		line 12 in file "matrix_keypad.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;		None
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;		None
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  1    wreg      void 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4448 ;;      Params:         0       0       0       0       0
  4449 ;;      Locals:         0       0       0       0       0
  4450 ;;      Temps:          0       0       0       0       0
  4451 ;;      Totals:         0       0       0       0       0
  4452 ;;Total ram usage:        0 bytes
  4453 ;; Hardware stack levels used: 1
  4454 ;; Hardware stack levels required when called: 1
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_init_config
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462     0E32                     _init_matrix:	
  4463                           ;psect for function _init_matrix
  4464                           
  4465     0E32                     l1603:	
  4466                           ;incstack = 0
  4467                           ; Regs used in _init_matrix: [wreg+status,2]
  4468                           
  4469                           
  4470                           ;matrix_keypad.c: 14:     TRISB = TRISB | 0x07 ;
  4471     0E32  1683               	bsf	3,5	;RP0=1, select bank1
  4472     0E33  1303               	bcf	3,6	;RP1=0, select bank1
  4473     0E34  0806               	movf	6,w	;volatile
  4474     0E35  3807               	iorlw	7
  4475     0E36  0086               	movwf	6	;volatile
  4476                           
  4477                           ;matrix_keypad.c: 15:     TRISD = TRISD & 0xF0 ;
  4478     0E37  0808               	movf	8,w	;volatile
  4479     0E38  39F0               	andlw	240
  4480     0E39  0088               	movwf	8	;volatile
  4481     0E3A                     l1605:
  4482                           
  4483                           ;matrix_keypad.c: 16:     nRBPU = 0;
  4484     0E3A  1381               	bcf	1,7	;volatile
  4485     0E3B                     l1607:
  4486                           
  4487                           ;matrix_keypad.c: 18:     RD3 = 1 ;
  4488     0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  4489     0E3C  1303               	bcf	3,6	;RP1=0, select bank0
  4490     0E3D  1588               	bsf	8,3	;volatile
  4491     0E3E                     l1609:
  4492                           
  4493                           ;matrix_keypad.c: 19:     RD2 = 1;
  4494     0E3E  1508               	bsf	8,2	;volatile
  4495     0E3F                     l1611:
  4496                           
  4497                           ;matrix_keypad.c: 20:     RD1 = 1;
  4498     0E3F  1488               	bsf	8,1	;volatile
  4499     0E40                     l1613:
  4500                           
  4501                           ;matrix_keypad.c: 21:     RD0 = 1;
  4502     0E40  1408               	bsf	8,0	;volatile
  4503     0E41                     l238:
  4504     0E41  0008               	return
  4505     0E42                     __end_of_init_matrix:
  4506                           
  4507                           	psect	text17
  4508     0E1A                     __ptext17:	
  4509 ;; *************** function _init_clcd *****************
  4510 ;; Defined at:
  4511 ;;		line 50 in file "clcd.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;		None
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      void 
  4518 ;; Registers used:
  4519 ;;		wreg, status,2, status,0, pclath, cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4525 ;;      Params:         0       0       0       0       0
  4526 ;;      Locals:         0       0       0       0       0
  4527 ;;      Temps:          0       0       0       0       0
  4528 ;;      Totals:         0       0       0       0       0
  4529 ;;Total ram usage:        0 bytes
  4530 ;; Hardware stack levels used: 1
  4531 ;; Hardware stack levels required when called: 3
  4532 ;; This function calls:
  4533 ;;		_init_disp_control
  4534 ;; This function is called by:
  4535 ;;		_init_config
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539     0E1A                     _init_clcd:	
  4540                           ;psect for function _init_clcd
  4541                           
  4542     0E1A                     l1585:	
  4543                           ;incstack = 0
  4544                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  4545                           
  4546                           
  4547                           ;clcd.c: 53:     TRISD = 0x00;
  4548     0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  4549     0E1B  1303               	bcf	3,6	;RP1=0, select bank1
  4550     0E1C  0188               	clrf	8	;volatile
  4551     0E1D                     l1587:
  4552                           
  4553                           ;clcd.c: 56:     TRISE2 = 0;
  4554     0E1D  1109               	bcf	9,2	;volatile
  4555     0E1E                     l1589:
  4556                           
  4557                           ;clcd.c: 57:     TRISE1 = 0;
  4558     0E1E  1089               	bcf	9,1	;volatile
  4559     0E1F                     l1591:
  4560                           
  4561                           ;clcd.c: 59:     init_disp_control();
  4562     0E1F  120A  158A  2753  120A  158A  	fcall	_init_disp_control
  4563     0E24                     l23:
  4564     0E24  0008               	return
  4565     0E25                     __end_of_init_clcd:
  4566                           
  4567                           	psect	text18
  4568     0F53                     __ptext18:	
  4569 ;; *************** function _init_disp_control *****************
  4570 ;; Defined at:
  4571 ;;		line 28 in file "clcd.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;		None
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      void 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0, pclath, cstack
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4585 ;;      Params:         0       0       0       0       0
  4586 ;;      Locals:         0       0       0       0       0
  4587 ;;      Temps:          2       0       0       0       0
  4588 ;;      Totals:         2       0       0       0       0
  4589 ;;Total ram usage:        2 bytes
  4590 ;; Hardware stack levels used: 1
  4591 ;; Hardware stack levels required when called: 2
  4592 ;; This function calls:
  4593 ;;		_clcd_write
  4594 ;; This function is called by:
  4595 ;;		_init_clcd
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599     0F53                     _init_disp_control:	
  4600                           ;psect for function _init_disp_control
  4601                           
  4602     0F53                     l1565:	
  4603                           ;incstack = 0
  4604                           ; Regs used in _init_disp_control: [wreg+status,2+status,0+pclath+cstack]
  4605                           
  4606                           
  4607                           ;clcd.c: 31:     _delay((unsigned long)((10)*(20000000/4000000.0)));
  4608     0F53  3010               	movlw	16
  4609     0F54  00F6               	movwf	??_init_disp_control
  4610     0F55                     u2227:
  4611     0F55  0BF6               	decfsz	??_init_disp_control,f
  4612     0F56  2F55               	goto	u2227
  4613     0F57  0000               	nop
  4614     0F58                     l1567:
  4615                           
  4616                           ;clcd.c: 34:     clcd_write(0x33, 0);
  4617     0F58  01F2               	clrf	clcd_write@mode
  4618     0F59  3033               	movlw	51
  4619     0F5A  120A  158A  271D  120A  158A  	fcall	_clcd_write
  4620     0F5F                     l1569:
  4621                           
  4622                           ;clcd.c: 35:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  4623     0F5F  301B               	movlw	27
  4624     0F60  00F7               	movwf	??_init_disp_control+1
  4625     0F61  309E               	movlw	158
  4626     0F62  00F6               	movwf	??_init_disp_control
  4627     0F63                     u2237:
  4628     0F63  0BF6               	decfsz	??_init_disp_control,f
  4629     0F64  2F63               	goto	u2237
  4630     0F65  0BF7               	decfsz	??_init_disp_control+1,f
  4631     0F66  2F63               	goto	u2237
  4632     0F67  0000               	nop
  4633                           
  4634                           ;clcd.c: 36:     clcd_write(0x33, 0);
  4635     0F68  01F2               	clrf	clcd_write@mode
  4636     0F69  3033               	movlw	51
  4637     0F6A  120A  158A  271D  120A  158A  	fcall	_clcd_write
  4638     0F6F                     l1571:
  4639                           
  4640                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4641     0F6F  30A6               	movlw	166
  4642     0F70  00F6               	movwf	??_init_disp_control
  4643     0F71                     u2247:
  4644     0F71  0BF6               	decfsz	??_init_disp_control,f
  4645     0F72  2F71               	goto	u2247
  4646     0F73  0000               	nop
  4647     0F74                     l1573:
  4648                           
  4649                           ;clcd.c: 38:     clcd_write(0x33, 0);
  4650     0F74  01F2               	clrf	clcd_write@mode
  4651     0F75  3033               	movlw	51
  4652     0F76  120A  158A  271D  120A  158A  	fcall	_clcd_write
  4653     0F7B                     l1575:
  4654                           
  4655                           ;clcd.c: 39:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4656     0F7B  2F7C               	nop2	;2 cycle nop
  4657     0F7C  2F7D               	nop2	;2 cycle nop
  4658     0F7D  0000               	nop
  4659     0F7E                     l1577:
  4660                           
  4661                           ;clcd.c: 42:     clcd_write(0x02,0);
  4662     0F7E  01F2               	clrf	clcd_write@mode
  4663     0F7F  3002               	movlw	2
  4664     0F80  120A  158A  271D  120A  158A  	fcall	_clcd_write
  4665     0F85                     l1579:
  4666                           
  4667                           ;clcd.c: 43:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4668     0F85  30A6               	movlw	166
  4669     0F86  00F6               	movwf	??_init_disp_control
  4670     0F87                     u2257:
  4671     0F87  0BF6               	decfsz	??_init_disp_control,f
  4672     0F88  2F87               	goto	u2257
  4673     0F89  0000               	nop
  4674                           
  4675                           ;clcd.c: 44:     clcd_write(0x01,0);
  4676     0F8A  01F2               	clrf	clcd_write@mode
  4677     0F8B  3001               	movlw	1
  4678     0F8C  120A  158A  271D  120A  158A  	fcall	_clcd_write
  4679     0F91                     l1581:
  4680                           
  4681                           ;clcd.c: 45:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  4682     0F91  3004               	movlw	4
  4683     0F92  00F7               	movwf	??_init_disp_control+1
  4684     0F93  303D               	movlw	61
  4685     0F94  00F6               	movwf	??_init_disp_control
  4686     0F95                     u2267:
  4687     0F95  0BF6               	decfsz	??_init_disp_control,f
  4688     0F96  2F95               	goto	u2267
  4689     0F97  0BF7               	decfsz	??_init_disp_control+1,f
  4690     0F98  2F95               	goto	u2267
  4691     0F99  2F9A               	nop2
  4692     0F9A                     l1583:
  4693                           
  4694                           ;clcd.c: 46:     clcd_write(0x0C,0);
  4695     0F9A  01F2               	clrf	clcd_write@mode
  4696     0F9B  300C               	movlw	12
  4697     0F9C  120A  158A  271D  120A  158A  	fcall	_clcd_write
  4698                           
  4699                           ;clcd.c: 47:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4700     0FA1  30A6               	movlw	166
  4701     0FA2  00F6               	movwf	??_init_disp_control
  4702     0FA3                     u2277:
  4703     0FA3  0BF6               	decfsz	??_init_disp_control,f
  4704     0FA4  2FA3               	goto	u2277
  4705     0FA5  0000               	nop
  4706     0FA6                     l20:
  4707     0FA6  0008               	return
  4708     0FA7                     __end_of_init_disp_control:
  4709                           
  4710                           	psect	text19
  4711     0F1D                     __ptext19:	
  4712 ;; *************** function _clcd_write *****************
  4713 ;; Defined at:
  4714 ;;		line 11 in file "clcd.c"
  4715 ;; Parameters:    Size  Location     Type
  4716 ;;  byte            1    wreg     unsigned char 
  4717 ;;  mode            1    2[COMMON] unsigned char 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;  byte            1    5[COMMON] unsigned char 
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		wreg, status,2, status,0
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4729 ;;      Params:         1       0       0       0       0
  4730 ;;      Locals:         1       0       0       0       0
  4731 ;;      Temps:          2       0       0       0       0
  4732 ;;      Totals:         4       0       0       0       0
  4733 ;;Total ram usage:        4 bytes
  4734 ;; Hardware stack levels used: 1
  4735 ;; Hardware stack levels required when called: 1
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_init_disp_control
  4740 ;;		_clcd_ch
  4741 ;;		_clcd_print
  4742 ;;		_clear_screen
  4743 ;; This function uses a non-reentrant model
  4744 ;;
  4745                           
  4746     0F1D                     _clcd_write:	
  4747                           ;psect for function _clcd_write
  4748                           
  4749                           
  4750                           ;incstack = 0
  4751                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  4752                           ;clcd_write@byte stored from wreg
  4753     0F1D  00F5               	movwf	clcd_write@byte
  4754     0F1E                     l1545:
  4755                           
  4756                           ;clcd.c: 11:  void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 12: {;clcd
      +                          .c: 13:     RE2 = (__bit) mode;
  4757     0F1E  1872               	btfsc	clcd_write@mode,0
  4758     0F1F  2F21               	goto	u901
  4759     0F20  2F25               	goto	u900
  4760     0F21                     u901:
  4761     0F21  1283               	bcf	3,5	;RP0=0, select bank0
  4762     0F22  1303               	bcf	3,6	;RP1=0, select bank0
  4763     0F23  1509               	bsf	9,2	;volatile
  4764     0F24  2F28               	goto	u914
  4765     0F25                     u900:
  4766     0F25  1283               	bcf	3,5	;RP0=0, select bank0
  4767     0F26  1303               	bcf	3,6	;RP1=0, select bank0
  4768     0F27  1109               	bcf	9,2	;volatile
  4769     0F28                     u914:
  4770     0F28                     l1547:
  4771                           
  4772                           ;clcd.c: 15:     PORTD = byte & 0xF0;
  4773     0F28  0875               	movf	clcd_write@byte,w
  4774     0F29  39F0               	andlw	240
  4775     0F2A  0088               	movwf	8	;volatile
  4776     0F2B                     l1549:
  4777                           
  4778                           ;clcd.c: 16:     RE1 = 1;
  4779     0F2B  1489               	bsf	9,1	;volatile
  4780     0F2C                     l1551:
  4781                           
  4782                           ;clcd.c: 17:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4783     0F2C  30A6               	movlw	166
  4784     0F2D  00F3               	movwf	??_clcd_write
  4785     0F2E                     u2287:
  4786     0F2E  0BF3               	decfsz	??_clcd_write,f
  4787     0F2F  2F2E               	goto	u2287
  4788     0F30  0000               	nop
  4789     0F31                     l1553:
  4790                           
  4791                           ;clcd.c: 18:     RE1 = 0;
  4792     0F31  1283               	bcf	3,5	;RP0=0, select bank0
  4793     0F32  1303               	bcf	3,6	;RP1=0, select bank0
  4794     0F33  1089               	bcf	9,1	;volatile
  4795     0F34                     l1555:
  4796                           
  4797                           ;clcd.c: 20:     PORTD = (byte & 0x0F) << 4;
  4798     0F34  0875               	movf	clcd_write@byte,w
  4799     0F35  390F               	andlw	15
  4800     0F36  00F3               	movwf	??_clcd_write
  4801     0F37  3003               	movlw	3
  4802     0F38                     u925:
  4803     0F38  1003               	clrc
  4804     0F39  0DF3               	rlf	??_clcd_write,f
  4805     0F3A  3EFF               	addlw	-1
  4806     0F3B  1D03               	skipz
  4807     0F3C  2F38               	goto	u925
  4808     0F3D  1003               	clrc
  4809     0F3E  0D73               	rlf	??_clcd_write,w
  4810     0F3F  0088               	movwf	8	;volatile
  4811     0F40                     l1557:
  4812                           
  4813                           ;clcd.c: 21:     RE1 = 1;
  4814     0F40  1489               	bsf	9,1	;volatile
  4815     0F41                     l1559:
  4816                           
  4817                           ;clcd.c: 22:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4818     0F41  30A6               	movlw	166
  4819     0F42  00F3               	movwf	??_clcd_write
  4820     0F43                     u2297:
  4821     0F43  0BF3               	decfsz	??_clcd_write,f
  4822     0F44  2F43               	goto	u2297
  4823     0F45  0000               	nop
  4824     0F46                     l1561:
  4825                           
  4826                           ;clcd.c: 23:     RE1 = 0;
  4827     0F46  1283               	bcf	3,5	;RP0=0, select bank0
  4828     0F47  1303               	bcf	3,6	;RP1=0, select bank0
  4829     0F48  1089               	bcf	9,1	;volatile
  4830     0F49                     l1563:
  4831                           
  4832                           ;clcd.c: 25:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  4833     0F49  301B               	movlw	27
  4834     0F4A  00F4               	movwf	??_clcd_write+1
  4835     0F4B  309E               	movlw	158
  4836     0F4C  00F3               	movwf	??_clcd_write
  4837     0F4D                     u2307:
  4838     0F4D  0BF3               	decfsz	??_clcd_write,f
  4839     0F4E  2F4D               	goto	u2307
  4840     0F4F  0BF4               	decfsz	??_clcd_write+1,f
  4841     0F50  2F4D               	goto	u2307
  4842     0F51  0000               	nop
  4843     0F52                     l17:
  4844     0F52  0008               	return
  4845     0F53                     __end_of_clcd_write:
  4846                           
  4847                           	psect	text20
  4848     0EE8                     __ptext20:	
  4849 ;; *************** function _isr *****************
  4850 ;; Defined at:
  4851 ;;		line 5 in file "isr.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;		None
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;		None
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      void 
  4858 ;; Registers used:
  4859 ;;		wreg, status,2, status,0
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4865 ;;      Params:         0       0       0       0       0
  4866 ;;      Locals:         0       0       0       0       0
  4867 ;;      Temps:          2       0       0       0       0
  4868 ;;      Totals:         2       0       0       0       0
  4869 ;;Total ram usage:        2 bytes
  4870 ;; Hardware stack levels used: 1
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		Interrupt level 1
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878     0EE8                     _isr:	
  4879                           ;psect for function _isr
  4880                           
  4881     0EE8                     i1l2097:
  4882                           
  4883                           ;isr.c: 7:     static unsigned int count = 0;;isr.c: 9:     if (TMR2IF == 1)
  4884     0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  4885     0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  4886     0EEA  1C8C               	btfss	12,1	;volatile
  4887     0EEB  2EED               	goto	u168_21
  4888     0EEC  2EEE               	goto	u168_20
  4889     0EED                     u168_21:
  4890     0EED  2F16               	goto	i1l50
  4891     0EEE                     u168_20:
  4892     0EEE                     i1l2099:
  4893                           
  4894                           ;isr.c: 10:     {;isr.c: 11:         if (++count == 1250)
  4895     0EEE  3001               	movlw	1
  4896     0EEF  07FA               	addwf	isr@count,f
  4897     0EF0  1803               	skipnc
  4898     0EF1  0AFB               	incf	isr@count+1,f
  4899     0EF2  3000               	movlw	0
  4900     0EF3  07FB               	addwf	isr@count+1,f
  4901     0EF4  30E2               	movlw	226
  4902     0EF5  067A               	xorwf	isr@count,w
  4903     0EF6  3004               	movlw	4
  4904     0EF7  1903               	skipnz
  4905     0EF8  067B               	xorwf	isr@count+1,w
  4906     0EF9  1D03               	btfss	3,2
  4907     0EFA  2EFC               	goto	u169_21
  4908     0EFB  2EFD               	goto	u169_20
  4909     0EFC                     u169_21:
  4910     0EFC  2F15               	goto	i1l2115
  4911     0EFD                     u169_20:
  4912     0EFD                     i1l2101:
  4913                           
  4914                           ;isr.c: 12:         {;isr.c: 13:             count = 0;
  4915     0EFD  01FA               	clrf	isr@count
  4916     0EFE  01FB               	clrf	isr@count+1
  4917     0EFF                     i1l2103:
  4918                           
  4919                           ;isr.c: 15:             if(sec>0)
  4920     0EFF  083F               	movf	_sec,w
  4921     0F00  1903               	btfsc	3,2
  4922     0F01  2F03               	goto	u170_21
  4923     0F02  2F04               	goto	u170_20
  4924     0F03                     u170_21:
  4925     0F03  2F07               	goto	i1l2107
  4926     0F04                     u170_20:
  4927     0F04                     i1l2105:
  4928                           
  4929                           ;isr.c: 16:             {;isr.c: 17:                 sec--;
  4930     0F04  3001               	movlw	1
  4931     0F05  02BF               	subwf	_sec,f
  4932                           
  4933                           ;isr.c: 18:             }
  4934     0F06  2F15               	goto	i1l2115
  4935     0F07                     i1l2107:
  4936     0F07  083F               	movf	_sec,w
  4937     0F08  1D03               	btfss	3,2
  4938     0F09  2F0B               	goto	u171_21
  4939     0F0A  2F0C               	goto	u171_20
  4940     0F0B                     u171_21:
  4941     0F0B  2F15               	goto	i1l2115
  4942     0F0C                     u171_20:
  4943     0F0C                     i1l2109:
  4944     0F0C  083E               	movf	_min,w
  4945     0F0D  1903               	btfsc	3,2
  4946     0F0E  2F10               	goto	u172_21
  4947     0F0F  2F11               	goto	u172_20
  4948     0F10                     u172_21:
  4949     0F10  2F15               	goto	i1l2115
  4950     0F11                     u172_20:
  4951     0F11                     i1l2111:
  4952                           
  4953                           ;isr.c: 20:             {;isr.c: 21:                 min--;
  4954     0F11  3001               	movlw	1
  4955     0F12  02BE               	subwf	_min,f
  4956     0F13                     i1l2113:
  4957                           
  4958                           ;isr.c: 22:                 sec = 59;
  4959     0F13  303B               	movlw	59
  4960     0F14  00BF               	movwf	_sec
  4961     0F15                     i1l2115:
  4962                           
  4963                           ;isr.c: 28:         TMR2IF = 0;
  4964     0F15  108C               	bcf	12,1	;volatile
  4965     0F16                     i1l50:
  4966     0F16  0871               	movf	??_isr+1,w
  4967     0F17  008A               	movwf	10
  4968     0F18  0E70               	swapf	??_isr,w
  4969     0F19  0083               	movwf	3
  4970     0F1A  0EFE               	swapf	btemp,f
  4971     0F1B  0E7E               	swapf	btemp,w
  4972     0F1C  0009               	retfie
  4973     0F1D                     __end_of_isr:
  4974     0002                     ___latbits      equ	2
  4975     007E                     btemp           set	126	;btemp
  4976     007E                     wtemp0          set	126
  4977                           
  4978                           	psect	intentry
  4979     0004                     __pintentry:	
  4980                           ;incstack = 0
  4981                           ; Regs used in _isr: [wreg+status,2+status,0]
  4982                           
  4983     0004                     interrupt_function:
  4984     007E                     saved_w         set	btemp
  4985     0004  00FE               	movwf	btemp
  4986     0005  0E03               	swapf	3,w
  4987     0006  00F0               	movwf	??_isr
  4988     0007  080A               	movf	10,w
  4989     0008  00F1               	movwf	??_isr+1
  4990     0009  120A  158A  2EE8   	ljmp	_isr
  4991                           
  4992                           	psect	config
  4993                           
  4994                           ;Config register CONFIG @ 0x2007
  4995                           ;	Oscillator Selection bits
  4996                           ;	FOSC = 0x3, unprogrammed default
  4997                           ;	Watchdog Timer Enable bit
  4998                           ;	WDTE = OFF, WDT disabled
  4999                           ;	Power-up Timer Enable bit
  5000                           ;	PWRTE = 0x1, unprogrammed default
  5001                           ;	Brown-out Reset Enable bit
  5002                           ;	BOREN = 0x1, unprogrammed default
  5003                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5004                           ;	LVP = 0x1, unprogrammed default
  5005                           ;	Data EEPROM Memory Code Protection bit
  5006                           ;	CPD = 0x1, unprogrammed default
  5007                           ;	Flash Program Memory Write Enable bits
  5008                           ;	WRT = 0x3, unprogrammed default
  5009                           ;	In-Circuit Debugger Mode bit
  5010                           ;	DEBUG = 0x1, unprogrammed default
  5011                           ;	Flash Program Memory Code Protection bit
  5012                           ;	CP = 0x1, unprogrammed default
  5013     2007                     	org	8199
  5014     2007  3FFB               	dw	16379

Data Sizes:
    Strings     236
    Constant    0
    Data        4
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     19      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_10(CODE[17]), STR_11(CODE[3]), STR_12(CODE[3]), 
		 -> STR_13(CODE[8]), STR_14(CODE[15]), STR_15(CODE[8]), STR_16(CODE[7]), 
		 -> STR_17(CODE[16]), STR_18(CODE[15]), STR_19(CODE[9]), STR_2(CODE[17]), 
		 -> STR_20(CODE[17]), STR_21(CODE[4]), STR_22(CODE[15]), STR_23(CODE[13]), 
		 -> STR_3(CODE[17]), STR_4(CODE[8]), STR_5(CODE[8]), STR_6(CODE[13]), 
		 -> STR_7(CODE[8]), STR_8(CODE[17]), STR_9(CODE[8]), 


Critical Paths under _main in COMMON

    _time_screen->___awdiv
    _set_time->___awdiv
    _set_temp->___awdiv
    _clear_screen->_clcd_write
    ___awmod->___awdiv
    _read_key->_scan_key
    _clcd_ch->___awdiv
    _menu->_clcd_print
    _clcd_print->_clcd_write
    _init_clcd->_init_disp_control
    _init_disp_control->_clcd_write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_set_temp
    _main->_set_time
    _time_screen->_clcd_ch
    _set_time->_clcd_ch
    _set_temp->_clcd_ch
    _power_screen->_clcd_ch
    _clcd_ch->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    5860
                                             13 BANK0      6     6      0
                         _clcd_print
                       _clear_screen
                        _init_config
                               _menu
                       _power_screen
                           _read_key
                           _set_temp
                           _set_time
                        _time_screen
 ---------------------------------------------------------------------------------
 (1) _time_screen                                          3     3      0    1062
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                            _clcd_ch
                         _clcd_print
                       _clear_screen
 ---------------------------------------------------------------------------------
 (1) _set_time                                             5     3      2    1545
                                              8 BANK0      5     3      2
                            ___awdiv
                            ___awmod
                             ___bmul
                            _clcd_ch
                         _clcd_print
                       _clear_screen
 ---------------------------------------------------------------------------------
 (1) _set_temp                                             5     3      2    1369
                                              8 BANK0      5     3      2
                            ___awdiv
                            ___awmod
                             ___bmul
                            _clcd_ch
                         _clcd_print
                       _clear_screen
 ---------------------------------------------------------------------------------
 (2) _clear_screen                                         2     2      0      91
                                              6 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     108
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     302
                                              0 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     304
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _read_key                                             2     2      0     279
                                              4 COMMON     2     2      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             2     2      0     161
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _power_screen                                         4     4      0     501
                                              8 BANK0      4     4      0
                            _clcd_ch
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_ch                                              2     1      1     161
                                              6 BANK0      2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _menu                                                 0     0      0     204
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           2     0      2     204
                                              6 COMMON     2     0      2
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0      91
                          _init_clcd
                        _init_matrix
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0      91
                  _init_disp_control
 ---------------------------------------------------------------------------------
 (3) _init_disp_control                                    2     2      0      91
                                              6 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           4     3      1      91
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clear_screen
     _clcd_write
   _init_config
     _init_clcd
       _init_disp_control
         _clcd_write
     _init_matrix
     _init_timer2
   _menu
     _clcd_print
   _power_screen
     _clcd_ch
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _clcd_write (ARG)
     _clcd_print
   _read_key
     _scan_key
   _set_temp
     ___awdiv
     ___awmod
     ___bmul
     _clcd_ch
     _clcd_print
     _clear_screen
   _set_time
     ___awdiv
     ___awmod
     ___bmul
     _clcd_ch
     _clcd_print
     _clear_screen
   _time_screen
     ___awdiv
     ___awmod
     _clcd_ch
     _clcd_print
     _clear_screen

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     19      36     45.0%
BITBANK0            80      0       0      0.0%
COMMON              14     10      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      49      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Mar 04 19:25:19 2025

                        pc 0002             ___bmul@product 0073             clcd_print@addr 0077  
                       l20 0FA6                         l23 0E24                         l32 0E97  
                       l17 0F52                         l26 04FF               ___awdiv@sign 0077  
                       fsr 0004                        l103 0E72                        l111 0265  
                      l140 0301                        l215 01D3                        l153 07EE  
                      l146 07FF                        l251 0711                        l243 06E2  
                      l156 0EBC                        l260 0754                        l252 0719  
                      l244 06EA                        l261 074E                        l253 0725  
                      l245 0784                        l405 0E54                        l238 0E41  
                      l254 071F                        l246 06F6                        l247 06F0  
                      l184 0487                        l265 076F                        l266 0777  
                      l258 0740                        l259 0748                        l268 077D  
                      l276 0EE7                        l532 04EA                        l188 06C9  
                      l293 0E31                        l277 0EE6                        l545 0FFF  
                      _GIE 005F                        _RB0 0030                        _RB1 0031  
                      _RB2 0032                        _RC1 0039                        _RC2 003A  
                      _RD0 0040                        _RD1 0041                        _RD2 0042  
                      _RE1 0049                        _RD3 0043                        _RE2 004A  
                      _PR2 0092                        u900 0F25                        u901 0F21  
                      u914 0F28                        u930 0E97                        u931 0E96  
                      u940 06E2                        u925 0F38                        u941 06E1  
                      u950 06E8                        u951 06E7                        u960 06EE  
                      u961 06ED                        u970 06F4                        u971 06F3  
                      u980 0711                        u981 0710                        u990 0717  
                      u991 0716                        u985 070D                        _min 003E  
                      _sec 003F                        _isr 0EE8                        fsr0 0004  
             ___awmod@sign 0025                       l2001 0088                       l2003 008E  
                     l2011 00A8                       l2021 00C2                       l2013 00AE  
                     l2005 0093                       l2031 013C                       l2023 00CB  
                     l2015 00B1                       l2007 0095                       l2033 0143  
                     l2025 00D4                       l2041 0152                       l2017 00B7  
                     l2009 009B                       l2051 01AE                       l2043 015F  
                     l2035 0148                       l2027 00D8                       l2019 00BD  
                     l2045 0161                       l2037 014D                       l2029 00DA  
                     l2053 01CC                       l2301 03AF                       l2061 0616  
                     l2047 0169                       l2039 0151                       l2303 03B5  
                     l2311 03C1                       l2071 067E                       l2063 0633  
                     l1601 0E8B                       l2049 0182                       l2313 03C7  
                     l2305 03BA                       l2321 03D4                       l2081 06A1  
                     l2073 0687                       l2065 063D                       l2057 05F2  
                     l2401 026D                       l1611 0E3F                       l1603 0E32  
                     l2331 0421                       l2323 03E1                       l2315 03CC  
                     l2307 03BD                       l2091 06C3                       l2083 06AA  
                     l2075 0690                       l2067 0658                       l2059 05FB  
                     l2411 0288                       l2403 0273                       l1613 0E40  
                     l1605 0E3A                       l1701 075C                       l1621 06CA  
                     l2341 046B                       l2333 042B                       l2325 03E3  
                     l2317 03D2                       l2309 03BE                       l2093 06C4  
                     l2085 06AD                       l2077 0697                       l2069 0675  
                     l2421 02A5                       l2413 028D                       l2405 0276  
                     l1551 0F2C                       l1607 0E3B                       l1615 0E25  
                     l1711 077B                       l1703 0762                       l1623 06D0  
                     l2343 0475                       l2335 0446                       l2327 03EB  
                     l2319 03D3                       l2271 034E                       l2095 06C5  
                     l2087 06BB                       l2079 069C                       l2431 02B9  
                     l2415 0293                       l2407 027C                       l2351 01D9  
                     l1561 0F46                       l1553 0F31                       l1545 0F1E  
                     l1609 0E3E                       l1721 0783                       l1705 0775  
                     l1633 06EE                       l1625 06D4                       l1801 0FCE  
                     l1617 07EF                       l2329 0404                       l2337 0463  
                     l2281 0373                       l2273 0350                       l2089 06C0  
                     l2441 02E4                       l2433 02BF                       l2425 02A8  
                     l2409 0282                       l2417 0298                       l2361 01FB  
                     l2353 01E2                       l1563 0F49                       l1555 0F34  
                     l1547 0F28                       l1571 0F6F                       l1651 0704  
                     l1643 06FA                       l1627 06E8                       l1811 0FEB  
                     l1803 0FD0                       l1731 0E4A                       l1619 07F6  
                     l2347 047F                       l2291 0392                       l2283 0379  
                     l2275 0359                       l2267 0340                       l2451 0309  
                     l2443 02EB                       l2435 02CA                       l2427 02AD  
                     l2419 029F                       l2371 022C                       l2363 0209  
                     l2355 01E9                       l1557 0F40                       l1549 0F2B  
                     l1581 0F91                       l1573 0F74                       l1565 0F53  
                     l1821 0E55                       l1717 0781                       l1653 0717  
                     l1741 0489                       l1805 0FD4                       l1813 0FF1  
                     l1733 0E4C                       l1725 0E43                       l2293 0394  
                     l2285 037E                       l2277 0362                       l2269 0347  
                     l2453 030C                       l2445 02F0                       l2437 02D5  
                     l2461 0333                       l2429 02B3                       l2381 0247  
                     l2373 0231                       l2365 0212                       l2357 01EE  
                     l2349 01D4                       l1559 0F41                       l1583 0F9A  
                     l1575 0F7B                       l1567 0F58                       l1591 0E1F  
                     l1831 0E6B                       l1823 0E5F                       l1639 06F4  
                     l1751 049D                       l1743 048D                       l1815 0FF6  
                     l1807 0FDE                       l1735 0E53                       l1727 0E44  
                     l2295 039A                       l2287 0380                       l2279 036B  
                     l2455 030D                       l2447 02FB                       l2439 02DA  
                     l2391 025D                       l2375 0237                       l2367 0220  
                     l2359 01F6                       l1577 0F7E                       l1569 0F5F  
                     l1585 0E1A                       l1833 0E70                       l1825 0E62  
                     l1593 04EE                       l1665 0723                       l1649 06FE  
                     l1841 0EC9                       l1761 04B1                       l1753 049F  
                     l1745 0492                       l1817 0FFB                       l1809 0FE4  
                     l1729 0E48                       l2297 03A0                       l2289 0386  
                     l2449 0304                       l2393 025E                       l2385 024E  
                     l2377 023C                       l2369 0226                       l1579 0F85  
                     l1587 0E1D                       l1835 0E71                       l1827 0E65  
                     l1595 0E73                       l1691 0752                       l1675 072D  
                     l1659 071D                       l1851 0ED8                       l1771 04CF  
                     l1763 04B3                       l1755 04A1                       l1747 0494  
                     l1739 0488                       l2299 03AC                       l2395 025F  
                     l2387 0254                       l2379 0242                       l2459 0312  
                     l1589 0E1E                       l1829 0E68                       l1597 0E7B  
                     l1685 074C                       l1677 0733                       l1669 0729  
                     l1861 0EE0                       l1837 0EBE                       l1773 04D6  
                     l1765 04B7                       l1757 04A7                       l1749 0498  
                     l2397 0260                       l2389 0259                       l1599 0E89  
                     l1871 0788                       l1695 0758                       l1679 0746  
                     l1847 0ECB                       l1839 0EC4                       l1767 04C8  
                     l1759 04AA                       l1775 04DC                       l1791 0FB5  
                     l1783 0FA7                       l2399 0266                       l1881 07BB  
                     l1873 0791                       l1865 0785                       l1849 0ED0  
                     l1777 04E1                       l1769 04CE                       l1793 0FB9  
                     l1785 0FAA                       l1891 07D5                       l1875 079F  
                     l1859 0EDB                       l1779 04E6                       l1795 0FBE  
                     l1787 0FAE                       l2499 0319                       l1893 07D9  
                     l1877 07A3                       l1797 0FC4                       l1789 0FB3  
                     l1981 003D                       l1895 07DF                       l1887 07BE  
                     l1879 07A9                       l1799 0FC7                       l1991 005E  
                     l1983 0044                       l1897 0E98                       l1889 07C7  
                     l1993 0067                       l1985 0049                       l1987 004B  
                     l1995 0070                       l1997 0077                       l1989 0054  
                     l1999 0080                       ?_isr 0070                       STR_1 0517  
                     STR_2 0506                       STR_3 0528                       STR_4 05DB  
                     STR_5 05D3                       STR_6 05A5                       STR_7 05E3  
                     STR_8 0539                       STR_9 05BB                       u1000 071D  
                     u1001 071C                       u1010 0723                       u1011 0722  
                     u1020 0740                       u1100 0E48                       u1021 073F  
                     u1101 0E47                       u1030 0746                       u1110 0E53  
                     u1031 0745                       u1111 0E52                       u1040 074C  
                     u1200 04DC                       u1120 048D                       u2000 046A  
                     u1041 074B                       u1025 073C                       u1201 04DB  
                     u1121 048C                       u2001 0469                       u1050 0752  
                     u1210 04E1                       u1130 0498                       u2010 01E9  
                     u1051 0751                       u1211 04E0                       u1131 0497  
                     u2011 01E8                       u1060 076F                       u1140 04A7  
                     u1300 0FF6                       u1220 0FAE                       u2100 0293  
                     u2020 01EE                       u1061 076E                       u1141 04A6  
                     u1301 0FF5                       u1221 0FAD                       u2101 0292  
                     u2021 01ED                       u1070 0775                       u1310 0EC9  
                     u1230 0FB9                       u2110 029F                       u2030 022C  
                     u1071 0774                       u1311 0EC8                       u1231 0FB8  
                     u2111 029E                       u2031 022B                       u1080 077B  
                     u1320 0ED0                       u1160 04B7                       u1240 0FC4  
                     u2120 02A5                       u2040 0242                       u1081 077A  
                     u1065 076B                       u1321 0ECF                       u1161 04B6  
                     u1241 0FC3                       u2121 02A4                       u2041 0241  
                     u1090 0781                       u1330 0ED8                       u2130 02DA  
                     u2050 0254                       u1091 0780                       u1331 0ED7  
                     u1155 04AB                       u2131 02D9                       u2051 0253  
                     u1340 0EE0                       u1180 04C8                       u1260 0FD4  
                     u2140 02EB                       u2060 026D                       u1341 0EDF  
                     u1181 04C7                       u1261 0FD3                       u2141 02EA  
                     u2061 026C                       u1350 07A9                       u1270 0FDE  
                     u1510 0044                       u2070 0273                       u2207 07CF  
                     u1351 07A8                       u1175 04B8                       u1271 0FDD  
                     u1255 0FC8                       u1511 0043                       u2071 0272  
                     u1360 07DF                       u1600 0143                       u1520 0077  
                     u2080 027C                       u2217 07E7                       u1361 07DE  
                     u1185 04C4                       u1601 0142                       u1521 0076  
                     u2081 027B                       u1290 0FF1                       u1610 0148  
                     u1530 0088                       u2090 0288                       u2307 0F4D  
                     u2227 0F55                       u1195 04D0                       u1291 0FF0  
                     u1275 0FDA                       u1611 0147                       u1531 0087  
                     u2091 0287                       u1620 015F                       u1540 008E  
                     u2237 0F63                       u1285 0FE5                       u1621 015E  
                     u1541 008D                       u2157 0203                       u1630 0167  
                     u1550 0093                       u2247 0F71                       u1631 0165  
                     u1551 0092                       u2167 021A                       u1640 0168  
                     u1560 009B                       u2257 0F87                       u1561 009A  
                     u2177 06B5                       u1650 01D2                       u1570 00AE  
                     u2267 0F95                       u2187 07FA                       u1651 01D1  
                     u1571 00AD                       u1580 00B7                       u1900 037E  
                     u1660 0697                       u2277 0FA3                       u2197 0799  
                     u1581 00B6                       u1901 037D                       u1661 0696  
                     u1590 00BD                       u1910 0386                       u1670 069C  
                     u2287 0F2E                       u1591 00BC                       u1911 0385  
                     u1671 069B                       u1920 039A                       u2297 0F43  
                     u1921 0399                       u1930 03A0                       u1931 039F  
                     u1940 03B5                       u1941 03B4                       u1950 03BA  
                     u1870 0347                       u1951 03B9                       u1871 0346  
                     u1960 03C7                       u1880 0373                       u1961 03C6  
                     u1881 0372                       u1970 03E1                       u1890 0379  
                     u1971 03E0                       u1891 0378                       _PEIE 005E  
                     u1980 03E9                       u1981 03E7                       u1990 03EA  
                     i1l50 0F16                       _flag 003D                       _main 01D4  
                     _menu 0E98                       btemp 007E                       start 000C  
        ___bmul@multiplier 0074             clcd_write@byte 0075             clcd_write@mode 0072  
                    ??_isr 0070                      ?_main 0070                      ?_menu 0070  
          __end_of___awdiv 04EB                      STR_10 054A                      STR_11 0568  
                    STR_12 0568                      STR_20 054A                      STR_21 0567  
                    STR_13 05C3                      STR_14 0589                      STR_22 057A  
                    STR_15 05CB                      STR_23 0598                      STR_16 05EB  
                    STR_17 055B                      STR_18 056B                      STR_19 05B2  
          __end_of___awmod 1000            ___awdiv@divisor 0072               ?_init_config 0070  
          ___awdiv@counter 0076                      _PORTD 0008                      _TRISB 0086  
                    _TRISD 0088               ?_init_matrix 0070            __end_of_clcd_ch 0500  
             ?_init_timer2 0070       __end_of_clear_screen 0800                      _nRBPU 040F  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 000F               __end_of_main 033D               __end_of_menu 0EBD  
                   ??_main 002D                     ??_menu 0078           ___awdiv@dividend 0074  
                   i1l2101 0EFD                     i1l2111 0F11                     i1l2103 0EFF  
                   i1l2113 0F13                     i1l2105 0F04                     i1l2107 0F07  
                   i1l2115 0F15                     i1l2109 0F0C                     i1l2097 0EE8  
                   i1l2099 0EEE                     u170_20 0F04                     u170_21 0F03  
                   u171_20 0F0C                     u171_21 0F0B                     u172_20 0F11  
                   u172_21 0F10                     u168_20 0EEE                     u168_21 0EED  
                   u169_20 0EFD                     u169_21 0EFC                     _TMR2IE 0461  
                   _TMR2IF 0061                     _TMR2ON 0092                     _TRISC1 0439  
                   _TRISC2 043A                     _TRISE1 0449                     _TRISE2 044A  
                   ___bmul 0E42                  ??___awdiv 0076                  ??___awmod 007A  
         __end_of_read_key 0EE8                  ??_clcd_ch 007A           ___awdiv@quotient 0078  
          ___awmod@divisor 0020           __end_of_scan_key 0785            ___awmod@counter 0024  
             ?_time_screen 0070           __end_of_set_temp 01D4           __end_of_set_time 0488  
                   saved_w 007E                read_key@key 0075              power_screen@i 002B  
  __end_of__initialization 0036        ___bmul@multiplicand 0072             __pcstackCOMMON 0070  
             __pidataBANK0 0E16                 __pbssBANK0 0033                 _clcd_print 0E73  
               _clcd_write 0F1D                 __pmaintext 01D4               _clear_screen 07EF  
                  ?___bmul 0072                 __pintentry 0004                    _T2CKPS0 0090  
                  _T2CKPS1 0091                 __stringtab 0500                  ?_read_key 0070  
                ?_scan_key 0070                  ?_set_temp 0028                  ?_set_time 0028  
                  ___awdiv 0488                    ___awmod 0FA7                    _clcd_ch 04EB  
                  __ptext1 05F2                    __ptext2 033D                    __ptext3 003A  
                  __ptext4 07EF                    __ptext5 0E42                    __ptext6 0FA7  
                  __ptext7 0488                    __ptext8 0EBD                    __ptext9 06CA  
        __end_of_init_clcd 0E25           ___awmod@dividend 0022             main@reset_flag 0030  
                  main@key 0032       end_of_initialization 0036                set_temp@key 002C  
              set_time@key 002C                 ??_read_key 0074             _operation_flag 0042  
               ??_scan_key 0072                ?_clcd_print 0076                ?_clcd_write 0072  
             read_key@MODE 0074                 ??_set_temp 002A                 ??_set_time 002A  
             read_key@once 0040              clcd_print@str 0076         set_temp@reset_flag 0028  
            ?_power_screen 0070             __end_of___bmul 0E55        start_initialization 000F  
              __end_of_isr 0F1D             ??_power_screen 0028                   ??___bmul 0073  
              __pdataBANK0 0040              ??_init_config 0078              ??_init_matrix 0072  
            ??_init_timer2 0072                __pbssCOMMON 007A                  ___latbits 0002  
            __pcstackBANK0 0020                   ?___awdiv 0072                   ?___awmod 0020  
                 ?_clcd_ch 0026                  __pstrings 0500         set_time@reset_flag 0028  
                _init_clcd 0E1A        __end_of_init_config 0E73        __end_of_init_matrix 0E42  
      __end_of_init_timer2 0E32          interrupt_function 0004               ??_clcd_print 0078  
             ??_clcd_write 0073          set_temp@key_count 0039                __stringbase 0505  
            ??_time_screen 0028       __end_of_power_screen 07EF         __end_of_clcd_print 0E98  
       __end_of_clcd_write 0F53                 ?_init_clcd 0070          set_time@blink_pos 003B  
        _init_disp_control 0F53              set_temp@blink 0038         ?_init_disp_control 0070  
            set_time@blink 003A        ??_init_disp_control 0076         __end_of__stringtab 0506  
                scan_key@i 0072          set_time@key_count 003C                _init_config 0E55  
              _init_matrix 0E32                _init_timer2 0E25                   __ptext10 0785  
                 __ptext11 04EB                   __ptext20 0EE8                   __ptext12 0E98  
                 __ptext13 0E73                   __ptext14 0E55                   __ptext15 0E25  
                 __ptext16 0E32                   __ptext17 0E1A                   __ptext18 0F53  
                 __ptext19 0F1D        __end_of_time_screen 06CA                clcd_ch@addr 0026  
              clcd_ch@data 0027  __end_of_init_disp_control 0FA7                   _read_key 0EBD  
                 _scan_key 06CA              ?_clear_screen 0070                   _set_temp 003A  
                 _set_time 033D                   isr@count 007A               set_temp@temp 0037  
             set_temp@wait 0033               set_time@wait 0035                ??_init_clcd 0078  
                 intlevel1 0000                  stringcode 0500             ??_clear_screen 0076  
              _time_screen 05F2                   stringdir 0500                   stringtab 0500  
             _power_screen 0785  
